{"ast":null,"code":"import { Util, Transform } from './Util.js';\nimport { Factory } from './Factory.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { Konva } from './Global.js';\nimport { DD } from './DragAndDrop.js';\nimport { getNumberValidator, getStringValidator, getBooleanValidator } from './Validators.js';\nvar ABSOLUTE_OPACITY = 'absoluteOpacity',\n    ALL_LISTENERS = 'allEventListeners',\n    ABSOLUTE_TRANSFORM = 'absoluteTransform',\n    ABSOLUTE_SCALE = 'absoluteScale',\n    CANVAS = 'canvas',\n    CHANGE = 'Change',\n    CHILDREN = 'children',\n    KONVA = 'konva',\n    LISTENING = 'listening',\n    MOUSEENTER = 'mouseenter',\n    MOUSELEAVE = 'mouseleave',\n    NAME = 'name',\n    SET = 'set',\n    SHAPE = 'Shape',\n    SPACE = ' ',\n    STAGE = 'stage',\n    TRANSFORM = 'transform',\n    UPPER_STAGE = 'Stage',\n    VISIBLE = 'visible',\n    TRANSFORM_CHANGE_STR = ['xChange.konva', 'yChange.konva', 'scaleXChange.konva', 'scaleYChange.konva', 'skewXChange.konva', 'skewYChange.konva', 'rotationChange.konva', 'offsetXChange.konva', 'offsetYChange.konva', 'transformsEnabledChange.konva'].join(SPACE);\nlet idCounter = 1;\nexport class Node {\n  constructor(config) {\n    this._id = idCounter++;\n    this.eventListeners = {};\n    this.attrs = {};\n    this.index = 0;\n    this._allEventListeners = null;\n    this.parent = null;\n    this._cache = new Map();\n    this._attachedDepsListeners = new Map();\n    this._lastPos = null;\n    this._batchingTransformChange = false;\n    this._needClearTransformCache = false;\n    this._filterUpToDate = false;\n    this._isUnderCache = false;\n    this._dragEventId = null;\n    this._shouldFireChangeEvents = false;\n    this.setAttrs(config);\n    this._shouldFireChangeEvents = true;\n  }\n\n  hasChildren() {\n    return false;\n  }\n\n  _clearCache(attr) {\n    if ((attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM) && this._cache.get(attr)) {\n      this._cache.get(attr).dirty = true;\n    } else if (attr) {\n      this._cache.delete(attr);\n    } else {\n      this._cache.clear();\n    }\n  }\n\n  _getCache(attr, privateGetter) {\n    var cache = this._cache.get(attr);\n\n    var isTransform = attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM;\n    var invalid = cache === undefined || isTransform && cache.dirty === true;\n\n    if (invalid) {\n      cache = privateGetter.call(this);\n\n      this._cache.set(attr, cache);\n    }\n\n    return cache;\n  }\n\n  _calculate(name, deps, getter) {\n    if (!this._attachedDepsListeners.get(name)) {\n      const depsString = deps.map(dep => dep + 'Change.konva').join(SPACE);\n      this.on(depsString, () => {\n        this._clearCache(name);\n      });\n\n      this._attachedDepsListeners.set(name, true);\n    }\n\n    return this._getCache(name, getter);\n  }\n\n  _getCanvasCache() {\n    return this._cache.get(CANVAS);\n  }\n\n  _clearSelfAndDescendantCache(attr) {\n    this._clearCache(attr);\n\n    if (attr === ABSOLUTE_TRANSFORM) {\n      this.fire('absoluteTransformChange');\n    }\n  }\n\n  clearCache() {\n    this._cache.delete(CANVAS);\n\n    this._clearSelfAndDescendantCache();\n\n    this._requestDraw();\n\n    return this;\n  }\n\n  cache(config) {\n    var conf = config || {};\n    var rect = {};\n\n    if (conf.x === undefined || conf.y === undefined || conf.width === undefined || conf.height === undefined) {\n      rect = this.getClientRect({\n        skipTransform: true,\n        relativeTo: this.getParent()\n      });\n    }\n\n    var width = Math.ceil(conf.width || rect.width),\n        height = Math.ceil(conf.height || rect.height),\n        pixelRatio = conf.pixelRatio,\n        x = conf.x === undefined ? Math.floor(rect.x) : conf.x,\n        y = conf.y === undefined ? Math.floor(rect.y) : conf.y,\n        offset = conf.offset || 0,\n        drawBorder = conf.drawBorder || false,\n        hitCanvasPixelRatio = conf.hitCanvasPixelRatio || 1;\n\n    if (!width || !height) {\n      Util.error('Can not cache the node. Width or height of the node equals 0. Caching is skipped.');\n      return;\n    }\n\n    width += offset * 2 + 1;\n    height += offset * 2 + 1;\n    x -= offset;\n    y -= offset;\n    var cachedSceneCanvas = new SceneCanvas({\n      pixelRatio: pixelRatio,\n      width: width,\n      height: height\n    }),\n        cachedFilterCanvas = new SceneCanvas({\n      pixelRatio: pixelRatio,\n      width: 0,\n      height: 0\n    }),\n        cachedHitCanvas = new HitCanvas({\n      pixelRatio: hitCanvasPixelRatio,\n      width: width,\n      height: height\n    }),\n        sceneContext = cachedSceneCanvas.getContext(),\n        hitContext = cachedHitCanvas.getContext();\n    cachedHitCanvas.isCache = true;\n    cachedSceneCanvas.isCache = true;\n\n    this._cache.delete(CANVAS);\n\n    this._filterUpToDate = false;\n\n    if (conf.imageSmoothingEnabled === false) {\n      cachedSceneCanvas.getContext()._context.imageSmoothingEnabled = false;\n      cachedFilterCanvas.getContext()._context.imageSmoothingEnabled = false;\n    }\n\n    sceneContext.save();\n    hitContext.save();\n    sceneContext.translate(-x, -y);\n    hitContext.translate(-x, -y);\n    this._isUnderCache = true;\n\n    this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n\n    this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n\n    this.drawScene(cachedSceneCanvas, this);\n    this.drawHit(cachedHitCanvas, this);\n    this._isUnderCache = false;\n    sceneContext.restore();\n    hitContext.restore();\n\n    if (drawBorder) {\n      sceneContext.save();\n      sceneContext.beginPath();\n      sceneContext.rect(0, 0, width, height);\n      sceneContext.closePath();\n      sceneContext.setAttr('strokeStyle', 'red');\n      sceneContext.setAttr('lineWidth', 5);\n      sceneContext.stroke();\n      sceneContext.restore();\n    }\n\n    this._cache.set(CANVAS, {\n      scene: cachedSceneCanvas,\n      filter: cachedFilterCanvas,\n      hit: cachedHitCanvas,\n      x: x,\n      y: y\n    });\n\n    this._requestDraw();\n\n    return this;\n  }\n\n  isCached() {\n    return this._cache.has(CANVAS);\n  }\n\n  getClientRect(config) {\n    throw new Error('abstract \"getClientRect\" method call');\n  }\n\n  _transformedRect(rect, top) {\n    var points = [{\n      x: rect.x,\n      y: rect.y\n    }, {\n      x: rect.x + rect.width,\n      y: rect.y\n    }, {\n      x: rect.x + rect.width,\n      y: rect.y + rect.height\n    }, {\n      x: rect.x,\n      y: rect.y + rect.height\n    }];\n    var minX, minY, maxX, maxY;\n    var trans = this.getAbsoluteTransform(top);\n    points.forEach(function (point) {\n      var transformed = trans.point(point);\n\n      if (minX === undefined) {\n        minX = maxX = transformed.x;\n        minY = maxY = transformed.y;\n      }\n\n      minX = Math.min(minX, transformed.x);\n      minY = Math.min(minY, transformed.y);\n      maxX = Math.max(maxX, transformed.x);\n      maxY = Math.max(maxY, transformed.y);\n    });\n    return {\n      x: minX,\n      y: minY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  }\n\n  _drawCachedSceneCanvas(context) {\n    context.save();\n\n    context._applyOpacity(this);\n\n    context._applyGlobalCompositeOperation(this);\n\n    const canvasCache = this._getCanvasCache();\n\n    context.translate(canvasCache.x, canvasCache.y);\n\n    var cacheCanvas = this._getCachedSceneCanvas();\n\n    var ratio = cacheCanvas.pixelRatio;\n    context.drawImage(cacheCanvas._canvas, 0, 0, cacheCanvas.width / ratio, cacheCanvas.height / ratio);\n    context.restore();\n  }\n\n  _drawCachedHitCanvas(context) {\n    var canvasCache = this._getCanvasCache(),\n        hitCanvas = canvasCache.hit;\n\n    context.save();\n    context.translate(canvasCache.x, canvasCache.y);\n    context.drawImage(hitCanvas._canvas, 0, 0, hitCanvas.width / hitCanvas.pixelRatio, hitCanvas.height / hitCanvas.pixelRatio);\n    context.restore();\n  }\n\n  _getCachedSceneCanvas() {\n    var filters = this.filters(),\n        cachedCanvas = this._getCanvasCache(),\n        sceneCanvas = cachedCanvas.scene,\n        filterCanvas = cachedCanvas.filter,\n        filterContext = filterCanvas.getContext(),\n        len,\n        imageData,\n        n,\n        filter;\n\n    if (filters) {\n      if (!this._filterUpToDate) {\n        var ratio = sceneCanvas.pixelRatio;\n        filterCanvas.setSize(sceneCanvas.width / sceneCanvas.pixelRatio, sceneCanvas.height / sceneCanvas.pixelRatio);\n\n        try {\n          len = filters.length;\n          filterContext.clear();\n          filterContext.drawImage(sceneCanvas._canvas, 0, 0, sceneCanvas.getWidth() / ratio, sceneCanvas.getHeight() / ratio);\n          imageData = filterContext.getImageData(0, 0, filterCanvas.getWidth(), filterCanvas.getHeight());\n\n          for (n = 0; n < len; n++) {\n            filter = filters[n];\n\n            if (typeof filter !== 'function') {\n              Util.error('Filter should be type of function, but got ' + typeof filter + ' instead. Please check correct filters');\n              continue;\n            }\n\n            filter.call(this, imageData);\n            filterContext.putImageData(imageData, 0, 0);\n          }\n        } catch (e) {\n          Util.error('Unable to apply filter. ' + e.message + ' This post my help you https://konvajs.org/docs/posts/Tainted_Canvas.html.');\n        }\n\n        this._filterUpToDate = true;\n      }\n\n      return filterCanvas;\n    }\n\n    return sceneCanvas;\n  }\n\n  on(evtStr, handler) {\n    this._cache && this._cache.delete(ALL_LISTENERS);\n\n    if (arguments.length === 3) {\n      return this._delegate.apply(this, arguments);\n    }\n\n    var events = evtStr.split(SPACE),\n        len = events.length,\n        n,\n        event,\n        parts,\n        baseEvent,\n        name;\n\n    for (n = 0; n < len; n++) {\n      event = events[n];\n      parts = event.split('.');\n      baseEvent = parts[0];\n      name = parts[1] || '';\n\n      if (!this.eventListeners[baseEvent]) {\n        this.eventListeners[baseEvent] = [];\n      }\n\n      this.eventListeners[baseEvent].push({\n        name: name,\n        handler: handler\n      });\n    }\n\n    return this;\n  }\n\n  off(evtStr, callback) {\n    var events = (evtStr || '').split(SPACE),\n        len = events.length,\n        n,\n        t,\n        event,\n        parts,\n        baseEvent,\n        name;\n    this._cache && this._cache.delete(ALL_LISTENERS);\n\n    if (!evtStr) {\n      for (t in this.eventListeners) {\n        this._off(t);\n      }\n    }\n\n    for (n = 0; n < len; n++) {\n      event = events[n];\n      parts = event.split('.');\n      baseEvent = parts[0];\n      name = parts[1];\n\n      if (baseEvent) {\n        if (this.eventListeners[baseEvent]) {\n          this._off(baseEvent, name, callback);\n        }\n      } else {\n        for (t in this.eventListeners) {\n          this._off(t, name, callback);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  dispatchEvent(evt) {\n    var e = {\n      target: this,\n      type: evt.type,\n      evt: evt\n    };\n    this.fire(evt.type, e);\n    return this;\n  }\n\n  addEventListener(type, handler) {\n    this.on(type, function (evt) {\n      handler.call(this, evt.evt);\n    });\n    return this;\n  }\n\n  removeEventListener(type) {\n    this.off(type);\n    return this;\n  }\n\n  _delegate(event, selector, handler) {\n    var stopNode = this;\n    this.on(event, function (evt) {\n      var targets = evt.target.findAncestors(selector, true, stopNode);\n\n      for (var i = 0; i < targets.length; i++) {\n        evt = Util.cloneObject(evt);\n        evt.currentTarget = targets[i];\n        handler.call(targets[i], evt);\n      }\n    });\n  }\n\n  remove() {\n    if (this.isDragging()) {\n      this.stopDrag();\n    }\n\n    DD._dragElements.delete(this._id);\n\n    this._remove();\n\n    return this;\n  }\n\n  _clearCaches() {\n    this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n\n    this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n\n    this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n\n    this._clearSelfAndDescendantCache(STAGE);\n\n    this._clearSelfAndDescendantCache(VISIBLE);\n\n    this._clearSelfAndDescendantCache(LISTENING);\n  }\n\n  _remove() {\n    this._clearCaches();\n\n    var parent = this.getParent();\n\n    if (parent && parent.children) {\n      parent.children.splice(this.index, 1);\n\n      parent._setChildrenIndices();\n\n      this.parent = null;\n    }\n  }\n\n  destroy() {\n    this.remove();\n    return this;\n  }\n\n  getAttr(attr) {\n    var method = 'get' + Util._capitalize(attr);\n\n    if (Util._isFunction(this[method])) {\n      return this[method]();\n    }\n\n    return this.attrs[attr];\n  }\n\n  getAncestors() {\n    var parent = this.getParent(),\n        ancestors = [];\n\n    while (parent) {\n      ancestors.push(parent);\n      parent = parent.getParent();\n    }\n\n    return ancestors;\n  }\n\n  getAttrs() {\n    return this.attrs || {};\n  }\n\n  setAttrs(config) {\n    this._batchTransformChanges(() => {\n      var key, method;\n\n      if (!config) {\n        return this;\n      }\n\n      for (key in config) {\n        if (key === CHILDREN) {\n          continue;\n        }\n\n        method = SET + Util._capitalize(key);\n\n        if (Util._isFunction(this[method])) {\n          this[method](config[key]);\n        } else {\n          this._setAttr(key, config[key]);\n        }\n      }\n    });\n\n    return this;\n  }\n\n  isListening() {\n    return this._getCache(LISTENING, this._isListening);\n  }\n\n  _isListening(relativeTo) {\n    const listening = this.listening();\n\n    if (!listening) {\n      return false;\n    }\n\n    const parent = this.getParent();\n\n    if (parent && parent !== relativeTo && this !== relativeTo) {\n      return parent._isListening(relativeTo);\n    } else {\n      return true;\n    }\n  }\n\n  isVisible() {\n    return this._getCache(VISIBLE, this._isVisible);\n  }\n\n  _isVisible(relativeTo) {\n    const visible = this.visible();\n\n    if (!visible) {\n      return false;\n    }\n\n    const parent = this.getParent();\n\n    if (parent && parent !== relativeTo && this !== relativeTo) {\n      return parent._isVisible(relativeTo);\n    } else {\n      return true;\n    }\n  }\n\n  shouldDrawHit(top) {\n    let skipDragCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (top) {\n      return this._isVisible(top) && this._isListening(top);\n    }\n\n    var layer = this.getLayer();\n    var layerUnderDrag = false;\n\n    DD._dragElements.forEach(elem => {\n      if (elem.dragStatus !== 'dragging') {\n        return;\n      } else if (elem.node.nodeType === 'Stage') {\n        layerUnderDrag = true;\n      } else if (elem.node.getLayer() === layer) {\n        layerUnderDrag = true;\n      }\n    });\n\n    var dragSkip = !skipDragCheck && !Konva.hitOnDragEnabled && layerUnderDrag;\n    return this.isListening() && this.isVisible() && !dragSkip;\n  }\n\n  show() {\n    this.visible(true);\n    return this;\n  }\n\n  hide() {\n    this.visible(false);\n    return this;\n  }\n\n  getZIndex() {\n    return this.index || 0;\n  }\n\n  getAbsoluteZIndex() {\n    var depth = this.getDepth(),\n        that = this,\n        index = 0,\n        nodes,\n        len,\n        n,\n        child;\n\n    function addChildren(children) {\n      nodes = [];\n      len = children.length;\n\n      for (n = 0; n < len; n++) {\n        child = children[n];\n        index++;\n\n        if (child.nodeType !== SHAPE) {\n          nodes = nodes.concat(child.getChildren().slice());\n        }\n\n        if (child._id === that._id) {\n          n = len;\n        }\n      }\n\n      if (nodes.length > 0 && nodes[0].getDepth() <= depth) {\n        addChildren(nodes);\n      }\n    }\n\n    if (that.nodeType !== UPPER_STAGE) {\n      addChildren(that.getStage().getChildren());\n    }\n\n    return index;\n  }\n\n  getDepth() {\n    var depth = 0,\n        parent = this.parent;\n\n    while (parent) {\n      depth++;\n      parent = parent.parent;\n    }\n\n    return depth;\n  }\n\n  _batchTransformChanges(func) {\n    this._batchingTransformChange = true;\n    func();\n    this._batchingTransformChange = false;\n\n    if (this._needClearTransformCache) {\n      this._clearCache(TRANSFORM);\n\n      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n    }\n\n    this._needClearTransformCache = false;\n  }\n\n  setPosition(pos) {\n    this._batchTransformChanges(() => {\n      this.x(pos.x);\n      this.y(pos.y);\n    });\n\n    return this;\n  }\n\n  getPosition() {\n    return {\n      x: this.x(),\n      y: this.y()\n    };\n  }\n\n  getRelativePointerPosition() {\n    if (!this.getStage()) {\n      return null;\n    }\n\n    var pos = this.getStage().getPointerPosition();\n\n    if (!pos) {\n      return null;\n    }\n\n    var transform = this.getAbsoluteTransform().copy();\n    transform.invert();\n    return transform.point(pos);\n  }\n\n  getAbsolutePosition(top) {\n    let haveCachedParent = false;\n    let parent = this.parent;\n\n    while (parent) {\n      if (parent.isCached()) {\n        haveCachedParent = true;\n        break;\n      }\n\n      parent = parent.parent;\n    }\n\n    if (haveCachedParent && !top) {\n      top = true;\n    }\n\n    var absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(),\n        absoluteTransform = new Transform(),\n        offset = this.offset();\n    absoluteTransform.m = absoluteMatrix.slice();\n    absoluteTransform.translate(offset.x, offset.y);\n    return absoluteTransform.getTranslation();\n  }\n\n  setAbsolutePosition(pos) {\n    var origTrans = this._clearTransform();\n\n    this.attrs.x = origTrans.x;\n    this.attrs.y = origTrans.y;\n    delete origTrans.x;\n    delete origTrans.y;\n\n    this._clearCache(TRANSFORM);\n\n    var it = this._getAbsoluteTransform().copy();\n\n    it.invert();\n    it.translate(pos.x, pos.y);\n    pos = {\n      x: this.attrs.x + it.getTranslation().x,\n      y: this.attrs.y + it.getTranslation().y\n    };\n\n    this._setTransform(origTrans);\n\n    this.setPosition({\n      x: pos.x,\n      y: pos.y\n    });\n\n    this._clearCache(TRANSFORM);\n\n    this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n\n    return this;\n  }\n\n  _setTransform(trans) {\n    var key;\n\n    for (key in trans) {\n      this.attrs[key] = trans[key];\n    }\n  }\n\n  _clearTransform() {\n    var trans = {\n      x: this.x(),\n      y: this.y(),\n      rotation: this.rotation(),\n      scaleX: this.scaleX(),\n      scaleY: this.scaleY(),\n      offsetX: this.offsetX(),\n      offsetY: this.offsetY(),\n      skewX: this.skewX(),\n      skewY: this.skewY()\n    };\n    this.attrs.x = 0;\n    this.attrs.y = 0;\n    this.attrs.rotation = 0;\n    this.attrs.scaleX = 1;\n    this.attrs.scaleY = 1;\n    this.attrs.offsetX = 0;\n    this.attrs.offsetY = 0;\n    this.attrs.skewX = 0;\n    this.attrs.skewY = 0;\n    return trans;\n  }\n\n  move(change) {\n    var changeX = change.x,\n        changeY = change.y,\n        x = this.x(),\n        y = this.y();\n\n    if (changeX !== undefined) {\n      x += changeX;\n    }\n\n    if (changeY !== undefined) {\n      y += changeY;\n    }\n\n    this.setPosition({\n      x: x,\n      y: y\n    });\n    return this;\n  }\n\n  _eachAncestorReverse(func, top) {\n    var family = [],\n        parent = this.getParent(),\n        len,\n        n;\n\n    if (top && top._id === this._id) {\n      return;\n    }\n\n    family.unshift(this);\n\n    while (parent && (!top || parent._id !== top._id)) {\n      family.unshift(parent);\n      parent = parent.parent;\n    }\n\n    len = family.length;\n\n    for (n = 0; n < len; n++) {\n      func(family[n]);\n    }\n  }\n\n  rotate(theta) {\n    this.rotation(this.rotation() + theta);\n    return this;\n  }\n\n  moveToTop() {\n    if (!this.parent) {\n      Util.warn('Node has no parent. moveToTop function is ignored.');\n      return false;\n    }\n\n    var index = this.index,\n        len = this.parent.getChildren().length;\n\n    if (index < len - 1) {\n      this.parent.children.splice(index, 1);\n      this.parent.children.push(this);\n\n      this.parent._setChildrenIndices();\n\n      return true;\n    }\n\n    return false;\n  }\n\n  moveUp() {\n    if (!this.parent) {\n      Util.warn('Node has no parent. moveUp function is ignored.');\n      return false;\n    }\n\n    var index = this.index,\n        len = this.parent.getChildren().length;\n\n    if (index < len - 1) {\n      this.parent.children.splice(index, 1);\n      this.parent.children.splice(index + 1, 0, this);\n\n      this.parent._setChildrenIndices();\n\n      return true;\n    }\n\n    return false;\n  }\n\n  moveDown() {\n    if (!this.parent) {\n      Util.warn('Node has no parent. moveDown function is ignored.');\n      return false;\n    }\n\n    var index = this.index;\n\n    if (index > 0) {\n      this.parent.children.splice(index, 1);\n      this.parent.children.splice(index - 1, 0, this);\n\n      this.parent._setChildrenIndices();\n\n      return true;\n    }\n\n    return false;\n  }\n\n  moveToBottom() {\n    if (!this.parent) {\n      Util.warn('Node has no parent. moveToBottom function is ignored.');\n      return false;\n    }\n\n    var index = this.index;\n\n    if (index > 0) {\n      this.parent.children.splice(index, 1);\n      this.parent.children.unshift(this);\n\n      this.parent._setChildrenIndices();\n\n      return true;\n    }\n\n    return false;\n  }\n\n  setZIndex(zIndex) {\n    if (!this.parent) {\n      Util.warn('Node has no parent. zIndex parameter is ignored.');\n      return this;\n    }\n\n    if (zIndex < 0 || zIndex >= this.parent.children.length) {\n      Util.warn('Unexpected value ' + zIndex + ' for zIndex property. zIndex is just index of a node in children of its parent. Expected value is from 0 to ' + (this.parent.children.length - 1) + '.');\n    }\n\n    var index = this.index;\n    this.parent.children.splice(index, 1);\n    this.parent.children.splice(zIndex, 0, this);\n\n    this.parent._setChildrenIndices();\n\n    return this;\n  }\n\n  getAbsoluteOpacity() {\n    return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\n  }\n\n  _getAbsoluteOpacity() {\n    var absOpacity = this.opacity();\n    var parent = this.getParent();\n\n    if (parent && !parent._isUnderCache) {\n      absOpacity *= parent.getAbsoluteOpacity();\n    }\n\n    return absOpacity;\n  }\n\n  moveTo(newContainer) {\n    if (this.getParent() !== newContainer) {\n      this._remove();\n\n      newContainer.add(this);\n    }\n\n    return this;\n  }\n\n  toObject() {\n    var obj = {},\n        attrs = this.getAttrs(),\n        key,\n        val,\n        getter,\n        defaultValue,\n        nonPlainObject;\n    obj.attrs = {};\n\n    for (key in attrs) {\n      val = attrs[key];\n      nonPlainObject = Util.isObject(val) && !Util._isPlainObject(val) && !Util._isArray(val);\n\n      if (nonPlainObject) {\n        continue;\n      }\n\n      getter = typeof this[key] === 'function' && this[key];\n      delete attrs[key];\n      defaultValue = getter ? getter.call(this) : null;\n      attrs[key] = val;\n\n      if (defaultValue !== val) {\n        obj.attrs[key] = val;\n      }\n    }\n\n    obj.className = this.getClassName();\n    return Util._prepareToStringify(obj);\n  }\n\n  toJSON() {\n    return JSON.stringify(this.toObject());\n  }\n\n  getParent() {\n    return this.parent;\n  }\n\n  findAncestors(selector, includeSelf, stopNode) {\n    var res = [];\n\n    if (includeSelf && this._isMatch(selector)) {\n      res.push(this);\n    }\n\n    var ancestor = this.parent;\n\n    while (ancestor) {\n      if (ancestor === stopNode) {\n        return res;\n      }\n\n      if (ancestor._isMatch(selector)) {\n        res.push(ancestor);\n      }\n\n      ancestor = ancestor.parent;\n    }\n\n    return res;\n  }\n\n  isAncestorOf(node) {\n    return false;\n  }\n\n  findAncestor(selector, includeSelf, stopNode) {\n    return this.findAncestors(selector, includeSelf, stopNode)[0];\n  }\n\n  _isMatch(selector) {\n    if (!selector) {\n      return false;\n    }\n\n    if (typeof selector === 'function') {\n      return selector(this);\n    }\n\n    var selectorArr = selector.replace(/ /g, '').split(','),\n        len = selectorArr.length,\n        n,\n        sel;\n\n    for (n = 0; n < len; n++) {\n      sel = selectorArr[n];\n\n      if (!Util.isValidSelector(sel)) {\n        Util.warn('Selector \"' + sel + '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".');\n        Util.warn('If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".');\n        Util.warn('Konva is awesome, right?');\n      }\n\n      if (sel.charAt(0) === '#') {\n        if (this.id() === sel.slice(1)) {\n          return true;\n        }\n      } else if (sel.charAt(0) === '.') {\n        if (this.hasName(sel.slice(1))) {\n          return true;\n        }\n      } else if (this.className === sel || this.nodeType === sel) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  getLayer() {\n    var parent = this.getParent();\n    return parent ? parent.getLayer() : null;\n  }\n\n  getStage() {\n    return this._getCache(STAGE, this._getStage);\n  }\n\n  _getStage() {\n    var parent = this.getParent();\n\n    if (parent) {\n      return parent.getStage();\n    } else {\n      return undefined;\n    }\n  }\n\n  fire(eventType) {\n    let evt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let bubble = arguments.length > 2 ? arguments[2] : undefined;\n    evt.target = evt.target || this;\n\n    if (bubble) {\n      this._fireAndBubble(eventType, evt);\n    } else {\n      this._fire(eventType, evt);\n    }\n\n    return this;\n  }\n\n  getAbsoluteTransform(top) {\n    if (top) {\n      return this._getAbsoluteTransform(top);\n    } else {\n      return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\n    }\n  }\n\n  _getAbsoluteTransform(top) {\n    var at;\n\n    if (top) {\n      at = new Transform();\n\n      this._eachAncestorReverse(function (node) {\n        var transformsEnabled = node.transformsEnabled();\n\n        if (transformsEnabled === 'all') {\n          at.multiply(node.getTransform());\n        } else if (transformsEnabled === 'position') {\n          at.translate(node.x() - node.offsetX(), node.y() - node.offsetY());\n        }\n      }, top);\n\n      return at;\n    } else {\n      at = this._cache.get(ABSOLUTE_TRANSFORM) || new Transform();\n\n      if (this.parent) {\n        this.parent.getAbsoluteTransform().copyInto(at);\n      } else {\n        at.reset();\n      }\n\n      var transformsEnabled = this.transformsEnabled();\n\n      if (transformsEnabled === 'all') {\n        at.multiply(this.getTransform());\n      } else if (transformsEnabled === 'position') {\n        const x = this.attrs.x || 0;\n        const y = this.attrs.y || 0;\n        const offsetX = this.attrs.offsetX || 0;\n        const offsetY = this.attrs.offsetY || 0;\n        at.translate(x - offsetX, y - offsetY);\n      }\n\n      at.dirty = false;\n      return at;\n    }\n  }\n\n  getAbsoluteScale(top) {\n    var parent = this;\n\n    while (parent) {\n      if (parent._isUnderCache) {\n        top = parent;\n      }\n\n      parent = parent.getParent();\n    }\n\n    const transform = this.getAbsoluteTransform(top);\n    const attrs = transform.decompose();\n    return {\n      x: attrs.scaleX,\n      y: attrs.scaleY\n    };\n  }\n\n  getAbsoluteRotation() {\n    return this.getAbsoluteTransform().decompose().rotation;\n  }\n\n  getTransform() {\n    return this._getCache(TRANSFORM, this._getTransform);\n  }\n\n  _getTransform() {\n    var _a, _b;\n\n    var m = this._cache.get(TRANSFORM) || new Transform();\n    m.reset();\n    var x = this.x(),\n        y = this.y(),\n        rotation = Konva.getAngle(this.rotation()),\n        scaleX = (_a = this.attrs.scaleX) !== null && _a !== void 0 ? _a : 1,\n        scaleY = (_b = this.attrs.scaleY) !== null && _b !== void 0 ? _b : 1,\n        skewX = this.attrs.skewX || 0,\n        skewY = this.attrs.skewY || 0,\n        offsetX = this.attrs.offsetX || 0,\n        offsetY = this.attrs.offsetY || 0;\n\n    if (x !== 0 || y !== 0) {\n      m.translate(x, y);\n    }\n\n    if (rotation !== 0) {\n      m.rotate(rotation);\n    }\n\n    if (skewX !== 0 || skewY !== 0) {\n      m.skew(skewX, skewY);\n    }\n\n    if (scaleX !== 1 || scaleY !== 1) {\n      m.scale(scaleX, scaleY);\n    }\n\n    if (offsetX !== 0 || offsetY !== 0) {\n      m.translate(-1 * offsetX, -1 * offsetY);\n    }\n\n    m.dirty = false;\n    return m;\n  }\n\n  clone(obj) {\n    var attrs = Util.cloneObject(this.attrs),\n        key,\n        allListeners,\n        len,\n        n,\n        listener;\n\n    for (key in obj) {\n      attrs[key] = obj[key];\n    }\n\n    var node = new this.constructor(attrs);\n\n    for (key in this.eventListeners) {\n      allListeners = this.eventListeners[key];\n      len = allListeners.length;\n\n      for (n = 0; n < len; n++) {\n        listener = allListeners[n];\n\n        if (listener.name.indexOf(KONVA) < 0) {\n          if (!node.eventListeners[key]) {\n            node.eventListeners[key] = [];\n          }\n\n          node.eventListeners[key].push(listener);\n        }\n      }\n    }\n\n    return node;\n  }\n\n  _toKonvaCanvas(config) {\n    config = config || {};\n    var box = this.getClientRect();\n    var stage = this.getStage(),\n        x = config.x !== undefined ? config.x : Math.floor(box.x),\n        y = config.y !== undefined ? config.y : Math.floor(box.y),\n        pixelRatio = config.pixelRatio || 1,\n        canvas = new SceneCanvas({\n      width: config.width || Math.ceil(box.width) || (stage ? stage.width() : 0),\n      height: config.height || Math.ceil(box.height) || (stage ? stage.height() : 0),\n      pixelRatio: pixelRatio\n    }),\n        context = canvas.getContext();\n\n    if (config.imageSmoothingEnabled === false) {\n      context._context.imageSmoothingEnabled = false;\n    }\n\n    context.save();\n\n    if (x || y) {\n      context.translate(-1 * x, -1 * y);\n    }\n\n    this.drawScene(canvas);\n    context.restore();\n    return canvas;\n  }\n\n  toCanvas(config) {\n    return this._toKonvaCanvas(config)._canvas;\n  }\n\n  toDataURL(config) {\n    config = config || {};\n    var mimeType = config.mimeType || null,\n        quality = config.quality || null;\n\n    var url = this._toKonvaCanvas(config).toDataURL(mimeType, quality);\n\n    if (config.callback) {\n      config.callback(url);\n    }\n\n    return url;\n  }\n\n  toImage(config) {\n    return new Promise((resolve, reject) => {\n      try {\n        const callback = config === null || config === void 0 ? void 0 : config.callback;\n        if (callback) delete config.callback;\n\n        Util._urlToImage(this.toDataURL(config), function (img) {\n          resolve(img);\n          callback === null || callback === void 0 ? void 0 : callback(img);\n        });\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  toBlob(config) {\n    return new Promise((resolve, reject) => {\n      try {\n        const callback = config === null || config === void 0 ? void 0 : config.callback;\n        if (callback) delete config.callback;\n        this.toCanvas(config).toBlob(blob => {\n          resolve(blob);\n          callback === null || callback === void 0 ? void 0 : callback(blob);\n        });\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  setSize(size) {\n    this.width(size.width);\n    this.height(size.height);\n    return this;\n  }\n\n  getSize() {\n    return {\n      width: this.width(),\n      height: this.height()\n    };\n  }\n\n  getClassName() {\n    return this.className || this.nodeType;\n  }\n\n  getType() {\n    return this.nodeType;\n  }\n\n  getDragDistance() {\n    if (this.attrs.dragDistance !== undefined) {\n      return this.attrs.dragDistance;\n    } else if (this.parent) {\n      return this.parent.getDragDistance();\n    } else {\n      return Konva.dragDistance;\n    }\n  }\n\n  _off(type, name, callback) {\n    var evtListeners = this.eventListeners[type],\n        i,\n        evtName,\n        handler;\n\n    for (i = 0; i < evtListeners.length; i++) {\n      evtName = evtListeners[i].name;\n      handler = evtListeners[i].handler;\n\n      if ((evtName !== 'konva' || name === 'konva') && (!name || evtName === name) && (!callback || callback === handler)) {\n        evtListeners.splice(i, 1);\n\n        if (evtListeners.length === 0) {\n          delete this.eventListeners[type];\n          break;\n        }\n\n        i--;\n      }\n    }\n  }\n\n  _fireChangeEvent(attr, oldVal, newVal) {\n    this._fire(attr + CHANGE, {\n      oldVal: oldVal,\n      newVal: newVal\n    });\n  }\n\n  addName(name) {\n    if (!this.hasName(name)) {\n      var oldName = this.name();\n      var newName = oldName ? oldName + ' ' + name : name;\n      this.name(newName);\n    }\n\n    return this;\n  }\n\n  hasName(name) {\n    if (!name) {\n      return false;\n    }\n\n    const fullName = this.name();\n\n    if (!fullName) {\n      return false;\n    }\n\n    var names = (fullName || '').split(/\\s/g);\n    return names.indexOf(name) !== -1;\n  }\n\n  removeName(name) {\n    var names = (this.name() || '').split(/\\s/g);\n    var index = names.indexOf(name);\n\n    if (index !== -1) {\n      names.splice(index, 1);\n      this.name(names.join(' '));\n    }\n\n    return this;\n  }\n\n  setAttr(attr, val) {\n    var func = this[SET + Util._capitalize(attr)];\n\n    if (Util._isFunction(func)) {\n      func.call(this, val);\n    } else {\n      this._setAttr(attr, val);\n    }\n\n    return this;\n  }\n\n  _requestDraw() {\n    if (Konva.autoDrawEnabled) {\n      const drawNode = this.getLayer() || this.getStage();\n      drawNode === null || drawNode === void 0 ? void 0 : drawNode.batchDraw();\n    }\n  }\n\n  _setAttr(key, val) {\n    var oldVal = this.attrs[key];\n\n    if (oldVal === val && !Util.isObject(val)) {\n      return;\n    }\n\n    if (val === undefined || val === null) {\n      delete this.attrs[key];\n    } else {\n      this.attrs[key] = val;\n    }\n\n    if (this._shouldFireChangeEvents) {\n      this._fireChangeEvent(key, oldVal, val);\n    }\n\n    this._requestDraw();\n  }\n\n  _setComponentAttr(key, component, val) {\n    var oldVal;\n\n    if (val !== undefined) {\n      oldVal = this.attrs[key];\n\n      if (!oldVal) {\n        this.attrs[key] = this.getAttr(key);\n      }\n\n      this.attrs[key][component] = val;\n\n      this._fireChangeEvent(key, oldVal, val);\n    }\n  }\n\n  _fireAndBubble(eventType, evt, compareShape) {\n    if (evt && this.nodeType === SHAPE) {\n      evt.target = this;\n    }\n\n    var shouldStop = (eventType === MOUSEENTER || eventType === MOUSELEAVE) && (compareShape && (this === compareShape || this.isAncestorOf && this.isAncestorOf(compareShape)) || this.nodeType === 'Stage' && !compareShape);\n\n    if (!shouldStop) {\n      this._fire(eventType, evt);\n\n      var stopBubble = (eventType === MOUSEENTER || eventType === MOUSELEAVE) && compareShape && compareShape.isAncestorOf && compareShape.isAncestorOf(this) && !compareShape.isAncestorOf(this.parent);\n\n      if ((evt && !evt.cancelBubble || !evt) && this.parent && this.parent.isListening() && !stopBubble) {\n        if (compareShape && compareShape.parent) {\n          this._fireAndBubble.call(this.parent, eventType, evt, compareShape);\n        } else {\n          this._fireAndBubble.call(this.parent, eventType, evt);\n        }\n      }\n    }\n  }\n\n  _getProtoListeners(eventType) {\n    let listeners = this._cache.get(ALL_LISTENERS);\n\n    if (!listeners) {\n      listeners = {};\n      let obj = Object.getPrototypeOf(this);\n\n      while (obj) {\n        if (!obj.eventListeners) {\n          obj = Object.getPrototypeOf(obj);\n          continue;\n        }\n\n        for (var event in obj.eventListeners) {\n          const newEvents = obj.eventListeners[event];\n          const oldEvents = listeners[event] || [];\n          listeners[event] = newEvents.concat(oldEvents);\n        }\n\n        obj = Object.getPrototypeOf(obj);\n      }\n\n      this._cache.set(ALL_LISTENERS, listeners);\n    }\n\n    return listeners[eventType];\n  }\n\n  _fire(eventType, evt) {\n    evt = evt || {};\n    evt.currentTarget = this;\n    evt.type = eventType;\n\n    const topListeners = this._getProtoListeners(eventType);\n\n    if (topListeners) {\n      for (var i = 0; i < topListeners.length; i++) {\n        topListeners[i].handler.call(this, evt);\n      }\n    }\n\n    const selfListeners = this.eventListeners[eventType];\n\n    if (selfListeners) {\n      for (var i = 0; i < selfListeners.length; i++) {\n        selfListeners[i].handler.call(this, evt);\n      }\n    }\n  }\n\n  draw() {\n    this.drawScene();\n    this.drawHit();\n    return this;\n  }\n\n  _createDragElement(evt) {\n    var pointerId = evt ? evt.pointerId : undefined;\n    var stage = this.getStage();\n    var ap = this.getAbsolutePosition();\n    var pos = stage._getPointerById(pointerId) || stage._changedPointerPositions[0] || ap;\n\n    DD._dragElements.set(this._id, {\n      node: this,\n      startPointerPos: pos,\n      offset: {\n        x: pos.x - ap.x,\n        y: pos.y - ap.y\n      },\n      dragStatus: 'ready',\n      pointerId\n    });\n  }\n\n  startDrag(evt) {\n    let bubbleEvent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (!DD._dragElements.has(this._id)) {\n      this._createDragElement(evt);\n    }\n\n    const elem = DD._dragElements.get(this._id);\n\n    elem.dragStatus = 'dragging';\n    this.fire('dragstart', {\n      type: 'dragstart',\n      target: this,\n      evt: evt && evt.evt\n    }, bubbleEvent);\n  }\n\n  _setDragPosition(evt, elem) {\n    const pos = this.getStage()._getPointerById(elem.pointerId);\n\n    if (!pos) {\n      return;\n    }\n\n    var newNodePos = {\n      x: pos.x - elem.offset.x,\n      y: pos.y - elem.offset.y\n    };\n    var dbf = this.dragBoundFunc();\n\n    if (dbf !== undefined) {\n      const bounded = dbf.call(this, newNodePos, evt);\n\n      if (!bounded) {\n        Util.warn('dragBoundFunc did not return any value. That is unexpected behavior. You must return new absolute position from dragBoundFunc.');\n      } else {\n        newNodePos = bounded;\n      }\n    }\n\n    if (!this._lastPos || this._lastPos.x !== newNodePos.x || this._lastPos.y !== newNodePos.y) {\n      this.setAbsolutePosition(newNodePos);\n\n      this._requestDraw();\n    }\n\n    this._lastPos = newNodePos;\n  }\n\n  stopDrag(evt) {\n    const elem = DD._dragElements.get(this._id);\n\n    if (elem) {\n      elem.dragStatus = 'stopped';\n    }\n\n    DD._endDragBefore(evt);\n\n    DD._endDragAfter(evt);\n  }\n\n  setDraggable(draggable) {\n    this._setAttr('draggable', draggable);\n\n    this._dragChange();\n  }\n\n  isDragging() {\n    const elem = DD._dragElements.get(this._id);\n\n    return elem ? elem.dragStatus === 'dragging' : false;\n  }\n\n  _listenDrag() {\n    this._dragCleanup();\n\n    this.on('mousedown.konva touchstart.konva', function (evt) {\n      var shouldCheckButton = evt.evt['button'] !== undefined;\n      var canDrag = !shouldCheckButton || Konva.dragButtons.indexOf(evt.evt['button']) >= 0;\n\n      if (!canDrag) {\n        return;\n      }\n\n      if (this.isDragging()) {\n        return;\n      }\n\n      var hasDraggingChild = false;\n\n      DD._dragElements.forEach(elem => {\n        if (this.isAncestorOf(elem.node)) {\n          hasDraggingChild = true;\n        }\n      });\n\n      if (!hasDraggingChild) {\n        this._createDragElement(evt);\n      }\n    });\n  }\n\n  _dragChange() {\n    if (this.attrs.draggable) {\n      this._listenDrag();\n    } else {\n      this._dragCleanup();\n\n      var stage = this.getStage();\n\n      if (!stage) {\n        return;\n      }\n\n      const dragElement = DD._dragElements.get(this._id);\n\n      const isDragging = dragElement && dragElement.dragStatus === 'dragging';\n      const isReady = dragElement && dragElement.dragStatus === 'ready';\n\n      if (isDragging) {\n        this.stopDrag();\n      } else if (isReady) {\n        DD._dragElements.delete(this._id);\n      }\n    }\n  }\n\n  _dragCleanup() {\n    this.off('mousedown.konva');\n    this.off('touchstart.konva');\n  }\n\n  isClientRectOnScreen() {\n    let margin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      x: 0,\n      y: 0\n    };\n    const stage = this.getStage();\n\n    if (!stage) {\n      return false;\n    }\n\n    const screenRect = {\n      x: -margin.x,\n      y: -margin.y,\n      width: stage.width() + 2 * margin.x,\n      height: stage.height() + 2 * margin.y\n    };\n    return Util.haveIntersection(screenRect, this.getClientRect());\n  }\n\n  static create(data, container) {\n    if (Util._isString(data)) {\n      data = JSON.parse(data);\n    }\n\n    return this._createNode(data, container);\n  }\n\n  static _createNode(obj, container) {\n    var className = Node.prototype.getClassName.call(obj),\n        children = obj.children,\n        no,\n        len,\n        n;\n\n    if (container) {\n      obj.attrs.container = container;\n    }\n\n    if (!Konva[className]) {\n      Util.warn('Can not find a node with class name \"' + className + '\". Fallback to \"Shape\".');\n      className = 'Shape';\n    }\n\n    const Class = Konva[className];\n    no = new Class(obj.attrs);\n\n    if (children) {\n      len = children.length;\n\n      for (n = 0; n < len; n++) {\n        no.add(Node._createNode(children[n]));\n      }\n    }\n\n    return no;\n  }\n\n}\nNode.prototype.nodeType = 'Node';\nNode.prototype._attrsAffectingSize = [];\nNode.prototype.eventListeners = {};\nNode.prototype.on.call(Node.prototype, TRANSFORM_CHANGE_STR, function () {\n  if (this._batchingTransformChange) {\n    this._needClearTransformCache = true;\n    return;\n  }\n\n  this._clearCache(TRANSFORM);\n\n  this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n});\nNode.prototype.on.call(Node.prototype, 'visibleChange.konva', function () {\n  this._clearSelfAndDescendantCache(VISIBLE);\n});\nNode.prototype.on.call(Node.prototype, 'listeningChange.konva', function () {\n  this._clearSelfAndDescendantCache(LISTENING);\n});\nNode.prototype.on.call(Node.prototype, 'opacityChange.konva', function () {\n  this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n});\nconst addGetterSetter = Factory.addGetterSetter;\naddGetterSetter(Node, 'zIndex');\naddGetterSetter(Node, 'absolutePosition');\naddGetterSetter(Node, 'position');\naddGetterSetter(Node, 'x', 0, getNumberValidator());\naddGetterSetter(Node, 'y', 0, getNumberValidator());\naddGetterSetter(Node, 'globalCompositeOperation', 'source-over', getStringValidator());\naddGetterSetter(Node, 'opacity', 1, getNumberValidator());\naddGetterSetter(Node, 'name', '', getStringValidator());\naddGetterSetter(Node, 'id', '', getStringValidator());\naddGetterSetter(Node, 'rotation', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'scale', ['x', 'y']);\naddGetterSetter(Node, 'scaleX', 1, getNumberValidator());\naddGetterSetter(Node, 'scaleY', 1, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'skew', ['x', 'y']);\naddGetterSetter(Node, 'skewX', 0, getNumberValidator());\naddGetterSetter(Node, 'skewY', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'offset', ['x', 'y']);\naddGetterSetter(Node, 'offsetX', 0, getNumberValidator());\naddGetterSetter(Node, 'offsetY', 0, getNumberValidator());\naddGetterSetter(Node, 'dragDistance', null, getNumberValidator());\naddGetterSetter(Node, 'width', 0, getNumberValidator());\naddGetterSetter(Node, 'height', 0, getNumberValidator());\naddGetterSetter(Node, 'listening', true, getBooleanValidator());\naddGetterSetter(Node, 'preventDefault', true, getBooleanValidator());\naddGetterSetter(Node, 'filters', null, function (val) {\n  this._filterUpToDate = false;\n  return val;\n});\naddGetterSetter(Node, 'visible', true, getBooleanValidator());\naddGetterSetter(Node, 'transformsEnabled', 'all', getStringValidator());\naddGetterSetter(Node, 'size');\naddGetterSetter(Node, 'dragBoundFunc');\naddGetterSetter(Node, 'draggable', false, getBooleanValidator());\nFactory.backCompat(Node, {\n  rotateDeg: 'rotate',\n  setRotationDeg: 'setRotation',\n  getRotationDeg: 'getRotation'\n});","map":{"version":3,"names":["Util","Transform","Factory","SceneCanvas","HitCanvas","Konva","DD","getNumberValidator","getStringValidator","getBooleanValidator","ABSOLUTE_OPACITY","ALL_LISTENERS","ABSOLUTE_TRANSFORM","ABSOLUTE_SCALE","CANVAS","CHANGE","CHILDREN","KONVA","LISTENING","MOUSEENTER","MOUSELEAVE","NAME","SET","SHAPE","SPACE","STAGE","TRANSFORM","UPPER_STAGE","VISIBLE","TRANSFORM_CHANGE_STR","join","idCounter","Node","constructor","config","_id","eventListeners","attrs","index","_allEventListeners","parent","_cache","Map","_attachedDepsListeners","_lastPos","_batchingTransformChange","_needClearTransformCache","_filterUpToDate","_isUnderCache","_dragEventId","_shouldFireChangeEvents","setAttrs","hasChildren","_clearCache","attr","get","dirty","delete","clear","_getCache","privateGetter","cache","isTransform","invalid","undefined","call","set","_calculate","name","deps","getter","depsString","map","dep","on","_getCanvasCache","_clearSelfAndDescendantCache","fire","clearCache","_requestDraw","conf","rect","x","y","width","height","getClientRect","skipTransform","relativeTo","getParent","Math","ceil","pixelRatio","floor","offset","drawBorder","hitCanvasPixelRatio","error","cachedSceneCanvas","cachedFilterCanvas","cachedHitCanvas","sceneContext","getContext","hitContext","isCache","imageSmoothingEnabled","_context","save","translate","drawScene","drawHit","restore","beginPath","closePath","setAttr","stroke","scene","filter","hit","isCached","has","Error","_transformedRect","top","points","minX","minY","maxX","maxY","trans","getAbsoluteTransform","forEach","point","transformed","min","max","_drawCachedSceneCanvas","context","_applyOpacity","_applyGlobalCompositeOperation","canvasCache","cacheCanvas","_getCachedSceneCanvas","ratio","drawImage","_canvas","_drawCachedHitCanvas","hitCanvas","filters","cachedCanvas","sceneCanvas","filterCanvas","filterContext","len","imageData","n","setSize","length","getWidth","getHeight","getImageData","putImageData","e","message","evtStr","handler","arguments","_delegate","apply","events","split","event","parts","baseEvent","push","off","callback","t","_off","dispatchEvent","evt","target","type","addEventListener","removeEventListener","selector","stopNode","targets","findAncestors","i","cloneObject","currentTarget","remove","isDragging","stopDrag","_dragElements","_remove","_clearCaches","children","splice","_setChildrenIndices","destroy","getAttr","method","_capitalize","_isFunction","getAncestors","ancestors","getAttrs","_batchTransformChanges","key","_setAttr","isListening","_isListening","listening","isVisible","_isVisible","visible","shouldDrawHit","skipDragCheck","layer","getLayer","layerUnderDrag","elem","dragStatus","node","nodeType","dragSkip","hitOnDragEnabled","show","hide","getZIndex","getAbsoluteZIndex","depth","getDepth","that","nodes","child","addChildren","concat","getChildren","slice","getStage","func","setPosition","pos","getPosition","getRelativePointerPosition","getPointerPosition","transform","copy","invert","getAbsolutePosition","haveCachedParent","absoluteMatrix","getMatrix","absoluteTransform","m","getTranslation","setAbsolutePosition","origTrans","_clearTransform","it","_getAbsoluteTransform","_setTransform","rotation","scaleX","scaleY","offsetX","offsetY","skewX","skewY","move","change","changeX","changeY","_eachAncestorReverse","family","unshift","rotate","theta","moveToTop","warn","moveUp","moveDown","moveToBottom","setZIndex","zIndex","getAbsoluteOpacity","_getAbsoluteOpacity","absOpacity","opacity","moveTo","newContainer","add","toObject","obj","val","defaultValue","nonPlainObject","isObject","_isPlainObject","_isArray","className","getClassName","_prepareToStringify","toJSON","JSON","stringify","includeSelf","res","_isMatch","ancestor","isAncestorOf","findAncestor","selectorArr","replace","sel","isValidSelector","charAt","id","hasName","_getStage","eventType","bubble","_fireAndBubble","_fire","at","transformsEnabled","multiply","getTransform","copyInto","reset","getAbsoluteScale","decompose","getAbsoluteRotation","_getTransform","_a","_b","getAngle","skew","scale","clone","allListeners","listener","indexOf","_toKonvaCanvas","box","stage","canvas","toCanvas","toDataURL","mimeType","quality","url","toImage","Promise","resolve","reject","_urlToImage","img","err","toBlob","blob","size","getSize","getType","getDragDistance","dragDistance","evtListeners","evtName","_fireChangeEvent","oldVal","newVal","addName","oldName","newName","fullName","names","removeName","autoDrawEnabled","drawNode","batchDraw","_setComponentAttr","component","compareShape","shouldStop","stopBubble","cancelBubble","_getProtoListeners","listeners","Object","getPrototypeOf","newEvents","oldEvents","topListeners","selfListeners","draw","_createDragElement","pointerId","ap","_getPointerById","_changedPointerPositions","startPointerPos","startDrag","bubbleEvent","_setDragPosition","newNodePos","dbf","dragBoundFunc","bounded","_endDragBefore","_endDragAfter","setDraggable","draggable","_dragChange","_listenDrag","_dragCleanup","shouldCheckButton","canDrag","dragButtons","hasDraggingChild","dragElement","isReady","isClientRectOnScreen","margin","screenRect","haveIntersection","create","data","container","_isString","parse","_createNode","prototype","no","Class","_attrsAffectingSize","addGetterSetter","addComponentsGetterSetter","backCompat","rotateDeg","setRotationDeg","getRotationDeg"],"sources":["C:/traffic_sim/traffic-sim/sim_ui/node_modules/konva/lib/Node.js"],"sourcesContent":["import { Util, Transform } from './Util.js';\nimport { Factory } from './Factory.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { Konva } from './Global.js';\nimport { DD } from './DragAndDrop.js';\nimport { getNumberValidator, getStringValidator, getBooleanValidator, } from './Validators.js';\nvar ABSOLUTE_OPACITY = 'absoluteOpacity', ALL_LISTENERS = 'allEventListeners', ABSOLUTE_TRANSFORM = 'absoluteTransform', ABSOLUTE_SCALE = 'absoluteScale', CANVAS = 'canvas', CHANGE = 'Change', CHILDREN = 'children', KONVA = 'konva', LISTENING = 'listening', MOUSEENTER = 'mouseenter', MOUSELEAVE = 'mouseleave', NAME = 'name', SET = 'set', SHAPE = 'Shape', SPACE = ' ', STAGE = 'stage', TRANSFORM = 'transform', UPPER_STAGE = 'Stage', VISIBLE = 'visible', TRANSFORM_CHANGE_STR = [\n    'xChange.konva',\n    'yChange.konva',\n    'scaleXChange.konva',\n    'scaleYChange.konva',\n    'skewXChange.konva',\n    'skewYChange.konva',\n    'rotationChange.konva',\n    'offsetXChange.konva',\n    'offsetYChange.konva',\n    'transformsEnabledChange.konva',\n].join(SPACE);\nlet idCounter = 1;\nexport class Node {\n    constructor(config) {\n        this._id = idCounter++;\n        this.eventListeners = {};\n        this.attrs = {};\n        this.index = 0;\n        this._allEventListeners = null;\n        this.parent = null;\n        this._cache = new Map();\n        this._attachedDepsListeners = new Map();\n        this._lastPos = null;\n        this._batchingTransformChange = false;\n        this._needClearTransformCache = false;\n        this._filterUpToDate = false;\n        this._isUnderCache = false;\n        this._dragEventId = null;\n        this._shouldFireChangeEvents = false;\n        this.setAttrs(config);\n        this._shouldFireChangeEvents = true;\n    }\n    hasChildren() {\n        return false;\n    }\n    _clearCache(attr) {\n        if ((attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM) &&\n            this._cache.get(attr)) {\n            this._cache.get(attr).dirty = true;\n        }\n        else if (attr) {\n            this._cache.delete(attr);\n        }\n        else {\n            this._cache.clear();\n        }\n    }\n    _getCache(attr, privateGetter) {\n        var cache = this._cache.get(attr);\n        var isTransform = attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM;\n        var invalid = cache === undefined || (isTransform && cache.dirty === true);\n        if (invalid) {\n            cache = privateGetter.call(this);\n            this._cache.set(attr, cache);\n        }\n        return cache;\n    }\n    _calculate(name, deps, getter) {\n        if (!this._attachedDepsListeners.get(name)) {\n            const depsString = deps.map((dep) => dep + 'Change.konva').join(SPACE);\n            this.on(depsString, () => {\n                this._clearCache(name);\n            });\n            this._attachedDepsListeners.set(name, true);\n        }\n        return this._getCache(name, getter);\n    }\n    _getCanvasCache() {\n        return this._cache.get(CANVAS);\n    }\n    _clearSelfAndDescendantCache(attr) {\n        this._clearCache(attr);\n        if (attr === ABSOLUTE_TRANSFORM) {\n            this.fire('absoluteTransformChange');\n        }\n    }\n    clearCache() {\n        this._cache.delete(CANVAS);\n        this._clearSelfAndDescendantCache();\n        this._requestDraw();\n        return this;\n    }\n    cache(config) {\n        var conf = config || {};\n        var rect = {};\n        if (conf.x === undefined ||\n            conf.y === undefined ||\n            conf.width === undefined ||\n            conf.height === undefined) {\n            rect = this.getClientRect({\n                skipTransform: true,\n                relativeTo: this.getParent(),\n            });\n        }\n        var width = Math.ceil(conf.width || rect.width), height = Math.ceil(conf.height || rect.height), pixelRatio = conf.pixelRatio, x = conf.x === undefined ? Math.floor(rect.x) : conf.x, y = conf.y === undefined ? Math.floor(rect.y) : conf.y, offset = conf.offset || 0, drawBorder = conf.drawBorder || false, hitCanvasPixelRatio = conf.hitCanvasPixelRatio || 1;\n        if (!width || !height) {\n            Util.error('Can not cache the node. Width or height of the node equals 0. Caching is skipped.');\n            return;\n        }\n        width += offset * 2 + 1;\n        height += offset * 2 + 1;\n        x -= offset;\n        y -= offset;\n        var cachedSceneCanvas = new SceneCanvas({\n            pixelRatio: pixelRatio,\n            width: width,\n            height: height,\n        }), cachedFilterCanvas = new SceneCanvas({\n            pixelRatio: pixelRatio,\n            width: 0,\n            height: 0,\n        }), cachedHitCanvas = new HitCanvas({\n            pixelRatio: hitCanvasPixelRatio,\n            width: width,\n            height: height,\n        }), sceneContext = cachedSceneCanvas.getContext(), hitContext = cachedHitCanvas.getContext();\n        cachedHitCanvas.isCache = true;\n        cachedSceneCanvas.isCache = true;\n        this._cache.delete(CANVAS);\n        this._filterUpToDate = false;\n        if (conf.imageSmoothingEnabled === false) {\n            cachedSceneCanvas.getContext()._context.imageSmoothingEnabled = false;\n            cachedFilterCanvas.getContext()._context.imageSmoothingEnabled = false;\n        }\n        sceneContext.save();\n        hitContext.save();\n        sceneContext.translate(-x, -y);\n        hitContext.translate(-x, -y);\n        this._isUnderCache = true;\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n        this.drawScene(cachedSceneCanvas, this);\n        this.drawHit(cachedHitCanvas, this);\n        this._isUnderCache = false;\n        sceneContext.restore();\n        hitContext.restore();\n        if (drawBorder) {\n            sceneContext.save();\n            sceneContext.beginPath();\n            sceneContext.rect(0, 0, width, height);\n            sceneContext.closePath();\n            sceneContext.setAttr('strokeStyle', 'red');\n            sceneContext.setAttr('lineWidth', 5);\n            sceneContext.stroke();\n            sceneContext.restore();\n        }\n        this._cache.set(CANVAS, {\n            scene: cachedSceneCanvas,\n            filter: cachedFilterCanvas,\n            hit: cachedHitCanvas,\n            x: x,\n            y: y,\n        });\n        this._requestDraw();\n        return this;\n    }\n    isCached() {\n        return this._cache.has(CANVAS);\n    }\n    getClientRect(config) {\n        throw new Error('abstract \"getClientRect\" method call');\n    }\n    _transformedRect(rect, top) {\n        var points = [\n            { x: rect.x, y: rect.y },\n            { x: rect.x + rect.width, y: rect.y },\n            { x: rect.x + rect.width, y: rect.y + rect.height },\n            { x: rect.x, y: rect.y + rect.height },\n        ];\n        var minX, minY, maxX, maxY;\n        var trans = this.getAbsoluteTransform(top);\n        points.forEach(function (point) {\n            var transformed = trans.point(point);\n            if (minX === undefined) {\n                minX = maxX = transformed.x;\n                minY = maxY = transformed.y;\n            }\n            minX = Math.min(minX, transformed.x);\n            minY = Math.min(minY, transformed.y);\n            maxX = Math.max(maxX, transformed.x);\n            maxY = Math.max(maxY, transformed.y);\n        });\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n    _drawCachedSceneCanvas(context) {\n        context.save();\n        context._applyOpacity(this);\n        context._applyGlobalCompositeOperation(this);\n        const canvasCache = this._getCanvasCache();\n        context.translate(canvasCache.x, canvasCache.y);\n        var cacheCanvas = this._getCachedSceneCanvas();\n        var ratio = cacheCanvas.pixelRatio;\n        context.drawImage(cacheCanvas._canvas, 0, 0, cacheCanvas.width / ratio, cacheCanvas.height / ratio);\n        context.restore();\n    }\n    _drawCachedHitCanvas(context) {\n        var canvasCache = this._getCanvasCache(), hitCanvas = canvasCache.hit;\n        context.save();\n        context.translate(canvasCache.x, canvasCache.y);\n        context.drawImage(hitCanvas._canvas, 0, 0, hitCanvas.width / hitCanvas.pixelRatio, hitCanvas.height / hitCanvas.pixelRatio);\n        context.restore();\n    }\n    _getCachedSceneCanvas() {\n        var filters = this.filters(), cachedCanvas = this._getCanvasCache(), sceneCanvas = cachedCanvas.scene, filterCanvas = cachedCanvas.filter, filterContext = filterCanvas.getContext(), len, imageData, n, filter;\n        if (filters) {\n            if (!this._filterUpToDate) {\n                var ratio = sceneCanvas.pixelRatio;\n                filterCanvas.setSize(sceneCanvas.width / sceneCanvas.pixelRatio, sceneCanvas.height / sceneCanvas.pixelRatio);\n                try {\n                    len = filters.length;\n                    filterContext.clear();\n                    filterContext.drawImage(sceneCanvas._canvas, 0, 0, sceneCanvas.getWidth() / ratio, sceneCanvas.getHeight() / ratio);\n                    imageData = filterContext.getImageData(0, 0, filterCanvas.getWidth(), filterCanvas.getHeight());\n                    for (n = 0; n < len; n++) {\n                        filter = filters[n];\n                        if (typeof filter !== 'function') {\n                            Util.error('Filter should be type of function, but got ' +\n                                typeof filter +\n                                ' instead. Please check correct filters');\n                            continue;\n                        }\n                        filter.call(this, imageData);\n                        filterContext.putImageData(imageData, 0, 0);\n                    }\n                }\n                catch (e) {\n                    Util.error('Unable to apply filter. ' +\n                        e.message +\n                        ' This post my help you https://konvajs.org/docs/posts/Tainted_Canvas.html.');\n                }\n                this._filterUpToDate = true;\n            }\n            return filterCanvas;\n        }\n        return sceneCanvas;\n    }\n    on(evtStr, handler) {\n        this._cache && this._cache.delete(ALL_LISTENERS);\n        if (arguments.length === 3) {\n            return this._delegate.apply(this, arguments);\n        }\n        var events = evtStr.split(SPACE), len = events.length, n, event, parts, baseEvent, name;\n        for (n = 0; n < len; n++) {\n            event = events[n];\n            parts = event.split('.');\n            baseEvent = parts[0];\n            name = parts[1] || '';\n            if (!this.eventListeners[baseEvent]) {\n                this.eventListeners[baseEvent] = [];\n            }\n            this.eventListeners[baseEvent].push({\n                name: name,\n                handler: handler,\n            });\n        }\n        return this;\n    }\n    off(evtStr, callback) {\n        var events = (evtStr || '').split(SPACE), len = events.length, n, t, event, parts, baseEvent, name;\n        this._cache && this._cache.delete(ALL_LISTENERS);\n        if (!evtStr) {\n            for (t in this.eventListeners) {\n                this._off(t);\n            }\n        }\n        for (n = 0; n < len; n++) {\n            event = events[n];\n            parts = event.split('.');\n            baseEvent = parts[0];\n            name = parts[1];\n            if (baseEvent) {\n                if (this.eventListeners[baseEvent]) {\n                    this._off(baseEvent, name, callback);\n                }\n            }\n            else {\n                for (t in this.eventListeners) {\n                    this._off(t, name, callback);\n                }\n            }\n        }\n        return this;\n    }\n    dispatchEvent(evt) {\n        var e = {\n            target: this,\n            type: evt.type,\n            evt: evt,\n        };\n        this.fire(evt.type, e);\n        return this;\n    }\n    addEventListener(type, handler) {\n        this.on(type, function (evt) {\n            handler.call(this, evt.evt);\n        });\n        return this;\n    }\n    removeEventListener(type) {\n        this.off(type);\n        return this;\n    }\n    _delegate(event, selector, handler) {\n        var stopNode = this;\n        this.on(event, function (evt) {\n            var targets = evt.target.findAncestors(selector, true, stopNode);\n            for (var i = 0; i < targets.length; i++) {\n                evt = Util.cloneObject(evt);\n                evt.currentTarget = targets[i];\n                handler.call(targets[i], evt);\n            }\n        });\n    }\n    remove() {\n        if (this.isDragging()) {\n            this.stopDrag();\n        }\n        DD._dragElements.delete(this._id);\n        this._remove();\n        return this;\n    }\n    _clearCaches() {\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n        this._clearSelfAndDescendantCache(STAGE);\n        this._clearSelfAndDescendantCache(VISIBLE);\n        this._clearSelfAndDescendantCache(LISTENING);\n    }\n    _remove() {\n        this._clearCaches();\n        var parent = this.getParent();\n        if (parent && parent.children) {\n            parent.children.splice(this.index, 1);\n            parent._setChildrenIndices();\n            this.parent = null;\n        }\n    }\n    destroy() {\n        this.remove();\n        return this;\n    }\n    getAttr(attr) {\n        var method = 'get' + Util._capitalize(attr);\n        if (Util._isFunction(this[method])) {\n            return this[method]();\n        }\n        return this.attrs[attr];\n    }\n    getAncestors() {\n        var parent = this.getParent(), ancestors = [];\n        while (parent) {\n            ancestors.push(parent);\n            parent = parent.getParent();\n        }\n        return ancestors;\n    }\n    getAttrs() {\n        return this.attrs || {};\n    }\n    setAttrs(config) {\n        this._batchTransformChanges(() => {\n            var key, method;\n            if (!config) {\n                return this;\n            }\n            for (key in config) {\n                if (key === CHILDREN) {\n                    continue;\n                }\n                method = SET + Util._capitalize(key);\n                if (Util._isFunction(this[method])) {\n                    this[method](config[key]);\n                }\n                else {\n                    this._setAttr(key, config[key]);\n                }\n            }\n        });\n        return this;\n    }\n    isListening() {\n        return this._getCache(LISTENING, this._isListening);\n    }\n    _isListening(relativeTo) {\n        const listening = this.listening();\n        if (!listening) {\n            return false;\n        }\n        const parent = this.getParent();\n        if (parent && parent !== relativeTo && this !== relativeTo) {\n            return parent._isListening(relativeTo);\n        }\n        else {\n            return true;\n        }\n    }\n    isVisible() {\n        return this._getCache(VISIBLE, this._isVisible);\n    }\n    _isVisible(relativeTo) {\n        const visible = this.visible();\n        if (!visible) {\n            return false;\n        }\n        const parent = this.getParent();\n        if (parent && parent !== relativeTo && this !== relativeTo) {\n            return parent._isVisible(relativeTo);\n        }\n        else {\n            return true;\n        }\n    }\n    shouldDrawHit(top, skipDragCheck = false) {\n        if (top) {\n            return this._isVisible(top) && this._isListening(top);\n        }\n        var layer = this.getLayer();\n        var layerUnderDrag = false;\n        DD._dragElements.forEach((elem) => {\n            if (elem.dragStatus !== 'dragging') {\n                return;\n            }\n            else if (elem.node.nodeType === 'Stage') {\n                layerUnderDrag = true;\n            }\n            else if (elem.node.getLayer() === layer) {\n                layerUnderDrag = true;\n            }\n        });\n        var dragSkip = !skipDragCheck && !Konva.hitOnDragEnabled && layerUnderDrag;\n        return this.isListening() && this.isVisible() && !dragSkip;\n    }\n    show() {\n        this.visible(true);\n        return this;\n    }\n    hide() {\n        this.visible(false);\n        return this;\n    }\n    getZIndex() {\n        return this.index || 0;\n    }\n    getAbsoluteZIndex() {\n        var depth = this.getDepth(), that = this, index = 0, nodes, len, n, child;\n        function addChildren(children) {\n            nodes = [];\n            len = children.length;\n            for (n = 0; n < len; n++) {\n                child = children[n];\n                index++;\n                if (child.nodeType !== SHAPE) {\n                    nodes = nodes.concat(child.getChildren().slice());\n                }\n                if (child._id === that._id) {\n                    n = len;\n                }\n            }\n            if (nodes.length > 0 && nodes[0].getDepth() <= depth) {\n                addChildren(nodes);\n            }\n        }\n        if (that.nodeType !== UPPER_STAGE) {\n            addChildren(that.getStage().getChildren());\n        }\n        return index;\n    }\n    getDepth() {\n        var depth = 0, parent = this.parent;\n        while (parent) {\n            depth++;\n            parent = parent.parent;\n        }\n        return depth;\n    }\n    _batchTransformChanges(func) {\n        this._batchingTransformChange = true;\n        func();\n        this._batchingTransformChange = false;\n        if (this._needClearTransformCache) {\n            this._clearCache(TRANSFORM);\n            this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        }\n        this._needClearTransformCache = false;\n    }\n    setPosition(pos) {\n        this._batchTransformChanges(() => {\n            this.x(pos.x);\n            this.y(pos.y);\n        });\n        return this;\n    }\n    getPosition() {\n        return {\n            x: this.x(),\n            y: this.y(),\n        };\n    }\n    getRelativePointerPosition() {\n        if (!this.getStage()) {\n            return null;\n        }\n        var pos = this.getStage().getPointerPosition();\n        if (!pos) {\n            return null;\n        }\n        var transform = this.getAbsoluteTransform().copy();\n        transform.invert();\n        return transform.point(pos);\n    }\n    getAbsolutePosition(top) {\n        let haveCachedParent = false;\n        let parent = this.parent;\n        while (parent) {\n            if (parent.isCached()) {\n                haveCachedParent = true;\n                break;\n            }\n            parent = parent.parent;\n        }\n        if (haveCachedParent && !top) {\n            top = true;\n        }\n        var absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(), absoluteTransform = new Transform(), offset = this.offset();\n        absoluteTransform.m = absoluteMatrix.slice();\n        absoluteTransform.translate(offset.x, offset.y);\n        return absoluteTransform.getTranslation();\n    }\n    setAbsolutePosition(pos) {\n        var origTrans = this._clearTransform();\n        this.attrs.x = origTrans.x;\n        this.attrs.y = origTrans.y;\n        delete origTrans.x;\n        delete origTrans.y;\n        this._clearCache(TRANSFORM);\n        var it = this._getAbsoluteTransform().copy();\n        it.invert();\n        it.translate(pos.x, pos.y);\n        pos = {\n            x: this.attrs.x + it.getTranslation().x,\n            y: this.attrs.y + it.getTranslation().y,\n        };\n        this._setTransform(origTrans);\n        this.setPosition({ x: pos.x, y: pos.y });\n        this._clearCache(TRANSFORM);\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        return this;\n    }\n    _setTransform(trans) {\n        var key;\n        for (key in trans) {\n            this.attrs[key] = trans[key];\n        }\n    }\n    _clearTransform() {\n        var trans = {\n            x: this.x(),\n            y: this.y(),\n            rotation: this.rotation(),\n            scaleX: this.scaleX(),\n            scaleY: this.scaleY(),\n            offsetX: this.offsetX(),\n            offsetY: this.offsetY(),\n            skewX: this.skewX(),\n            skewY: this.skewY(),\n        };\n        this.attrs.x = 0;\n        this.attrs.y = 0;\n        this.attrs.rotation = 0;\n        this.attrs.scaleX = 1;\n        this.attrs.scaleY = 1;\n        this.attrs.offsetX = 0;\n        this.attrs.offsetY = 0;\n        this.attrs.skewX = 0;\n        this.attrs.skewY = 0;\n        return trans;\n    }\n    move(change) {\n        var changeX = change.x, changeY = change.y, x = this.x(), y = this.y();\n        if (changeX !== undefined) {\n            x += changeX;\n        }\n        if (changeY !== undefined) {\n            y += changeY;\n        }\n        this.setPosition({ x: x, y: y });\n        return this;\n    }\n    _eachAncestorReverse(func, top) {\n        var family = [], parent = this.getParent(), len, n;\n        if (top && top._id === this._id) {\n            return;\n        }\n        family.unshift(this);\n        while (parent && (!top || parent._id !== top._id)) {\n            family.unshift(parent);\n            parent = parent.parent;\n        }\n        len = family.length;\n        for (n = 0; n < len; n++) {\n            func(family[n]);\n        }\n    }\n    rotate(theta) {\n        this.rotation(this.rotation() + theta);\n        return this;\n    }\n    moveToTop() {\n        if (!this.parent) {\n            Util.warn('Node has no parent. moveToTop function is ignored.');\n            return false;\n        }\n        var index = this.index, len = this.parent.getChildren().length;\n        if (index < len - 1) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.push(this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveUp() {\n        if (!this.parent) {\n            Util.warn('Node has no parent. moveUp function is ignored.');\n            return false;\n        }\n        var index = this.index, len = this.parent.getChildren().length;\n        if (index < len - 1) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.splice(index + 1, 0, this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveDown() {\n        if (!this.parent) {\n            Util.warn('Node has no parent. moveDown function is ignored.');\n            return false;\n        }\n        var index = this.index;\n        if (index > 0) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.splice(index - 1, 0, this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveToBottom() {\n        if (!this.parent) {\n            Util.warn('Node has no parent. moveToBottom function is ignored.');\n            return false;\n        }\n        var index = this.index;\n        if (index > 0) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.unshift(this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    setZIndex(zIndex) {\n        if (!this.parent) {\n            Util.warn('Node has no parent. zIndex parameter is ignored.');\n            return this;\n        }\n        if (zIndex < 0 || zIndex >= this.parent.children.length) {\n            Util.warn('Unexpected value ' +\n                zIndex +\n                ' for zIndex property. zIndex is just index of a node in children of its parent. Expected value is from 0 to ' +\n                (this.parent.children.length - 1) +\n                '.');\n        }\n        var index = this.index;\n        this.parent.children.splice(index, 1);\n        this.parent.children.splice(zIndex, 0, this);\n        this.parent._setChildrenIndices();\n        return this;\n    }\n    getAbsoluteOpacity() {\n        return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\n    }\n    _getAbsoluteOpacity() {\n        var absOpacity = this.opacity();\n        var parent = this.getParent();\n        if (parent && !parent._isUnderCache) {\n            absOpacity *= parent.getAbsoluteOpacity();\n        }\n        return absOpacity;\n    }\n    moveTo(newContainer) {\n        if (this.getParent() !== newContainer) {\n            this._remove();\n            newContainer.add(this);\n        }\n        return this;\n    }\n    toObject() {\n        var obj = {}, attrs = this.getAttrs(), key, val, getter, defaultValue, nonPlainObject;\n        obj.attrs = {};\n        for (key in attrs) {\n            val = attrs[key];\n            nonPlainObject =\n                Util.isObject(val) && !Util._isPlainObject(val) && !Util._isArray(val);\n            if (nonPlainObject) {\n                continue;\n            }\n            getter = typeof this[key] === 'function' && this[key];\n            delete attrs[key];\n            defaultValue = getter ? getter.call(this) : null;\n            attrs[key] = val;\n            if (defaultValue !== val) {\n                obj.attrs[key] = val;\n            }\n        }\n        obj.className = this.getClassName();\n        return Util._prepareToStringify(obj);\n    }\n    toJSON() {\n        return JSON.stringify(this.toObject());\n    }\n    getParent() {\n        return this.parent;\n    }\n    findAncestors(selector, includeSelf, stopNode) {\n        var res = [];\n        if (includeSelf && this._isMatch(selector)) {\n            res.push(this);\n        }\n        var ancestor = this.parent;\n        while (ancestor) {\n            if (ancestor === stopNode) {\n                return res;\n            }\n            if (ancestor._isMatch(selector)) {\n                res.push(ancestor);\n            }\n            ancestor = ancestor.parent;\n        }\n        return res;\n    }\n    isAncestorOf(node) {\n        return false;\n    }\n    findAncestor(selector, includeSelf, stopNode) {\n        return this.findAncestors(selector, includeSelf, stopNode)[0];\n    }\n    _isMatch(selector) {\n        if (!selector) {\n            return false;\n        }\n        if (typeof selector === 'function') {\n            return selector(this);\n        }\n        var selectorArr = selector.replace(/ /g, '').split(','), len = selectorArr.length, n, sel;\n        for (n = 0; n < len; n++) {\n            sel = selectorArr[n];\n            if (!Util.isValidSelector(sel)) {\n                Util.warn('Selector \"' +\n                    sel +\n                    '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".');\n                Util.warn('If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".');\n                Util.warn('Konva is awesome, right?');\n            }\n            if (sel.charAt(0) === '#') {\n                if (this.id() === sel.slice(1)) {\n                    return true;\n                }\n            }\n            else if (sel.charAt(0) === '.') {\n                if (this.hasName(sel.slice(1))) {\n                    return true;\n                }\n            }\n            else if (this.className === sel || this.nodeType === sel) {\n                return true;\n            }\n        }\n        return false;\n    }\n    getLayer() {\n        var parent = this.getParent();\n        return parent ? parent.getLayer() : null;\n    }\n    getStage() {\n        return this._getCache(STAGE, this._getStage);\n    }\n    _getStage() {\n        var parent = this.getParent();\n        if (parent) {\n            return parent.getStage();\n        }\n        else {\n            return undefined;\n        }\n    }\n    fire(eventType, evt = {}, bubble) {\n        evt.target = evt.target || this;\n        if (bubble) {\n            this._fireAndBubble(eventType, evt);\n        }\n        else {\n            this._fire(eventType, evt);\n        }\n        return this;\n    }\n    getAbsoluteTransform(top) {\n        if (top) {\n            return this._getAbsoluteTransform(top);\n        }\n        else {\n            return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\n        }\n    }\n    _getAbsoluteTransform(top) {\n        var at;\n        if (top) {\n            at = new Transform();\n            this._eachAncestorReverse(function (node) {\n                var transformsEnabled = node.transformsEnabled();\n                if (transformsEnabled === 'all') {\n                    at.multiply(node.getTransform());\n                }\n                else if (transformsEnabled === 'position') {\n                    at.translate(node.x() - node.offsetX(), node.y() - node.offsetY());\n                }\n            }, top);\n            return at;\n        }\n        else {\n            at = this._cache.get(ABSOLUTE_TRANSFORM) || new Transform();\n            if (this.parent) {\n                this.parent.getAbsoluteTransform().copyInto(at);\n            }\n            else {\n                at.reset();\n            }\n            var transformsEnabled = this.transformsEnabled();\n            if (transformsEnabled === 'all') {\n                at.multiply(this.getTransform());\n            }\n            else if (transformsEnabled === 'position') {\n                const x = this.attrs.x || 0;\n                const y = this.attrs.y || 0;\n                const offsetX = this.attrs.offsetX || 0;\n                const offsetY = this.attrs.offsetY || 0;\n                at.translate(x - offsetX, y - offsetY);\n            }\n            at.dirty = false;\n            return at;\n        }\n    }\n    getAbsoluteScale(top) {\n        var parent = this;\n        while (parent) {\n            if (parent._isUnderCache) {\n                top = parent;\n            }\n            parent = parent.getParent();\n        }\n        const transform = this.getAbsoluteTransform(top);\n        const attrs = transform.decompose();\n        return {\n            x: attrs.scaleX,\n            y: attrs.scaleY,\n        };\n    }\n    getAbsoluteRotation() {\n        return this.getAbsoluteTransform().decompose().rotation;\n    }\n    getTransform() {\n        return this._getCache(TRANSFORM, this._getTransform);\n    }\n    _getTransform() {\n        var _a, _b;\n        var m = this._cache.get(TRANSFORM) || new Transform();\n        m.reset();\n        var x = this.x(), y = this.y(), rotation = Konva.getAngle(this.rotation()), scaleX = (_a = this.attrs.scaleX) !== null && _a !== void 0 ? _a : 1, scaleY = (_b = this.attrs.scaleY) !== null && _b !== void 0 ? _b : 1, skewX = this.attrs.skewX || 0, skewY = this.attrs.skewY || 0, offsetX = this.attrs.offsetX || 0, offsetY = this.attrs.offsetY || 0;\n        if (x !== 0 || y !== 0) {\n            m.translate(x, y);\n        }\n        if (rotation !== 0) {\n            m.rotate(rotation);\n        }\n        if (skewX !== 0 || skewY !== 0) {\n            m.skew(skewX, skewY);\n        }\n        if (scaleX !== 1 || scaleY !== 1) {\n            m.scale(scaleX, scaleY);\n        }\n        if (offsetX !== 0 || offsetY !== 0) {\n            m.translate(-1 * offsetX, -1 * offsetY);\n        }\n        m.dirty = false;\n        return m;\n    }\n    clone(obj) {\n        var attrs = Util.cloneObject(this.attrs), key, allListeners, len, n, listener;\n        for (key in obj) {\n            attrs[key] = obj[key];\n        }\n        var node = new this.constructor(attrs);\n        for (key in this.eventListeners) {\n            allListeners = this.eventListeners[key];\n            len = allListeners.length;\n            for (n = 0; n < len; n++) {\n                listener = allListeners[n];\n                if (listener.name.indexOf(KONVA) < 0) {\n                    if (!node.eventListeners[key]) {\n                        node.eventListeners[key] = [];\n                    }\n                    node.eventListeners[key].push(listener);\n                }\n            }\n        }\n        return node;\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        var box = this.getClientRect();\n        var stage = this.getStage(), x = config.x !== undefined ? config.x : Math.floor(box.x), y = config.y !== undefined ? config.y : Math.floor(box.y), pixelRatio = config.pixelRatio || 1, canvas = new SceneCanvas({\n            width: config.width || Math.ceil(box.width) || (stage ? stage.width() : 0),\n            height: config.height ||\n                Math.ceil(box.height) ||\n                (stage ? stage.height() : 0),\n            pixelRatio: pixelRatio,\n        }), context = canvas.getContext();\n        if (config.imageSmoothingEnabled === false) {\n            context._context.imageSmoothingEnabled = false;\n        }\n        context.save();\n        if (x || y) {\n            context.translate(-1 * x, -1 * y);\n        }\n        this.drawScene(canvas);\n        context.restore();\n        return canvas;\n    }\n    toCanvas(config) {\n        return this._toKonvaCanvas(config)._canvas;\n    }\n    toDataURL(config) {\n        config = config || {};\n        var mimeType = config.mimeType || null, quality = config.quality || null;\n        var url = this._toKonvaCanvas(config).toDataURL(mimeType, quality);\n        if (config.callback) {\n            config.callback(url);\n        }\n        return url;\n    }\n    toImage(config) {\n        return new Promise((resolve, reject) => {\n            try {\n                const callback = config === null || config === void 0 ? void 0 : config.callback;\n                if (callback)\n                    delete config.callback;\n                Util._urlToImage(this.toDataURL(config), function (img) {\n                    resolve(img);\n                    callback === null || callback === void 0 ? void 0 : callback(img);\n                });\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    toBlob(config) {\n        return new Promise((resolve, reject) => {\n            try {\n                const callback = config === null || config === void 0 ? void 0 : config.callback;\n                if (callback)\n                    delete config.callback;\n                this.toCanvas(config).toBlob((blob) => {\n                    resolve(blob);\n                    callback === null || callback === void 0 ? void 0 : callback(blob);\n                });\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    setSize(size) {\n        this.width(size.width);\n        this.height(size.height);\n        return this;\n    }\n    getSize() {\n        return {\n            width: this.width(),\n            height: this.height(),\n        };\n    }\n    getClassName() {\n        return this.className || this.nodeType;\n    }\n    getType() {\n        return this.nodeType;\n    }\n    getDragDistance() {\n        if (this.attrs.dragDistance !== undefined) {\n            return this.attrs.dragDistance;\n        }\n        else if (this.parent) {\n            return this.parent.getDragDistance();\n        }\n        else {\n            return Konva.dragDistance;\n        }\n    }\n    _off(type, name, callback) {\n        var evtListeners = this.eventListeners[type], i, evtName, handler;\n        for (i = 0; i < evtListeners.length; i++) {\n            evtName = evtListeners[i].name;\n            handler = evtListeners[i].handler;\n            if ((evtName !== 'konva' || name === 'konva') &&\n                (!name || evtName === name) &&\n                (!callback || callback === handler)) {\n                evtListeners.splice(i, 1);\n                if (evtListeners.length === 0) {\n                    delete this.eventListeners[type];\n                    break;\n                }\n                i--;\n            }\n        }\n    }\n    _fireChangeEvent(attr, oldVal, newVal) {\n        this._fire(attr + CHANGE, {\n            oldVal: oldVal,\n            newVal: newVal,\n        });\n    }\n    addName(name) {\n        if (!this.hasName(name)) {\n            var oldName = this.name();\n            var newName = oldName ? oldName + ' ' + name : name;\n            this.name(newName);\n        }\n        return this;\n    }\n    hasName(name) {\n        if (!name) {\n            return false;\n        }\n        const fullName = this.name();\n        if (!fullName) {\n            return false;\n        }\n        var names = (fullName || '').split(/\\s/g);\n        return names.indexOf(name) !== -1;\n    }\n    removeName(name) {\n        var names = (this.name() || '').split(/\\s/g);\n        var index = names.indexOf(name);\n        if (index !== -1) {\n            names.splice(index, 1);\n            this.name(names.join(' '));\n        }\n        return this;\n    }\n    setAttr(attr, val) {\n        var func = this[SET + Util._capitalize(attr)];\n        if (Util._isFunction(func)) {\n            func.call(this, val);\n        }\n        else {\n            this._setAttr(attr, val);\n        }\n        return this;\n    }\n    _requestDraw() {\n        if (Konva.autoDrawEnabled) {\n            const drawNode = this.getLayer() || this.getStage();\n            drawNode === null || drawNode === void 0 ? void 0 : drawNode.batchDraw();\n        }\n    }\n    _setAttr(key, val) {\n        var oldVal = this.attrs[key];\n        if (oldVal === val && !Util.isObject(val)) {\n            return;\n        }\n        if (val === undefined || val === null) {\n            delete this.attrs[key];\n        }\n        else {\n            this.attrs[key] = val;\n        }\n        if (this._shouldFireChangeEvents) {\n            this._fireChangeEvent(key, oldVal, val);\n        }\n        this._requestDraw();\n    }\n    _setComponentAttr(key, component, val) {\n        var oldVal;\n        if (val !== undefined) {\n            oldVal = this.attrs[key];\n            if (!oldVal) {\n                this.attrs[key] = this.getAttr(key);\n            }\n            this.attrs[key][component] = val;\n            this._fireChangeEvent(key, oldVal, val);\n        }\n    }\n    _fireAndBubble(eventType, evt, compareShape) {\n        if (evt && this.nodeType === SHAPE) {\n            evt.target = this;\n        }\n        var shouldStop = (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\n            ((compareShape &&\n                (this === compareShape ||\n                    (this.isAncestorOf && this.isAncestorOf(compareShape)))) ||\n                (this.nodeType === 'Stage' && !compareShape));\n        if (!shouldStop) {\n            this._fire(eventType, evt);\n            var stopBubble = (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\n                compareShape &&\n                compareShape.isAncestorOf &&\n                compareShape.isAncestorOf(this) &&\n                !compareShape.isAncestorOf(this.parent);\n            if (((evt && !evt.cancelBubble) || !evt) &&\n                this.parent &&\n                this.parent.isListening() &&\n                !stopBubble) {\n                if (compareShape && compareShape.parent) {\n                    this._fireAndBubble.call(this.parent, eventType, evt, compareShape);\n                }\n                else {\n                    this._fireAndBubble.call(this.parent, eventType, evt);\n                }\n            }\n        }\n    }\n    _getProtoListeners(eventType) {\n        let listeners = this._cache.get(ALL_LISTENERS);\n        if (!listeners) {\n            listeners = {};\n            let obj = Object.getPrototypeOf(this);\n            while (obj) {\n                if (!obj.eventListeners) {\n                    obj = Object.getPrototypeOf(obj);\n                    continue;\n                }\n                for (var event in obj.eventListeners) {\n                    const newEvents = obj.eventListeners[event];\n                    const oldEvents = listeners[event] || [];\n                    listeners[event] = newEvents.concat(oldEvents);\n                }\n                obj = Object.getPrototypeOf(obj);\n            }\n            this._cache.set(ALL_LISTENERS, listeners);\n        }\n        return listeners[eventType];\n    }\n    _fire(eventType, evt) {\n        evt = evt || {};\n        evt.currentTarget = this;\n        evt.type = eventType;\n        const topListeners = this._getProtoListeners(eventType);\n        if (topListeners) {\n            for (var i = 0; i < topListeners.length; i++) {\n                topListeners[i].handler.call(this, evt);\n            }\n        }\n        const selfListeners = this.eventListeners[eventType];\n        if (selfListeners) {\n            for (var i = 0; i < selfListeners.length; i++) {\n                selfListeners[i].handler.call(this, evt);\n            }\n        }\n    }\n    draw() {\n        this.drawScene();\n        this.drawHit();\n        return this;\n    }\n    _createDragElement(evt) {\n        var pointerId = evt ? evt.pointerId : undefined;\n        var stage = this.getStage();\n        var ap = this.getAbsolutePosition();\n        var pos = stage._getPointerById(pointerId) ||\n            stage._changedPointerPositions[0] ||\n            ap;\n        DD._dragElements.set(this._id, {\n            node: this,\n            startPointerPos: pos,\n            offset: {\n                x: pos.x - ap.x,\n                y: pos.y - ap.y,\n            },\n            dragStatus: 'ready',\n            pointerId,\n        });\n    }\n    startDrag(evt, bubbleEvent = true) {\n        if (!DD._dragElements.has(this._id)) {\n            this._createDragElement(evt);\n        }\n        const elem = DD._dragElements.get(this._id);\n        elem.dragStatus = 'dragging';\n        this.fire('dragstart', {\n            type: 'dragstart',\n            target: this,\n            evt: evt && evt.evt,\n        }, bubbleEvent);\n    }\n    _setDragPosition(evt, elem) {\n        const pos = this.getStage()._getPointerById(elem.pointerId);\n        if (!pos) {\n            return;\n        }\n        var newNodePos = {\n            x: pos.x - elem.offset.x,\n            y: pos.y - elem.offset.y,\n        };\n        var dbf = this.dragBoundFunc();\n        if (dbf !== undefined) {\n            const bounded = dbf.call(this, newNodePos, evt);\n            if (!bounded) {\n                Util.warn('dragBoundFunc did not return any value. That is unexpected behavior. You must return new absolute position from dragBoundFunc.');\n            }\n            else {\n                newNodePos = bounded;\n            }\n        }\n        if (!this._lastPos ||\n            this._lastPos.x !== newNodePos.x ||\n            this._lastPos.y !== newNodePos.y) {\n            this.setAbsolutePosition(newNodePos);\n            this._requestDraw();\n        }\n        this._lastPos = newNodePos;\n    }\n    stopDrag(evt) {\n        const elem = DD._dragElements.get(this._id);\n        if (elem) {\n            elem.dragStatus = 'stopped';\n        }\n        DD._endDragBefore(evt);\n        DD._endDragAfter(evt);\n    }\n    setDraggable(draggable) {\n        this._setAttr('draggable', draggable);\n        this._dragChange();\n    }\n    isDragging() {\n        const elem = DD._dragElements.get(this._id);\n        return elem ? elem.dragStatus === 'dragging' : false;\n    }\n    _listenDrag() {\n        this._dragCleanup();\n        this.on('mousedown.konva touchstart.konva', function (evt) {\n            var shouldCheckButton = evt.evt['button'] !== undefined;\n            var canDrag = !shouldCheckButton || Konva.dragButtons.indexOf(evt.evt['button']) >= 0;\n            if (!canDrag) {\n                return;\n            }\n            if (this.isDragging()) {\n                return;\n            }\n            var hasDraggingChild = false;\n            DD._dragElements.forEach((elem) => {\n                if (this.isAncestorOf(elem.node)) {\n                    hasDraggingChild = true;\n                }\n            });\n            if (!hasDraggingChild) {\n                this._createDragElement(evt);\n            }\n        });\n    }\n    _dragChange() {\n        if (this.attrs.draggable) {\n            this._listenDrag();\n        }\n        else {\n            this._dragCleanup();\n            var stage = this.getStage();\n            if (!stage) {\n                return;\n            }\n            const dragElement = DD._dragElements.get(this._id);\n            const isDragging = dragElement && dragElement.dragStatus === 'dragging';\n            const isReady = dragElement && dragElement.dragStatus === 'ready';\n            if (isDragging) {\n                this.stopDrag();\n            }\n            else if (isReady) {\n                DD._dragElements.delete(this._id);\n            }\n        }\n    }\n    _dragCleanup() {\n        this.off('mousedown.konva');\n        this.off('touchstart.konva');\n    }\n    isClientRectOnScreen(margin = { x: 0, y: 0 }) {\n        const stage = this.getStage();\n        if (!stage) {\n            return false;\n        }\n        const screenRect = {\n            x: -margin.x,\n            y: -margin.y,\n            width: stage.width() + 2 * margin.x,\n            height: stage.height() + 2 * margin.y,\n        };\n        return Util.haveIntersection(screenRect, this.getClientRect());\n    }\n    static create(data, container) {\n        if (Util._isString(data)) {\n            data = JSON.parse(data);\n        }\n        return this._createNode(data, container);\n    }\n    static _createNode(obj, container) {\n        var className = Node.prototype.getClassName.call(obj), children = obj.children, no, len, n;\n        if (container) {\n            obj.attrs.container = container;\n        }\n        if (!Konva[className]) {\n            Util.warn('Can not find a node with class name \"' +\n                className +\n                '\". Fallback to \"Shape\".');\n            className = 'Shape';\n        }\n        const Class = Konva[className];\n        no = new Class(obj.attrs);\n        if (children) {\n            len = children.length;\n            for (n = 0; n < len; n++) {\n                no.add(Node._createNode(children[n]));\n            }\n        }\n        return no;\n    }\n}\nNode.prototype.nodeType = 'Node';\nNode.prototype._attrsAffectingSize = [];\nNode.prototype.eventListeners = {};\nNode.prototype.on.call(Node.prototype, TRANSFORM_CHANGE_STR, function () {\n    if (this._batchingTransformChange) {\n        this._needClearTransformCache = true;\n        return;\n    }\n    this._clearCache(TRANSFORM);\n    this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n});\nNode.prototype.on.call(Node.prototype, 'visibleChange.konva', function () {\n    this._clearSelfAndDescendantCache(VISIBLE);\n});\nNode.prototype.on.call(Node.prototype, 'listeningChange.konva', function () {\n    this._clearSelfAndDescendantCache(LISTENING);\n});\nNode.prototype.on.call(Node.prototype, 'opacityChange.konva', function () {\n    this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n});\nconst addGetterSetter = Factory.addGetterSetter;\naddGetterSetter(Node, 'zIndex');\naddGetterSetter(Node, 'absolutePosition');\naddGetterSetter(Node, 'position');\naddGetterSetter(Node, 'x', 0, getNumberValidator());\naddGetterSetter(Node, 'y', 0, getNumberValidator());\naddGetterSetter(Node, 'globalCompositeOperation', 'source-over', getStringValidator());\naddGetterSetter(Node, 'opacity', 1, getNumberValidator());\naddGetterSetter(Node, 'name', '', getStringValidator());\naddGetterSetter(Node, 'id', '', getStringValidator());\naddGetterSetter(Node, 'rotation', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'scale', ['x', 'y']);\naddGetterSetter(Node, 'scaleX', 1, getNumberValidator());\naddGetterSetter(Node, 'scaleY', 1, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'skew', ['x', 'y']);\naddGetterSetter(Node, 'skewX', 0, getNumberValidator());\naddGetterSetter(Node, 'skewY', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'offset', ['x', 'y']);\naddGetterSetter(Node, 'offsetX', 0, getNumberValidator());\naddGetterSetter(Node, 'offsetY', 0, getNumberValidator());\naddGetterSetter(Node, 'dragDistance', null, getNumberValidator());\naddGetterSetter(Node, 'width', 0, getNumberValidator());\naddGetterSetter(Node, 'height', 0, getNumberValidator());\naddGetterSetter(Node, 'listening', true, getBooleanValidator());\naddGetterSetter(Node, 'preventDefault', true, getBooleanValidator());\naddGetterSetter(Node, 'filters', null, function (val) {\n    this._filterUpToDate = false;\n    return val;\n});\naddGetterSetter(Node, 'visible', true, getBooleanValidator());\naddGetterSetter(Node, 'transformsEnabled', 'all', getStringValidator());\naddGetterSetter(Node, 'size');\naddGetterSetter(Node, 'dragBoundFunc');\naddGetterSetter(Node, 'draggable', false, getBooleanValidator());\nFactory.backCompat(Node, {\n    rotateDeg: 'rotate',\n    setRotationDeg: 'setRotation',\n    getRotationDeg: 'getRotation',\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}