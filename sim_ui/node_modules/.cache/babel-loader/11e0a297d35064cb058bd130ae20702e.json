{"ast":null,"code":"import { Konva } from './Global.js';\nexport class Transform {\n  constructor() {\n    let m = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [1, 0, 0, 1, 0, 0];\n    this.dirty = false;\n    this.m = m && m.slice() || [1, 0, 0, 1, 0, 0];\n  }\n\n  reset() {\n    this.m[0] = 1;\n    this.m[1] = 0;\n    this.m[2] = 0;\n    this.m[3] = 1;\n    this.m[4] = 0;\n    this.m[5] = 0;\n  }\n\n  copy() {\n    return new Transform(this.m);\n  }\n\n  copyInto(tr) {\n    tr.m[0] = this.m[0];\n    tr.m[1] = this.m[1];\n    tr.m[2] = this.m[2];\n    tr.m[3] = this.m[3];\n    tr.m[4] = this.m[4];\n    tr.m[5] = this.m[5];\n  }\n\n  point(point) {\n    var m = this.m;\n    return {\n      x: m[0] * point.x + m[2] * point.y + m[4],\n      y: m[1] * point.x + m[3] * point.y + m[5]\n    };\n  }\n\n  translate(x, y) {\n    this.m[4] += this.m[0] * x + this.m[2] * y;\n    this.m[5] += this.m[1] * x + this.m[3] * y;\n    return this;\n  }\n\n  scale(sx, sy) {\n    this.m[0] *= sx;\n    this.m[1] *= sx;\n    this.m[2] *= sy;\n    this.m[3] *= sy;\n    return this;\n  }\n\n  rotate(rad) {\n    var c = Math.cos(rad);\n    var s = Math.sin(rad);\n    var m11 = this.m[0] * c + this.m[2] * s;\n    var m12 = this.m[1] * c + this.m[3] * s;\n    var m21 = this.m[0] * -s + this.m[2] * c;\n    var m22 = this.m[1] * -s + this.m[3] * c;\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    return this;\n  }\n\n  getTranslation() {\n    return {\n      x: this.m[4],\n      y: this.m[5]\n    };\n  }\n\n  skew(sx, sy) {\n    var m11 = this.m[0] + this.m[2] * sy;\n    var m12 = this.m[1] + this.m[3] * sy;\n    var m21 = this.m[2] + this.m[0] * sx;\n    var m22 = this.m[3] + this.m[1] * sx;\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    return this;\n  }\n\n  multiply(matrix) {\n    var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n    var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n    var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n    var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n    var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n    var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    this.m[4] = dx;\n    this.m[5] = dy;\n    return this;\n  }\n\n  invert() {\n    var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n    var m0 = this.m[3] * d;\n    var m1 = -this.m[1] * d;\n    var m2 = -this.m[2] * d;\n    var m3 = this.m[0] * d;\n    var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n    var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n    this.m[0] = m0;\n    this.m[1] = m1;\n    this.m[2] = m2;\n    this.m[3] = m3;\n    this.m[4] = m4;\n    this.m[5] = m5;\n    return this;\n  }\n\n  getMatrix() {\n    return this.m;\n  }\n\n  decompose() {\n    var a = this.m[0];\n    var b = this.m[1];\n    var c = this.m[2];\n    var d = this.m[3];\n    var e = this.m[4];\n    var f = this.m[5];\n    var delta = a * d - b * c;\n    let result = {\n      x: e,\n      y: f,\n      rotation: 0,\n      scaleX: 0,\n      scaleY: 0,\n      skewX: 0,\n      skewY: 0\n    };\n\n    if (a != 0 || b != 0) {\n      var r = Math.sqrt(a * a + b * b);\n      result.rotation = b > 0 ? Math.acos(a / r) : -Math.acos(a / r);\n      result.scaleX = r;\n      result.scaleY = delta / r;\n      result.skewX = (a * c + b * d) / delta;\n      result.skewY = 0;\n    } else if (c != 0 || d != 0) {\n      var s = Math.sqrt(c * c + d * d);\n      result.rotation = Math.PI / 2 - (d > 0 ? Math.acos(-c / s) : -Math.acos(c / s));\n      result.scaleX = delta / s;\n      result.scaleY = s;\n      result.skewX = 0;\n      result.skewY = (a * c + b * d) / delta;\n    } else {}\n\n    result.rotation = Util._getRotation(result.rotation);\n    return result;\n  }\n\n}\nvar OBJECT_ARRAY = '[object Array]',\n    OBJECT_NUMBER = '[object Number]',\n    OBJECT_STRING = '[object String]',\n    OBJECT_BOOLEAN = '[object Boolean]',\n    PI_OVER_DEG180 = Math.PI / 180,\n    DEG180_OVER_PI = 180 / Math.PI,\n    HASH = '#',\n    EMPTY_STRING = '',\n    ZERO = '0',\n    KONVA_WARNING = 'Konva warning: ',\n    KONVA_ERROR = 'Konva error: ',\n    RGB_PAREN = 'rgb(',\n    COLORS = {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 132, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 255, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 203],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [119, 128, 144],\n  slategrey: [119, 128, 144],\n  snow: [255, 255, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  transparent: [255, 255, 255, 0],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 5]\n},\n    RGB_REGEX = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/,\n    animQueue = [];\n\nconst req = typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || function (f) {\n  setTimeout(f, 60);\n};\n\nexport const Util = {\n  _isElement(obj) {\n    return !!(obj && obj.nodeType == 1);\n  },\n\n  _isFunction(obj) {\n    return !!(obj && obj.constructor && obj.call && obj.apply);\n  },\n\n  _isPlainObject(obj) {\n    return !!obj && obj.constructor === Object;\n  },\n\n  _isArray(obj) {\n    return Object.prototype.toString.call(obj) === OBJECT_ARRAY;\n  },\n\n  _isNumber(obj) {\n    return Object.prototype.toString.call(obj) === OBJECT_NUMBER && !isNaN(obj) && isFinite(obj);\n  },\n\n  _isString(obj) {\n    return Object.prototype.toString.call(obj) === OBJECT_STRING;\n  },\n\n  _isBoolean(obj) {\n    return Object.prototype.toString.call(obj) === OBJECT_BOOLEAN;\n  },\n\n  isObject(val) {\n    return val instanceof Object;\n  },\n\n  isValidSelector(selector) {\n    if (typeof selector !== 'string') {\n      return false;\n    }\n\n    var firstChar = selector[0];\n    return firstChar === '#' || firstChar === '.' || firstChar === firstChar.toUpperCase();\n  },\n\n  _sign(number) {\n    if (number === 0) {\n      return 1;\n    }\n\n    if (number > 0) {\n      return 1;\n    } else {\n      return -1;\n    }\n  },\n\n  requestAnimFrame(callback) {\n    animQueue.push(callback);\n\n    if (animQueue.length === 1) {\n      req(function () {\n        const queue = animQueue;\n        animQueue = [];\n        queue.forEach(function (cb) {\n          cb();\n        });\n      });\n    }\n  },\n\n  createCanvasElement() {\n    var canvas = document.createElement('canvas');\n\n    try {\n      canvas.style = canvas.style || {};\n    } catch (e) {}\n\n    return canvas;\n  },\n\n  createImageElement() {\n    return document.createElement('img');\n  },\n\n  _isInDocument(el) {\n    while (el = el.parentNode) {\n      if (el == document) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  _urlToImage(url, callback) {\n    var imageObj = Util.createImageElement();\n\n    imageObj.onload = function () {\n      callback(imageObj);\n    };\n\n    imageObj.src = url;\n  },\n\n  _rgbToHex(r, g, b) {\n    return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n  },\n\n  _hexToRgb(hex) {\n    hex = hex.replace(HASH, EMPTY_STRING);\n    var bigint = parseInt(hex, 16);\n    return {\n      r: bigint >> 16 & 255,\n      g: bigint >> 8 & 255,\n      b: bigint & 255\n    };\n  },\n\n  getRandomColor() {\n    var randColor = (Math.random() * 0xffffff << 0).toString(16);\n\n    while (randColor.length < 6) {\n      randColor = ZERO + randColor;\n    }\n\n    return HASH + randColor;\n  },\n\n  getRGB(color) {\n    var rgb;\n\n    if (color in COLORS) {\n      rgb = COLORS[color];\n      return {\n        r: rgb[0],\n        g: rgb[1],\n        b: rgb[2]\n      };\n    } else if (color[0] === HASH) {\n      return this._hexToRgb(color.substring(1));\n    } else if (color.substr(0, 4) === RGB_PAREN) {\n      rgb = RGB_REGEX.exec(color.replace(/ /g, ''));\n      return {\n        r: parseInt(rgb[1], 10),\n        g: parseInt(rgb[2], 10),\n        b: parseInt(rgb[3], 10)\n      };\n    } else {\n      return {\n        r: 0,\n        g: 0,\n        b: 0\n      };\n    }\n  },\n\n  colorToRGBA(str) {\n    str = str || 'black';\n    return Util._namedColorToRBA(str) || Util._hex3ColorToRGBA(str) || Util._hex6ColorToRGBA(str) || Util._rgbColorToRGBA(str) || Util._rgbaColorToRGBA(str) || Util._hslColorToRGBA(str);\n  },\n\n  _namedColorToRBA(str) {\n    var c = COLORS[str.toLowerCase()];\n\n    if (!c) {\n      return null;\n    }\n\n    return {\n      r: c[0],\n      g: c[1],\n      b: c[2],\n      a: 1\n    };\n  },\n\n  _rgbColorToRGBA(str) {\n    if (str.indexOf('rgb(') === 0) {\n      str = str.match(/rgb\\(([^)]+)\\)/)[1];\n      var parts = str.split(/ *, */).map(Number);\n      return {\n        r: parts[0],\n        g: parts[1],\n        b: parts[2],\n        a: 1\n      };\n    }\n  },\n\n  _rgbaColorToRGBA(str) {\n    if (str.indexOf('rgba(') === 0) {\n      str = str.match(/rgba\\(([^)]+)\\)/)[1];\n      var parts = str.split(/ *, */).map((n, index) => {\n        if (n.slice(-1) === '%') {\n          return index === 3 ? parseInt(n) / 100 : parseInt(n) / 100 * 255;\n        }\n\n        return Number(n);\n      });\n      return {\n        r: parts[0],\n        g: parts[1],\n        b: parts[2],\n        a: parts[3]\n      };\n    }\n  },\n\n  _hex6ColorToRGBA(str) {\n    if (str[0] === '#' && str.length === 7) {\n      return {\n        r: parseInt(str.slice(1, 3), 16),\n        g: parseInt(str.slice(3, 5), 16),\n        b: parseInt(str.slice(5, 7), 16),\n        a: 1\n      };\n    }\n  },\n\n  _hex3ColorToRGBA(str) {\n    if (str[0] === '#' && str.length === 4) {\n      return {\n        r: parseInt(str[1] + str[1], 16),\n        g: parseInt(str[2] + str[2], 16),\n        b: parseInt(str[3] + str[3], 16),\n        a: 1\n      };\n    }\n  },\n\n  _hslColorToRGBA(str) {\n    if (/hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.test(str)) {\n      const [_, ...hsl] = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(str);\n      const h = Number(hsl[0]) / 360;\n      const s = Number(hsl[1]) / 100;\n      const l = Number(hsl[2]) / 100;\n      let t2;\n      let t3;\n      let val;\n\n      if (s === 0) {\n        val = l * 255;\n        return {\n          r: Math.round(val),\n          g: Math.round(val),\n          b: Math.round(val),\n          a: 1\n        };\n      }\n\n      if (l < 0.5) {\n        t2 = l * (1 + s);\n      } else {\n        t2 = l + s - l * s;\n      }\n\n      const t1 = 2 * l - t2;\n      const rgb = [0, 0, 0];\n\n      for (let i = 0; i < 3; i++) {\n        t3 = h + 1 / 3 * -(i - 1);\n\n        if (t3 < 0) {\n          t3++;\n        }\n\n        if (t3 > 1) {\n          t3--;\n        }\n\n        if (6 * t3 < 1) {\n          val = t1 + (t2 - t1) * 6 * t3;\n        } else if (2 * t3 < 1) {\n          val = t2;\n        } else if (3 * t3 < 2) {\n          val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n        } else {\n          val = t1;\n        }\n\n        rgb[i] = val * 255;\n      }\n\n      return {\n        r: Math.round(rgb[0]),\n        g: Math.round(rgb[1]),\n        b: Math.round(rgb[2]),\n        a: 1\n      };\n    }\n  },\n\n  haveIntersection(r1, r2) {\n    return !(r2.x > r1.x + r1.width || r2.x + r2.width < r1.x || r2.y > r1.y + r1.height || r2.y + r2.height < r1.y);\n  },\n\n  cloneObject(obj) {\n    var retObj = {};\n\n    for (var key in obj) {\n      if (this._isPlainObject(obj[key])) {\n        retObj[key] = this.cloneObject(obj[key]);\n      } else if (this._isArray(obj[key])) {\n        retObj[key] = this.cloneArray(obj[key]);\n      } else {\n        retObj[key] = obj[key];\n      }\n    }\n\n    return retObj;\n  },\n\n  cloneArray(arr) {\n    return arr.slice(0);\n  },\n\n  degToRad(deg) {\n    return deg * PI_OVER_DEG180;\n  },\n\n  radToDeg(rad) {\n    return rad * DEG180_OVER_PI;\n  },\n\n  _degToRad(deg) {\n    Util.warn('Util._degToRad is removed. Please use public Util.degToRad instead.');\n    return Util.degToRad(deg);\n  },\n\n  _radToDeg(rad) {\n    Util.warn('Util._radToDeg is removed. Please use public Util.radToDeg instead.');\n    return Util.radToDeg(rad);\n  },\n\n  _getRotation(radians) {\n    return Konva.angleDeg ? Util.radToDeg(radians) : radians;\n  },\n\n  _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  },\n\n  throw(str) {\n    throw new Error(KONVA_ERROR + str);\n  },\n\n  error(str) {\n    console.error(KONVA_ERROR + str);\n  },\n\n  warn(str) {\n    if (!Konva.showWarnings) {\n      return;\n    }\n\n    console.warn(KONVA_WARNING + str);\n  },\n\n  each(obj, func) {\n    for (var key in obj) {\n      func(key, obj[key]);\n    }\n  },\n\n  _inRange(val, left, right) {\n    return left <= val && val < right;\n  },\n\n  _getProjectionToSegment(x1, y1, x2, y2, x3, y3) {\n    var x, y, dist;\n    var pd2 = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n\n    if (pd2 == 0) {\n      x = x1;\n      y = y1;\n      dist = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);\n    } else {\n      var u = ((x3 - x1) * (x2 - x1) + (y3 - y1) * (y2 - y1)) / pd2;\n\n      if (u < 0) {\n        x = x1;\n        y = y1;\n        dist = (x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3);\n      } else if (u > 1.0) {\n        x = x2;\n        y = y2;\n        dist = (x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3);\n      } else {\n        x = x1 + u * (x2 - x1);\n        y = y1 + u * (y2 - y1);\n        dist = (x - x3) * (x - x3) + (y - y3) * (y - y3);\n      }\n    }\n\n    return [x, y, dist];\n  },\n\n  _getProjectionToLine(pt, line, isClosed) {\n    var pc = Util.cloneObject(pt);\n    var dist = Number.MAX_VALUE;\n    line.forEach(function (p1, i) {\n      if (!isClosed && i === line.length - 1) {\n        return;\n      }\n\n      var p2 = line[(i + 1) % line.length];\n\n      var proj = Util._getProjectionToSegment(p1.x, p1.y, p2.x, p2.y, pt.x, pt.y);\n\n      var px = proj[0],\n          py = proj[1],\n          pdist = proj[2];\n\n      if (pdist < dist) {\n        pc.x = px;\n        pc.y = py;\n        dist = pdist;\n      }\n    });\n    return pc;\n  },\n\n  _prepareArrayForTween(startArray, endArray, isClosed) {\n    var n,\n        start = [],\n        end = [];\n\n    if (startArray.length > endArray.length) {\n      var temp = endArray;\n      endArray = startArray;\n      startArray = temp;\n    }\n\n    for (n = 0; n < startArray.length; n += 2) {\n      start.push({\n        x: startArray[n],\n        y: startArray[n + 1]\n      });\n    }\n\n    for (n = 0; n < endArray.length; n += 2) {\n      end.push({\n        x: endArray[n],\n        y: endArray[n + 1]\n      });\n    }\n\n    var newStart = [];\n    end.forEach(function (point) {\n      var pr = Util._getProjectionToLine(point, start, isClosed);\n\n      newStart.push(pr.x);\n      newStart.push(pr.y);\n    });\n    return newStart;\n  },\n\n  _prepareToStringify(obj) {\n    var desc;\n    obj.visitedByCircularReferenceRemoval = true;\n\n    for (var key in obj) {\n      if (!(obj.hasOwnProperty(key) && obj[key] && typeof obj[key] == 'object')) {\n        continue;\n      }\n\n      desc = Object.getOwnPropertyDescriptor(obj, key);\n\n      if (obj[key].visitedByCircularReferenceRemoval || Util._isElement(obj[key])) {\n        if (desc.configurable) {\n          delete obj[key];\n        } else {\n          return null;\n        }\n      } else if (Util._prepareToStringify(obj[key]) === null) {\n        if (desc.configurable) {\n          delete obj[key];\n        } else {\n          return null;\n        }\n      }\n    }\n\n    delete obj.visitedByCircularReferenceRemoval;\n    return obj;\n  },\n\n  _assign(target, source) {\n    for (var key in source) {\n      target[key] = source[key];\n    }\n\n    return target;\n  },\n\n  _getFirstPointerId(evt) {\n    if (!evt.touches) {\n      return evt.pointerId || 999;\n    } else {\n      return evt.changedTouches[0].identifier;\n    }\n  }\n\n};","map":{"version":3,"names":["Konva","Transform","constructor","m","dirty","slice","reset","copy","copyInto","tr","point","x","y","translate","scale","sx","sy","rotate","rad","c","Math","cos","s","sin","m11","m12","m21","m22","getTranslation","skew","multiply","matrix","dx","dy","invert","d","m0","m1","m2","m3","m4","m5","getMatrix","decompose","a","b","e","f","delta","result","rotation","scaleX","scaleY","skewX","skewY","r","sqrt","acos","PI","Util","_getRotation","OBJECT_ARRAY","OBJECT_NUMBER","OBJECT_STRING","OBJECT_BOOLEAN","PI_OVER_DEG180","DEG180_OVER_PI","HASH","EMPTY_STRING","ZERO","KONVA_WARNING","KONVA_ERROR","RGB_PAREN","COLORS","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","transparent","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","RGB_REGEX","animQueue","req","requestAnimationFrame","setTimeout","_isElement","obj","nodeType","_isFunction","call","apply","_isPlainObject","Object","_isArray","prototype","toString","_isNumber","isNaN","isFinite","_isString","_isBoolean","isObject","val","isValidSelector","selector","firstChar","toUpperCase","_sign","number","requestAnimFrame","callback","push","length","queue","forEach","cb","createCanvasElement","canvas","document","createElement","style","createImageElement","_isInDocument","el","parentNode","_urlToImage","url","imageObj","onload","src","_rgbToHex","g","_hexToRgb","hex","replace","bigint","parseInt","getRandomColor","randColor","random","getRGB","color","rgb","substring","substr","exec","colorToRGBA","str","_namedColorToRBA","_hex3ColorToRGBA","_hex6ColorToRGBA","_rgbColorToRGBA","_rgbaColorToRGBA","_hslColorToRGBA","toLowerCase","indexOf","match","parts","split","map","Number","n","index","test","_","hsl","h","l","t2","t3","round","t1","i","haveIntersection","r1","r2","width","height","cloneObject","retObj","key","cloneArray","arr","degToRad","deg","radToDeg","_degToRad","warn","_radToDeg","radians","angleDeg","_capitalize","charAt","throw","Error","error","console","showWarnings","each","func","_inRange","left","right","_getProjectionToSegment","x1","y1","x2","y2","x3","y3","dist","pd2","u","_getProjectionToLine","pt","line","isClosed","pc","MAX_VALUE","p1","p2","proj","px","py","pdist","_prepareArrayForTween","startArray","endArray","start","end","temp","newStart","pr","_prepareToStringify","desc","visitedByCircularReferenceRemoval","hasOwnProperty","getOwnPropertyDescriptor","configurable","_assign","target","source","_getFirstPointerId","evt","touches","pointerId","changedTouches","identifier"],"sources":["C:/traffic_sim/traffic-sim/sim_ui/node_modules/konva/lib/Util.js"],"sourcesContent":["import { Konva } from './Global.js';\nexport class Transform {\n    constructor(m = [1, 0, 0, 1, 0, 0]) {\n        this.dirty = false;\n        this.m = (m && m.slice()) || [1, 0, 0, 1, 0, 0];\n    }\n    reset() {\n        this.m[0] = 1;\n        this.m[1] = 0;\n        this.m[2] = 0;\n        this.m[3] = 1;\n        this.m[4] = 0;\n        this.m[5] = 0;\n    }\n    copy() {\n        return new Transform(this.m);\n    }\n    copyInto(tr) {\n        tr.m[0] = this.m[0];\n        tr.m[1] = this.m[1];\n        tr.m[2] = this.m[2];\n        tr.m[3] = this.m[3];\n        tr.m[4] = this.m[4];\n        tr.m[5] = this.m[5];\n    }\n    point(point) {\n        var m = this.m;\n        return {\n            x: m[0] * point.x + m[2] * point.y + m[4],\n            y: m[1] * point.x + m[3] * point.y + m[5],\n        };\n    }\n    translate(x, y) {\n        this.m[4] += this.m[0] * x + this.m[2] * y;\n        this.m[5] += this.m[1] * x + this.m[3] * y;\n        return this;\n    }\n    scale(sx, sy) {\n        this.m[0] *= sx;\n        this.m[1] *= sx;\n        this.m[2] *= sy;\n        this.m[3] *= sy;\n        return this;\n    }\n    rotate(rad) {\n        var c = Math.cos(rad);\n        var s = Math.sin(rad);\n        var m11 = this.m[0] * c + this.m[2] * s;\n        var m12 = this.m[1] * c + this.m[3] * s;\n        var m21 = this.m[0] * -s + this.m[2] * c;\n        var m22 = this.m[1] * -s + this.m[3] * c;\n        this.m[0] = m11;\n        this.m[1] = m12;\n        this.m[2] = m21;\n        this.m[3] = m22;\n        return this;\n    }\n    getTranslation() {\n        return {\n            x: this.m[4],\n            y: this.m[5],\n        };\n    }\n    skew(sx, sy) {\n        var m11 = this.m[0] + this.m[2] * sy;\n        var m12 = this.m[1] + this.m[3] * sy;\n        var m21 = this.m[2] + this.m[0] * sx;\n        var m22 = this.m[3] + this.m[1] * sx;\n        this.m[0] = m11;\n        this.m[1] = m12;\n        this.m[2] = m21;\n        this.m[3] = m22;\n        return this;\n    }\n    multiply(matrix) {\n        var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n        var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n        var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n        var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n        var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n        var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n        this.m[0] = m11;\n        this.m[1] = m12;\n        this.m[2] = m21;\n        this.m[3] = m22;\n        this.m[4] = dx;\n        this.m[5] = dy;\n        return this;\n    }\n    invert() {\n        var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n        var m0 = this.m[3] * d;\n        var m1 = -this.m[1] * d;\n        var m2 = -this.m[2] * d;\n        var m3 = this.m[0] * d;\n        var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n        var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n        this.m[0] = m0;\n        this.m[1] = m1;\n        this.m[2] = m2;\n        this.m[3] = m3;\n        this.m[4] = m4;\n        this.m[5] = m5;\n        return this;\n    }\n    getMatrix() {\n        return this.m;\n    }\n    decompose() {\n        var a = this.m[0];\n        var b = this.m[1];\n        var c = this.m[2];\n        var d = this.m[3];\n        var e = this.m[4];\n        var f = this.m[5];\n        var delta = a * d - b * c;\n        let result = {\n            x: e,\n            y: f,\n            rotation: 0,\n            scaleX: 0,\n            scaleY: 0,\n            skewX: 0,\n            skewY: 0,\n        };\n        if (a != 0 || b != 0) {\n            var r = Math.sqrt(a * a + b * b);\n            result.rotation = b > 0 ? Math.acos(a / r) : -Math.acos(a / r);\n            result.scaleX = r;\n            result.scaleY = delta / r;\n            result.skewX = (a * c + b * d) / delta;\n            result.skewY = 0;\n        }\n        else if (c != 0 || d != 0) {\n            var s = Math.sqrt(c * c + d * d);\n            result.rotation =\n                Math.PI / 2 - (d > 0 ? Math.acos(-c / s) : -Math.acos(c / s));\n            result.scaleX = delta / s;\n            result.scaleY = s;\n            result.skewX = 0;\n            result.skewY = (a * c + b * d) / delta;\n        }\n        else {\n        }\n        result.rotation = Util._getRotation(result.rotation);\n        return result;\n    }\n}\nvar OBJECT_ARRAY = '[object Array]', OBJECT_NUMBER = '[object Number]', OBJECT_STRING = '[object String]', OBJECT_BOOLEAN = '[object Boolean]', PI_OVER_DEG180 = Math.PI / 180, DEG180_OVER_PI = 180 / Math.PI, HASH = '#', EMPTY_STRING = '', ZERO = '0', KONVA_WARNING = 'Konva warning: ', KONVA_ERROR = 'Konva error: ', RGB_PAREN = 'rgb(', COLORS = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 132, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 255, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 203],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [119, 128, 144],\n    slategrey: [119, 128, 144],\n    snow: [255, 255, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    transparent: [255, 255, 255, 0],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 5],\n}, RGB_REGEX = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/, animQueue = [];\nconst req = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame) ||\n    function (f) {\n        setTimeout(f, 60);\n    };\nexport const Util = {\n    _isElement(obj) {\n        return !!(obj && obj.nodeType == 1);\n    },\n    _isFunction(obj) {\n        return !!(obj && obj.constructor && obj.call && obj.apply);\n    },\n    _isPlainObject(obj) {\n        return !!obj && obj.constructor === Object;\n    },\n    _isArray(obj) {\n        return Object.prototype.toString.call(obj) === OBJECT_ARRAY;\n    },\n    _isNumber(obj) {\n        return (Object.prototype.toString.call(obj) === OBJECT_NUMBER &&\n            !isNaN(obj) &&\n            isFinite(obj));\n    },\n    _isString(obj) {\n        return Object.prototype.toString.call(obj) === OBJECT_STRING;\n    },\n    _isBoolean(obj) {\n        return Object.prototype.toString.call(obj) === OBJECT_BOOLEAN;\n    },\n    isObject(val) {\n        return val instanceof Object;\n    },\n    isValidSelector(selector) {\n        if (typeof selector !== 'string') {\n            return false;\n        }\n        var firstChar = selector[0];\n        return (firstChar === '#' ||\n            firstChar === '.' ||\n            firstChar === firstChar.toUpperCase());\n    },\n    _sign(number) {\n        if (number === 0) {\n            return 1;\n        }\n        if (number > 0) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    },\n    requestAnimFrame(callback) {\n        animQueue.push(callback);\n        if (animQueue.length === 1) {\n            req(function () {\n                const queue = animQueue;\n                animQueue = [];\n                queue.forEach(function (cb) {\n                    cb();\n                });\n            });\n        }\n    },\n    createCanvasElement() {\n        var canvas = document.createElement('canvas');\n        try {\n            canvas.style = canvas.style || {};\n        }\n        catch (e) { }\n        return canvas;\n    },\n    createImageElement() {\n        return document.createElement('img');\n    },\n    _isInDocument(el) {\n        while ((el = el.parentNode)) {\n            if (el == document) {\n                return true;\n            }\n        }\n        return false;\n    },\n    _urlToImage(url, callback) {\n        var imageObj = Util.createImageElement();\n        imageObj.onload = function () {\n            callback(imageObj);\n        };\n        imageObj.src = url;\n    },\n    _rgbToHex(r, g, b) {\n        return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n    },\n    _hexToRgb(hex) {\n        hex = hex.replace(HASH, EMPTY_STRING);\n        var bigint = parseInt(hex, 16);\n        return {\n            r: (bigint >> 16) & 255,\n            g: (bigint >> 8) & 255,\n            b: bigint & 255,\n        };\n    },\n    getRandomColor() {\n        var randColor = ((Math.random() * 0xffffff) << 0).toString(16);\n        while (randColor.length < 6) {\n            randColor = ZERO + randColor;\n        }\n        return HASH + randColor;\n    },\n    getRGB(color) {\n        var rgb;\n        if (color in COLORS) {\n            rgb = COLORS[color];\n            return {\n                r: rgb[0],\n                g: rgb[1],\n                b: rgb[2],\n            };\n        }\n        else if (color[0] === HASH) {\n            return this._hexToRgb(color.substring(1));\n        }\n        else if (color.substr(0, 4) === RGB_PAREN) {\n            rgb = RGB_REGEX.exec(color.replace(/ /g, ''));\n            return {\n                r: parseInt(rgb[1], 10),\n                g: parseInt(rgb[2], 10),\n                b: parseInt(rgb[3], 10),\n            };\n        }\n        else {\n            return {\n                r: 0,\n                g: 0,\n                b: 0,\n            };\n        }\n    },\n    colorToRGBA(str) {\n        str = str || 'black';\n        return (Util._namedColorToRBA(str) ||\n            Util._hex3ColorToRGBA(str) ||\n            Util._hex6ColorToRGBA(str) ||\n            Util._rgbColorToRGBA(str) ||\n            Util._rgbaColorToRGBA(str) ||\n            Util._hslColorToRGBA(str));\n    },\n    _namedColorToRBA(str) {\n        var c = COLORS[str.toLowerCase()];\n        if (!c) {\n            return null;\n        }\n        return {\n            r: c[0],\n            g: c[1],\n            b: c[2],\n            a: 1,\n        };\n    },\n    _rgbColorToRGBA(str) {\n        if (str.indexOf('rgb(') === 0) {\n            str = str.match(/rgb\\(([^)]+)\\)/)[1];\n            var parts = str.split(/ *, */).map(Number);\n            return {\n                r: parts[0],\n                g: parts[1],\n                b: parts[2],\n                a: 1,\n            };\n        }\n    },\n    _rgbaColorToRGBA(str) {\n        if (str.indexOf('rgba(') === 0) {\n            str = str.match(/rgba\\(([^)]+)\\)/)[1];\n            var parts = str.split(/ *, */).map((n, index) => {\n                if (n.slice(-1) === '%') {\n                    return index === 3 ? parseInt(n) / 100 : (parseInt(n) / 100) * 255;\n                }\n                return Number(n);\n            });\n            return {\n                r: parts[0],\n                g: parts[1],\n                b: parts[2],\n                a: parts[3],\n            };\n        }\n    },\n    _hex6ColorToRGBA(str) {\n        if (str[0] === '#' && str.length === 7) {\n            return {\n                r: parseInt(str.slice(1, 3), 16),\n                g: parseInt(str.slice(3, 5), 16),\n                b: parseInt(str.slice(5, 7), 16),\n                a: 1,\n            };\n        }\n    },\n    _hex3ColorToRGBA(str) {\n        if (str[0] === '#' && str.length === 4) {\n            return {\n                r: parseInt(str[1] + str[1], 16),\n                g: parseInt(str[2] + str[2], 16),\n                b: parseInt(str[3] + str[3], 16),\n                a: 1,\n            };\n        }\n    },\n    _hslColorToRGBA(str) {\n        if (/hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.test(str)) {\n            const [_, ...hsl] = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(str);\n            const h = Number(hsl[0]) / 360;\n            const s = Number(hsl[1]) / 100;\n            const l = Number(hsl[2]) / 100;\n            let t2;\n            let t3;\n            let val;\n            if (s === 0) {\n                val = l * 255;\n                return {\n                    r: Math.round(val),\n                    g: Math.round(val),\n                    b: Math.round(val),\n                    a: 1,\n                };\n            }\n            if (l < 0.5) {\n                t2 = l * (1 + s);\n            }\n            else {\n                t2 = l + s - l * s;\n            }\n            const t1 = 2 * l - t2;\n            const rgb = [0, 0, 0];\n            for (let i = 0; i < 3; i++) {\n                t3 = h + (1 / 3) * -(i - 1);\n                if (t3 < 0) {\n                    t3++;\n                }\n                if (t3 > 1) {\n                    t3--;\n                }\n                if (6 * t3 < 1) {\n                    val = t1 + (t2 - t1) * 6 * t3;\n                }\n                else if (2 * t3 < 1) {\n                    val = t2;\n                }\n                else if (3 * t3 < 2) {\n                    val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n                }\n                else {\n                    val = t1;\n                }\n                rgb[i] = val * 255;\n            }\n            return {\n                r: Math.round(rgb[0]),\n                g: Math.round(rgb[1]),\n                b: Math.round(rgb[2]),\n                a: 1,\n            };\n        }\n    },\n    haveIntersection(r1, r2) {\n        return !(r2.x > r1.x + r1.width ||\n            r2.x + r2.width < r1.x ||\n            r2.y > r1.y + r1.height ||\n            r2.y + r2.height < r1.y);\n    },\n    cloneObject(obj) {\n        var retObj = {};\n        for (var key in obj) {\n            if (this._isPlainObject(obj[key])) {\n                retObj[key] = this.cloneObject(obj[key]);\n            }\n            else if (this._isArray(obj[key])) {\n                retObj[key] = this.cloneArray(obj[key]);\n            }\n            else {\n                retObj[key] = obj[key];\n            }\n        }\n        return retObj;\n    },\n    cloneArray(arr) {\n        return arr.slice(0);\n    },\n    degToRad(deg) {\n        return deg * PI_OVER_DEG180;\n    },\n    radToDeg(rad) {\n        return rad * DEG180_OVER_PI;\n    },\n    _degToRad(deg) {\n        Util.warn('Util._degToRad is removed. Please use public Util.degToRad instead.');\n        return Util.degToRad(deg);\n    },\n    _radToDeg(rad) {\n        Util.warn('Util._radToDeg is removed. Please use public Util.radToDeg instead.');\n        return Util.radToDeg(rad);\n    },\n    _getRotation(radians) {\n        return Konva.angleDeg ? Util.radToDeg(radians) : radians;\n    },\n    _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n    throw(str) {\n        throw new Error(KONVA_ERROR + str);\n    },\n    error(str) {\n        console.error(KONVA_ERROR + str);\n    },\n    warn(str) {\n        if (!Konva.showWarnings) {\n            return;\n        }\n        console.warn(KONVA_WARNING + str);\n    },\n    each(obj, func) {\n        for (var key in obj) {\n            func(key, obj[key]);\n        }\n    },\n    _inRange(val, left, right) {\n        return left <= val && val < right;\n    },\n    _getProjectionToSegment(x1, y1, x2, y2, x3, y3) {\n        var x, y, dist;\n        var pd2 = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n        if (pd2 == 0) {\n            x = x1;\n            y = y1;\n            dist = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);\n        }\n        else {\n            var u = ((x3 - x1) * (x2 - x1) + (y3 - y1) * (y2 - y1)) / pd2;\n            if (u < 0) {\n                x = x1;\n                y = y1;\n                dist = (x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3);\n            }\n            else if (u > 1.0) {\n                x = x2;\n                y = y2;\n                dist = (x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3);\n            }\n            else {\n                x = x1 + u * (x2 - x1);\n                y = y1 + u * (y2 - y1);\n                dist = (x - x3) * (x - x3) + (y - y3) * (y - y3);\n            }\n        }\n        return [x, y, dist];\n    },\n    _getProjectionToLine(pt, line, isClosed) {\n        var pc = Util.cloneObject(pt);\n        var dist = Number.MAX_VALUE;\n        line.forEach(function (p1, i) {\n            if (!isClosed && i === line.length - 1) {\n                return;\n            }\n            var p2 = line[(i + 1) % line.length];\n            var proj = Util._getProjectionToSegment(p1.x, p1.y, p2.x, p2.y, pt.x, pt.y);\n            var px = proj[0], py = proj[1], pdist = proj[2];\n            if (pdist < dist) {\n                pc.x = px;\n                pc.y = py;\n                dist = pdist;\n            }\n        });\n        return pc;\n    },\n    _prepareArrayForTween(startArray, endArray, isClosed) {\n        var n, start = [], end = [];\n        if (startArray.length > endArray.length) {\n            var temp = endArray;\n            endArray = startArray;\n            startArray = temp;\n        }\n        for (n = 0; n < startArray.length; n += 2) {\n            start.push({\n                x: startArray[n],\n                y: startArray[n + 1],\n            });\n        }\n        for (n = 0; n < endArray.length; n += 2) {\n            end.push({\n                x: endArray[n],\n                y: endArray[n + 1],\n            });\n        }\n        var newStart = [];\n        end.forEach(function (point) {\n            var pr = Util._getProjectionToLine(point, start, isClosed);\n            newStart.push(pr.x);\n            newStart.push(pr.y);\n        });\n        return newStart;\n    },\n    _prepareToStringify(obj) {\n        var desc;\n        obj.visitedByCircularReferenceRemoval = true;\n        for (var key in obj) {\n            if (!(obj.hasOwnProperty(key) && obj[key] && typeof obj[key] == 'object')) {\n                continue;\n            }\n            desc = Object.getOwnPropertyDescriptor(obj, key);\n            if (obj[key].visitedByCircularReferenceRemoval ||\n                Util._isElement(obj[key])) {\n                if (desc.configurable) {\n                    delete obj[key];\n                }\n                else {\n                    return null;\n                }\n            }\n            else if (Util._prepareToStringify(obj[key]) === null) {\n                if (desc.configurable) {\n                    delete obj[key];\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n        delete obj.visitedByCircularReferenceRemoval;\n        return obj;\n    },\n    _assign(target, source) {\n        for (var key in source) {\n            target[key] = source[key];\n        }\n        return target;\n    },\n    _getFirstPointerId(evt) {\n        if (!evt.touches) {\n            return evt.pointerId || 999;\n        }\n        else {\n            return evt.changedTouches[0].identifier;\n        }\n    },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}