{"ast":null,"code":"import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\n\nfunction remap(fromValue, fromMin, fromMax, toMin, toMax) {\n  var fromRange = fromMax - fromMin,\n      toRange = toMax - toMin,\n      toValue;\n\n  if (fromRange === 0) {\n    return toMin + toRange / 2;\n  }\n\n  if (toRange === 0) {\n    return toMin;\n  }\n\n  toValue = (fromValue - fromMin) / fromRange;\n  toValue = toRange * toValue + toMin;\n  return toValue;\n}\n\nexport const Enhance = function (imageData) {\n  var data = imageData.data,\n      nSubPixels = data.length,\n      rMin = data[0],\n      rMax = rMin,\n      r,\n      gMin = data[1],\n      gMax = gMin,\n      g,\n      bMin = data[2],\n      bMax = bMin,\n      b,\n      i;\n  var enhanceAmount = this.enhance();\n\n  if (enhanceAmount === 0) {\n    return;\n  }\n\n  for (i = 0; i < nSubPixels; i += 4) {\n    r = data[i + 0];\n\n    if (r < rMin) {\n      rMin = r;\n    } else if (r > rMax) {\n      rMax = r;\n    }\n\n    g = data[i + 1];\n\n    if (g < gMin) {\n      gMin = g;\n    } else if (g > gMax) {\n      gMax = g;\n    }\n\n    b = data[i + 2];\n\n    if (b < bMin) {\n      bMin = b;\n    } else if (b > bMax) {\n      bMax = b;\n    }\n  }\n\n  if (rMax === rMin) {\n    rMax = 255;\n    rMin = 0;\n  }\n\n  if (gMax === gMin) {\n    gMax = 255;\n    gMin = 0;\n  }\n\n  if (bMax === bMin) {\n    bMax = 255;\n    bMin = 0;\n  }\n\n  var rMid, rGoalMax, rGoalMin, gMid, gGoalMax, gGoalMin, bMid, bGoalMax, bGoalMin;\n\n  if (enhanceAmount > 0) {\n    rGoalMax = rMax + enhanceAmount * (255 - rMax);\n    rGoalMin = rMin - enhanceAmount * (rMin - 0);\n    gGoalMax = gMax + enhanceAmount * (255 - gMax);\n    gGoalMin = gMin - enhanceAmount * (gMin - 0);\n    bGoalMax = bMax + enhanceAmount * (255 - bMax);\n    bGoalMin = bMin - enhanceAmount * (bMin - 0);\n  } else {\n    rMid = (rMax + rMin) * 0.5;\n    rGoalMax = rMax + enhanceAmount * (rMax - rMid);\n    rGoalMin = rMin + enhanceAmount * (rMin - rMid);\n    gMid = (gMax + gMin) * 0.5;\n    gGoalMax = gMax + enhanceAmount * (gMax - gMid);\n    gGoalMin = gMin + enhanceAmount * (gMin - gMid);\n    bMid = (bMax + bMin) * 0.5;\n    bGoalMax = bMax + enhanceAmount * (bMax - bMid);\n    bGoalMin = bMin + enhanceAmount * (bMin - bMid);\n  }\n\n  for (i = 0; i < nSubPixels; i += 4) {\n    data[i + 0] = remap(data[i + 0], rMin, rMax, rGoalMin, rGoalMax);\n    data[i + 1] = remap(data[i + 1], gMin, gMax, gGoalMin, gGoalMax);\n    data[i + 2] = remap(data[i + 2], bMin, bMax, bGoalMin, bGoalMax);\n  }\n};\nFactory.addGetterSetter(Node, 'enhance', 0, getNumberValidator(), Factory.afterSetFilter);","map":{"version":3,"names":["Factory","Node","getNumberValidator","remap","fromValue","fromMin","fromMax","toMin","toMax","fromRange","toRange","toValue","Enhance","imageData","data","nSubPixels","length","rMin","rMax","r","gMin","gMax","g","bMin","bMax","b","i","enhanceAmount","enhance","rMid","rGoalMax","rGoalMin","gMid","gGoalMax","gGoalMin","bMid","bGoalMax","bGoalMin","addGetterSetter","afterSetFilter"],"sources":["C:/traffic_sim/traffic-sim/sim_ui/node_modules/konva/lib/filters/Enhance.js"],"sourcesContent":["import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nfunction remap(fromValue, fromMin, fromMax, toMin, toMax) {\n    var fromRange = fromMax - fromMin, toRange = toMax - toMin, toValue;\n    if (fromRange === 0) {\n        return toMin + toRange / 2;\n    }\n    if (toRange === 0) {\n        return toMin;\n    }\n    toValue = (fromValue - fromMin) / fromRange;\n    toValue = toRange * toValue + toMin;\n    return toValue;\n}\nexport const Enhance = function (imageData) {\n    var data = imageData.data, nSubPixels = data.length, rMin = data[0], rMax = rMin, r, gMin = data[1], gMax = gMin, g, bMin = data[2], bMax = bMin, b, i;\n    var enhanceAmount = this.enhance();\n    if (enhanceAmount === 0) {\n        return;\n    }\n    for (i = 0; i < nSubPixels; i += 4) {\n        r = data[i + 0];\n        if (r < rMin) {\n            rMin = r;\n        }\n        else if (r > rMax) {\n            rMax = r;\n        }\n        g = data[i + 1];\n        if (g < gMin) {\n            gMin = g;\n        }\n        else if (g > gMax) {\n            gMax = g;\n        }\n        b = data[i + 2];\n        if (b < bMin) {\n            bMin = b;\n        }\n        else if (b > bMax) {\n            bMax = b;\n        }\n    }\n    if (rMax === rMin) {\n        rMax = 255;\n        rMin = 0;\n    }\n    if (gMax === gMin) {\n        gMax = 255;\n        gMin = 0;\n    }\n    if (bMax === bMin) {\n        bMax = 255;\n        bMin = 0;\n    }\n    var rMid, rGoalMax, rGoalMin, gMid, gGoalMax, gGoalMin, bMid, bGoalMax, bGoalMin;\n    if (enhanceAmount > 0) {\n        rGoalMax = rMax + enhanceAmount * (255 - rMax);\n        rGoalMin = rMin - enhanceAmount * (rMin - 0);\n        gGoalMax = gMax + enhanceAmount * (255 - gMax);\n        gGoalMin = gMin - enhanceAmount * (gMin - 0);\n        bGoalMax = bMax + enhanceAmount * (255 - bMax);\n        bGoalMin = bMin - enhanceAmount * (bMin - 0);\n    }\n    else {\n        rMid = (rMax + rMin) * 0.5;\n        rGoalMax = rMax + enhanceAmount * (rMax - rMid);\n        rGoalMin = rMin + enhanceAmount * (rMin - rMid);\n        gMid = (gMax + gMin) * 0.5;\n        gGoalMax = gMax + enhanceAmount * (gMax - gMid);\n        gGoalMin = gMin + enhanceAmount * (gMin - gMid);\n        bMid = (bMax + bMin) * 0.5;\n        bGoalMax = bMax + enhanceAmount * (bMax - bMid);\n        bGoalMin = bMin + enhanceAmount * (bMin - bMid);\n    }\n    for (i = 0; i < nSubPixels; i += 4) {\n        data[i + 0] = remap(data[i + 0], rMin, rMax, rGoalMin, rGoalMax);\n        data[i + 1] = remap(data[i + 1], gMin, gMax, gGoalMin, gGoalMax);\n        data[i + 2] = remap(data[i + 2], bMin, bMax, bGoalMin, bGoalMax);\n    }\n};\nFactory.addGetterSetter(Node, 'enhance', 0, getNumberValidator(), Factory.afterSetFilter);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}