{"ast":null,"code":"var _jsxFileName = \"C:\\\\traffic_sim\\\\traffic-sim\\\\sim_ui\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { Stage, Layer, Rect, Text } from 'react-konva';\nimport road_data from './backend/salisbury-road-just-roads.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction nodes_to_array(nodes) {\n  const roads = [];\n\n  for (const node of Object.entries(nodes)) {\n    roads.push(node);\n  }\n\n  return {\n    roads\n  };\n}\n\nconst GEN_ROADS = nodes_to_array(road_data.nodes.connections);\nconst GEN_ATTRS = nodes_to_array(road_data.nodes.attractions);\n\nconst App = () => {\n  _s();\n\n  const roads = React.useState(GEN_ROADS);\n  const attrs = React.useState(GEN_ATTRS);\n  const widthFactor = 1 / 2;\n  const heightFactor = 1 / 2;\n  return /*#__PURE__*/_jsxDEV(Stage, {\n    width: window.innerWidth,\n    height: window.innerHeight,\n    children: /*#__PURE__*/_jsxDEV(Layer, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        text: \"Test Map\",\n        fontSize: 15\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), roads[0].roads.map((_, i) => /*#__PURE__*/_jsxDEV(Rect, {\n        id: roads[0].roads[i][0],\n        x: roads[0].roads[i][1].lon * widthFactor,\n        y: roads[0].roads[i][1].lat * heightFactor,\n        width: 5,\n        height: 5,\n        fill: \"black\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)), attrs[0].roads.map((_, i) => /*#__PURE__*/_jsxDEV(Rect, {\n        id: attrs[0].roads[i][0],\n        x: attrs[0].roads[i][1].lon * widthFactor,\n        y: attrs[0].roads[i][1].lat * heightFactor,\n        width: 30,\n        height: 30,\n        fill: \"red\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"5qnyNzQbu/A2xAeVRbyV+iQ/Xwo=\");\n\n_c = App;\nconst container = document.getElementById('root');\nconst root = createRoot(container);\nroot.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 57,\n  columnNumber: 15\n}, this));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","createRoot","Stage","Layer","Rect","Text","road_data","nodes_to_array","nodes","roads","node","Object","entries","push","GEN_ROADS","connections","GEN_ATTRS","attractions","App","useState","attrs","widthFactor","heightFactor","window","innerWidth","innerHeight","map","_","i","lon","lat","container","document","getElementById","root","render"],"sources":["C:/traffic_sim/traffic-sim/sim_ui/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { Stage, Layer, Rect, Text } from 'react-konva';\r\nimport road_data from './backend/salisbury-road-just-roads.json';\r\n\r\nfunction nodes_to_array(nodes) {\r\n  const roads = []\r\n  for (const node of Object.entries(nodes)) {\r\n    roads.push(node)\r\n  }\r\n  return {\r\n    roads\r\n  }\r\n}\r\n\r\nconst GEN_ROADS = nodes_to_array(road_data.nodes.connections);\r\nconst GEN_ATTRS = nodes_to_array(road_data.nodes.attractions);\r\n\r\nconst App = () => {\r\n  const roads = React.useState(GEN_ROADS);\r\n  const attrs = React.useState(GEN_ATTRS);\r\n  const widthFactor = 1 / 2\r\n  const heightFactor = 1 / 2\r\n    return (\r\n      <Stage width={window.innerWidth} height={window.innerHeight}>\r\n        <Layer>\r\n          <Text text=\"Test Map\" fontSize={15} />\r\n          {roads[0].roads.map((_, i) => (\r\n          <Rect\r\n            key={i}\r\n            id={roads[0].roads[i][0]}\r\n            x={roads[0].roads[i][1].lon * widthFactor}\r\n            y={roads[0].roads[i][1].lat * heightFactor}\r\n            width={5}\r\n            height={5}\r\n            fill=\"black\"\r\n          />\r\n        ))}\r\n          {attrs[0].roads.map((_, i) => (\r\n          <Rect\r\n            key={i}\r\n            id={attrs[0].roads[i][0]}\r\n            x={attrs[0].roads[i][1].lon * widthFactor}\r\n            y={attrs[0].roads[i][1].lat * heightFactor}\r\n            width={30}\r\n            height={30}\r\n            fill=\"red\"\r\n          />\r\n        ))}\r\n        </Layer>\r\n      </Stage>\r\n    );\r\n  };\r\n  \r\n  const container = document.getElementById('root');\r\n  const root = createRoot(container);\r\n  root.render(<App />);\r\n  "],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,IAA7B,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,0CAAtB;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;EAC7B,MAAMC,KAAK,GAAG,EAAd;;EACA,KAAK,MAAMC,IAAX,IAAmBC,MAAM,CAACC,OAAP,CAAeJ,KAAf,CAAnB,EAA0C;IACxCC,KAAK,CAACI,IAAN,CAAWH,IAAX;EACD;;EACD,OAAO;IACLD;EADK,CAAP;AAGD;;AAED,MAAMK,SAAS,GAAGP,cAAc,CAACD,SAAS,CAACE,KAAV,CAAgBO,WAAjB,CAAhC;AACA,MAAMC,SAAS,GAAGT,cAAc,CAACD,SAAS,CAACE,KAAV,CAAgBS,WAAjB,CAAhC;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAMT,KAAK,GAAGT,KAAK,CAACmB,QAAN,CAAeL,SAAf,CAAd;EACA,MAAMM,KAAK,GAAGpB,KAAK,CAACmB,QAAN,CAAeH,SAAf,CAAd;EACA,MAAMK,WAAW,GAAG,IAAI,CAAxB;EACA,MAAMC,YAAY,GAAG,IAAI,CAAzB;EACE,oBACE,QAAC,KAAD;IAAO,KAAK,EAAEC,MAAM,CAACC,UAArB;IAAiC,MAAM,EAAED,MAAM,CAACE,WAAhD;IAAA,uBACE,QAAC,KAAD;MAAA,wBACE,QAAC,IAAD;QAAM,IAAI,EAAC,UAAX;QAAsB,QAAQ,EAAE;MAAhC;QAAA;QAAA;QAAA;MAAA,QADF,EAEGhB,KAAK,CAAC,CAAD,CAAL,CAASA,KAAT,CAAeiB,GAAf,CAAmB,CAACC,CAAD,EAAIC,CAAJ,kBACpB,QAAC,IAAD;QAEE,EAAE,EAAEnB,KAAK,CAAC,CAAD,CAAL,CAASA,KAAT,CAAemB,CAAf,EAAkB,CAAlB,CAFN;QAGE,CAAC,EAAEnB,KAAK,CAAC,CAAD,CAAL,CAASA,KAAT,CAAemB,CAAf,EAAkB,CAAlB,EAAqBC,GAArB,GAA2BR,WAHhC;QAIE,CAAC,EAAEZ,KAAK,CAAC,CAAD,CAAL,CAASA,KAAT,CAAemB,CAAf,EAAkB,CAAlB,EAAqBE,GAArB,GAA2BR,YAJhC;QAKE,KAAK,EAAE,CALT;QAME,MAAM,EAAE,CANV;QAOE,IAAI,EAAC;MAPP,GACOM,CADP;QAAA;QAAA;QAAA;MAAA,QADC,CAFH,EAaGR,KAAK,CAAC,CAAD,CAAL,CAASX,KAAT,CAAeiB,GAAf,CAAmB,CAACC,CAAD,EAAIC,CAAJ,kBACpB,QAAC,IAAD;QAEE,EAAE,EAAER,KAAK,CAAC,CAAD,CAAL,CAASX,KAAT,CAAemB,CAAf,EAAkB,CAAlB,CAFN;QAGE,CAAC,EAAER,KAAK,CAAC,CAAD,CAAL,CAASX,KAAT,CAAemB,CAAf,EAAkB,CAAlB,EAAqBC,GAArB,GAA2BR,WAHhC;QAIE,CAAC,EAAED,KAAK,CAAC,CAAD,CAAL,CAASX,KAAT,CAAemB,CAAf,EAAkB,CAAlB,EAAqBE,GAArB,GAA2BR,YAJhC;QAKE,KAAK,EAAE,EALT;QAME,MAAM,EAAE,EANV;QAOE,IAAI,EAAC;MAPP,GACOM,CADP;QAAA;QAAA;QAAA;MAAA,QADC,CAbH;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA6BD,CAlCH;;GAAMV,G;;KAAAA,G;AAoCJ,MAAMa,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAlB;AACA,MAAMC,IAAI,GAAGjC,UAAU,CAAC8B,SAAD,CAAvB;AACAG,IAAI,CAACC,MAAL,eAAY,QAAC,GAAD;EAAA;EAAA;EAAA;AAAA,QAAZ"},"metadata":{},"sourceType":"module"}