{"ast":null,"code":"import { Util } from './Util.js';\nimport { SceneContext, HitContext } from './Context.js';\nimport { Konva } from './Global.js';\nimport { Factory } from './Factory.js';\nimport { getNumberValidator } from './Validators.js';\n\nvar _pixelRatio;\n\nfunction getDevicePixelRatio() {\n  if (_pixelRatio) {\n    return _pixelRatio;\n  }\n\n  var canvas = Util.createCanvasElement();\n  var context = canvas.getContext('2d');\n\n  _pixelRatio = function () {\n    var devicePixelRatio = Konva._global.devicePixelRatio || 1,\n        backingStoreRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n    return devicePixelRatio / backingStoreRatio;\n  }();\n\n  return _pixelRatio;\n}\n\nexport class Canvas {\n  constructor(config) {\n    this.pixelRatio = 1;\n    this.width = 0;\n    this.height = 0;\n    this.isCache = false;\n    var conf = config || {};\n    var pixelRatio = conf.pixelRatio || Konva.pixelRatio || getDevicePixelRatio();\n    this.pixelRatio = pixelRatio;\n    this._canvas = Util.createCanvasElement();\n    this._canvas.style.padding = '0';\n    this._canvas.style.margin = '0';\n    this._canvas.style.border = '0';\n    this._canvas.style.background = 'transparent';\n    this._canvas.style.position = 'absolute';\n    this._canvas.style.top = '0';\n    this._canvas.style.left = '0';\n  }\n\n  getContext() {\n    return this.context;\n  }\n\n  getPixelRatio() {\n    return this.pixelRatio;\n  }\n\n  setPixelRatio(pixelRatio) {\n    var previousRatio = this.pixelRatio;\n    this.pixelRatio = pixelRatio;\n    this.setSize(this.getWidth() / previousRatio, this.getHeight() / previousRatio);\n  }\n\n  setWidth(width) {\n    this.width = this._canvas.width = width * this.pixelRatio;\n    this._canvas.style.width = width + 'px';\n\n    var pixelRatio = this.pixelRatio,\n        _context = this.getContext()._context;\n\n    _context.scale(pixelRatio, pixelRatio);\n  }\n\n  setHeight(height) {\n    this.height = this._canvas.height = height * this.pixelRatio;\n    this._canvas.style.height = height + 'px';\n\n    var pixelRatio = this.pixelRatio,\n        _context = this.getContext()._context;\n\n    _context.scale(pixelRatio, pixelRatio);\n  }\n\n  getWidth() {\n    return this.width;\n  }\n\n  getHeight() {\n    return this.height;\n  }\n\n  setSize(width, height) {\n    this.setWidth(width || 0);\n    this.setHeight(height || 0);\n  }\n\n  toDataURL(mimeType, quality) {\n    try {\n      return this._canvas.toDataURL(mimeType, quality);\n    } catch (e) {\n      try {\n        return this._canvas.toDataURL();\n      } catch (err) {\n        Util.error('Unable to get data URL. ' + err.message + ' For more info read https://konvajs.org/docs/posts/Tainted_Canvas.html.');\n        return '';\n      }\n    }\n  }\n\n}\nFactory.addGetterSetter(Canvas, 'pixelRatio', undefined, getNumberValidator());\nexport class SceneCanvas extends Canvas {\n  constructor() {\n    let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      width: 0,\n      height: 0\n    };\n    super(config);\n    this.context = new SceneContext(this);\n    this.setSize(config.width, config.height);\n  }\n\n}\nexport class HitCanvas extends Canvas {\n  constructor() {\n    let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      width: 0,\n      height: 0\n    };\n    super(config);\n    this.hitCanvas = true;\n    this.context = new HitContext(this);\n    this.setSize(config.width, config.height);\n  }\n\n}","map":{"version":3,"names":["Util","SceneContext","HitContext","Konva","Factory","getNumberValidator","_pixelRatio","getDevicePixelRatio","canvas","createCanvasElement","context","getContext","devicePixelRatio","_global","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","Canvas","constructor","config","pixelRatio","width","height","isCache","conf","_canvas","style","padding","margin","border","background","position","top","left","getPixelRatio","setPixelRatio","previousRatio","setSize","getWidth","getHeight","setWidth","_context","scale","setHeight","toDataURL","mimeType","quality","e","err","error","message","addGetterSetter","undefined","SceneCanvas","HitCanvas","hitCanvas"],"sources":["C:/traffic_sim/traffic-sim/sim_ui/node_modules/konva/lib/Canvas.js"],"sourcesContent":["import { Util } from './Util.js';\nimport { SceneContext, HitContext } from './Context.js';\nimport { Konva } from './Global.js';\nimport { Factory } from './Factory.js';\nimport { getNumberValidator } from './Validators.js';\nvar _pixelRatio;\nfunction getDevicePixelRatio() {\n    if (_pixelRatio) {\n        return _pixelRatio;\n    }\n    var canvas = Util.createCanvasElement();\n    var context = canvas.getContext('2d');\n    _pixelRatio = (function () {\n        var devicePixelRatio = Konva._global.devicePixelRatio || 1, backingStoreRatio = context.webkitBackingStorePixelRatio ||\n            context.mozBackingStorePixelRatio ||\n            context.msBackingStorePixelRatio ||\n            context.oBackingStorePixelRatio ||\n            context.backingStorePixelRatio ||\n            1;\n        return devicePixelRatio / backingStoreRatio;\n    })();\n    return _pixelRatio;\n}\nexport class Canvas {\n    constructor(config) {\n        this.pixelRatio = 1;\n        this.width = 0;\n        this.height = 0;\n        this.isCache = false;\n        var conf = config || {};\n        var pixelRatio = conf.pixelRatio || Konva.pixelRatio || getDevicePixelRatio();\n        this.pixelRatio = pixelRatio;\n        this._canvas = Util.createCanvasElement();\n        this._canvas.style.padding = '0';\n        this._canvas.style.margin = '0';\n        this._canvas.style.border = '0';\n        this._canvas.style.background = 'transparent';\n        this._canvas.style.position = 'absolute';\n        this._canvas.style.top = '0';\n        this._canvas.style.left = '0';\n    }\n    getContext() {\n        return this.context;\n    }\n    getPixelRatio() {\n        return this.pixelRatio;\n    }\n    setPixelRatio(pixelRatio) {\n        var previousRatio = this.pixelRatio;\n        this.pixelRatio = pixelRatio;\n        this.setSize(this.getWidth() / previousRatio, this.getHeight() / previousRatio);\n    }\n    setWidth(width) {\n        this.width = this._canvas.width = width * this.pixelRatio;\n        this._canvas.style.width = width + 'px';\n        var pixelRatio = this.pixelRatio, _context = this.getContext()._context;\n        _context.scale(pixelRatio, pixelRatio);\n    }\n    setHeight(height) {\n        this.height = this._canvas.height = height * this.pixelRatio;\n        this._canvas.style.height = height + 'px';\n        var pixelRatio = this.pixelRatio, _context = this.getContext()._context;\n        _context.scale(pixelRatio, pixelRatio);\n    }\n    getWidth() {\n        return this.width;\n    }\n    getHeight() {\n        return this.height;\n    }\n    setSize(width, height) {\n        this.setWidth(width || 0);\n        this.setHeight(height || 0);\n    }\n    toDataURL(mimeType, quality) {\n        try {\n            return this._canvas.toDataURL(mimeType, quality);\n        }\n        catch (e) {\n            try {\n                return this._canvas.toDataURL();\n            }\n            catch (err) {\n                Util.error('Unable to get data URL. ' +\n                    err.message +\n                    ' For more info read https://konvajs.org/docs/posts/Tainted_Canvas.html.');\n                return '';\n            }\n        }\n    }\n}\nFactory.addGetterSetter(Canvas, 'pixelRatio', undefined, getNumberValidator());\nexport class SceneCanvas extends Canvas {\n    constructor(config = { width: 0, height: 0 }) {\n        super(config);\n        this.context = new SceneContext(this);\n        this.setSize(config.width, config.height);\n    }\n}\nexport class HitCanvas extends Canvas {\n    constructor(config = { width: 0, height: 0 }) {\n        super(config);\n        this.hitCanvas = true;\n        this.context = new HitContext(this);\n        this.setSize(config.width, config.height);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}