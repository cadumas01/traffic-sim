{"ast":null,"code":"import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Circle extends Shape {\n  _sceneFunc(context) {\n    context.beginPath();\n    context.arc(0, 0, this.attrs.radius || 0, 0, Math.PI * 2, false);\n    context.closePath();\n    context.fillStrokeShape(this);\n  }\n\n  getWidth() {\n    return this.radius() * 2;\n  }\n\n  getHeight() {\n    return this.radius() * 2;\n  }\n\n  setWidth(width) {\n    if (this.radius() !== width / 2) {\n      this.radius(width / 2);\n    }\n  }\n\n  setHeight(height) {\n    if (this.radius() !== height / 2) {\n      this.radius(height / 2);\n    }\n  }\n\n}\nCircle.prototype._centroid = true;\nCircle.prototype.className = 'Circle';\nCircle.prototype._attrsAffectingSize = ['radius'];\n\n_registerNode(Circle);\n\nFactory.addGetterSetter(Circle, 'radius', 0, getNumberValidator());","map":{"version":3,"names":["Factory","Shape","getNumberValidator","_registerNode","Circle","_sceneFunc","context","beginPath","arc","attrs","radius","Math","PI","closePath","fillStrokeShape","getWidth","getHeight","setWidth","width","setHeight","height","prototype","_centroid","className","_attrsAffectingSize","addGetterSetter"],"sources":["C:/traffic_sim/traffic-sim/sim_ui/node_modules/konva/lib/shapes/Circle.js"],"sourcesContent":["import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Circle extends Shape {\n    _sceneFunc(context) {\n        context.beginPath();\n        context.arc(0, 0, this.attrs.radius || 0, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.radius() * 2;\n    }\n    getHeight() {\n        return this.radius() * 2;\n    }\n    setWidth(width) {\n        if (this.radius() !== width / 2) {\n            this.radius(width / 2);\n        }\n    }\n    setHeight(height) {\n        if (this.radius() !== height / 2) {\n            this.radius(height / 2);\n        }\n    }\n}\nCircle.prototype._centroid = true;\nCircle.prototype.className = 'Circle';\nCircle.prototype._attrsAffectingSize = ['radius'];\n_registerNode(Circle);\nFactory.addGetterSetter(Circle, 'radius', 0, getNumberValidator());\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,eAAxB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,OAAO,MAAMC,MAAN,SAAqBH,KAArB,CAA2B;EAC9BI,UAAU,CAACC,OAAD,EAAU;IAChBA,OAAO,CAACC,SAAR;IACAD,OAAO,CAACE,GAAR,CAAY,CAAZ,EAAe,CAAf,EAAkB,KAAKC,KAAL,CAAWC,MAAX,IAAqB,CAAvC,EAA0C,CAA1C,EAA6CC,IAAI,CAACC,EAAL,GAAU,CAAvD,EAA0D,KAA1D;IACAN,OAAO,CAACO,SAAR;IACAP,OAAO,CAACQ,eAAR,CAAwB,IAAxB;EACH;;EACDC,QAAQ,GAAG;IACP,OAAO,KAAKL,MAAL,KAAgB,CAAvB;EACH;;EACDM,SAAS,GAAG;IACR,OAAO,KAAKN,MAAL,KAAgB,CAAvB;EACH;;EACDO,QAAQ,CAACC,KAAD,EAAQ;IACZ,IAAI,KAAKR,MAAL,OAAkBQ,KAAK,GAAG,CAA9B,EAAiC;MAC7B,KAAKR,MAAL,CAAYQ,KAAK,GAAG,CAApB;IACH;EACJ;;EACDC,SAAS,CAACC,MAAD,EAAS;IACd,IAAI,KAAKV,MAAL,OAAkBU,MAAM,GAAG,CAA/B,EAAkC;MAC9B,KAAKV,MAAL,CAAYU,MAAM,GAAG,CAArB;IACH;EACJ;;AAtB6B;AAwBlChB,MAAM,CAACiB,SAAP,CAAiBC,SAAjB,GAA6B,IAA7B;AACAlB,MAAM,CAACiB,SAAP,CAAiBE,SAAjB,GAA6B,QAA7B;AACAnB,MAAM,CAACiB,SAAP,CAAiBG,mBAAjB,GAAuC,CAAC,QAAD,CAAvC;;AACArB,aAAa,CAACC,MAAD,CAAb;;AACAJ,OAAO,CAACyB,eAAR,CAAwBrB,MAAxB,EAAgC,QAAhC,EAA0C,CAA1C,EAA6CF,kBAAkB,EAA/D"},"metadata":{},"sourceType":"module"}