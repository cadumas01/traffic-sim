{"ast":null,"code":"import { Factory } from './Factory.js';\nimport { Node } from './Node.js';\nimport { getNumberValidator } from './Validators.js';\nexport class Container extends Node {\n  constructor() {\n    super(...arguments);\n    this.children = [];\n  }\n\n  getChildren(filterFunc) {\n    if (!filterFunc) {\n      return this.children || [];\n    }\n\n    const children = this.children || [];\n    var results = [];\n    children.forEach(function (child) {\n      if (filterFunc(child)) {\n        results.push(child);\n      }\n    });\n    return results;\n  }\n\n  hasChildren() {\n    return this.getChildren().length > 0;\n  }\n\n  removeChildren() {\n    this.getChildren().forEach(child => {\n      child.parent = null;\n      child.index = 0;\n      child.remove();\n    });\n    this.children = [];\n\n    this._requestDraw();\n\n    return this;\n  }\n\n  destroyChildren() {\n    this.getChildren().forEach(child => {\n      child.parent = null;\n      child.index = 0;\n      child.destroy();\n    });\n    this.children = [];\n\n    this._requestDraw();\n\n    return this;\n  }\n\n  add() {\n    for (var _len = arguments.length, children = new Array(_len), _key = 0; _key < _len; _key++) {\n      children[_key] = arguments[_key];\n    }\n\n    if (arguments.length > 1) {\n      for (var i = 0; i < arguments.length; i++) {\n        this.add(arguments[i]);\n      }\n\n      return this;\n    }\n\n    var child = children[0];\n\n    if (child.getParent()) {\n      child.moveTo(this);\n      return this;\n    }\n\n    this._validateAdd(child);\n\n    child.index = this.getChildren().length;\n    child.parent = this;\n\n    child._clearCaches();\n\n    this.getChildren().push(child);\n\n    this._fire('add', {\n      child: child\n    });\n\n    this._requestDraw();\n\n    return this;\n  }\n\n  destroy() {\n    if (this.hasChildren()) {\n      this.destroyChildren();\n    }\n\n    super.destroy();\n    return this;\n  }\n\n  find(selector) {\n    return this._generalFind(selector, false);\n  }\n\n  findOne(selector) {\n    var result = this._generalFind(selector, true);\n\n    return result.length > 0 ? result[0] : undefined;\n  }\n\n  _generalFind(selector, findOne) {\n    var retArr = [];\n\n    this._descendants(node => {\n      const valid = node._isMatch(selector);\n\n      if (valid) {\n        retArr.push(node);\n      }\n\n      if (valid && findOne) {\n        return true;\n      }\n\n      return false;\n    });\n\n    return retArr;\n  }\n\n  _descendants(fn) {\n    let shouldStop = false;\n    const children = this.getChildren();\n\n    for (const child of children) {\n      shouldStop = fn(child);\n\n      if (shouldStop) {\n        return true;\n      }\n\n      if (!child.hasChildren()) {\n        continue;\n      }\n\n      shouldStop = child._descendants(fn);\n\n      if (shouldStop) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  toObject() {\n    var obj = Node.prototype.toObject.call(this);\n    obj.children = [];\n    this.getChildren().forEach(child => {\n      obj.children.push(child.toObject());\n    });\n    return obj;\n  }\n\n  isAncestorOf(node) {\n    var parent = node.getParent();\n\n    while (parent) {\n      if (parent._id === this._id) {\n        return true;\n      }\n\n      parent = parent.getParent();\n    }\n\n    return false;\n  }\n\n  clone(obj) {\n    var node = Node.prototype.clone.call(this, obj);\n    this.getChildren().forEach(function (no) {\n      node.add(no.clone());\n    });\n    return node;\n  }\n\n  getAllIntersections(pos) {\n    var arr = [];\n    this.find('Shape').forEach(function (shape) {\n      if (shape.isVisible() && shape.intersects(pos)) {\n        arr.push(shape);\n      }\n    });\n    return arr;\n  }\n\n  _clearSelfAndDescendantCache(attr) {\n    var _a;\n\n    super._clearSelfAndDescendantCache(attr);\n\n    if (this.isCached()) {\n      return;\n    }\n\n    (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (node) {\n      node._clearSelfAndDescendantCache(attr);\n    });\n  }\n\n  _setChildrenIndices() {\n    var _a;\n\n    (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child, n) {\n      child.index = n;\n    });\n\n    this._requestDraw();\n  }\n\n  drawScene(can, top) {\n    var layer = this.getLayer(),\n        canvas = can || layer && layer.getCanvas(),\n        context = canvas && canvas.getContext(),\n        cachedCanvas = this._getCanvasCache(),\n        cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\n\n    var caching = canvas && canvas.isCache;\n\n    if (!this.isVisible() && !caching) {\n      return this;\n    }\n\n    if (cachedSceneCanvas) {\n      context.save();\n      var m = this.getAbsoluteTransform(top).getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n      this._drawCachedSceneCanvas(context);\n\n      context.restore();\n    } else {\n      this._drawChildren('drawScene', canvas, top);\n    }\n\n    return this;\n  }\n\n  drawHit(can, top) {\n    if (!this.shouldDrawHit(top)) {\n      return this;\n    }\n\n    var layer = this.getLayer(),\n        canvas = can || layer && layer.hitCanvas,\n        context = canvas && canvas.getContext(),\n        cachedCanvas = this._getCanvasCache(),\n        cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n\n    if (cachedHitCanvas) {\n      context.save();\n      var m = this.getAbsoluteTransform(top).getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n      this._drawCachedHitCanvas(context);\n\n      context.restore();\n    } else {\n      this._drawChildren('drawHit', canvas, top);\n    }\n\n    return this;\n  }\n\n  _drawChildren(drawMethod, canvas, top) {\n    var _a;\n\n    var context = canvas && canvas.getContext(),\n        clipWidth = this.clipWidth(),\n        clipHeight = this.clipHeight(),\n        clipFunc = this.clipFunc(),\n        hasClip = clipWidth && clipHeight || clipFunc;\n    const selfCache = top === this;\n\n    if (hasClip) {\n      context.save();\n      var transform = this.getAbsoluteTransform(top);\n      var m = transform.getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      context.beginPath();\n\n      if (clipFunc) {\n        clipFunc.call(this, context, this);\n      } else {\n        var clipX = this.clipX();\n        var clipY = this.clipY();\n        context.rect(clipX, clipY, clipWidth, clipHeight);\n      }\n\n      context.clip();\n      m = transform.copy().invert().getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    }\n\n    var hasComposition = !selfCache && this.globalCompositeOperation() !== 'source-over' && drawMethod === 'drawScene';\n\n    if (hasComposition) {\n      context.save();\n\n      context._applyGlobalCompositeOperation(this);\n    }\n\n    (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n      child[drawMethod](canvas, top);\n    });\n\n    if (hasComposition) {\n      context.restore();\n    }\n\n    if (hasClip) {\n      context.restore();\n    }\n  }\n\n  getClientRect(config) {\n    var _a;\n\n    config = config || {};\n    var skipTransform = config.skipTransform;\n    var relativeTo = config.relativeTo;\n    var minX, minY, maxX, maxY;\n    var selfRect = {\n      x: Infinity,\n      y: Infinity,\n      width: 0,\n      height: 0\n    };\n    var that = this;\n    (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n      if (!child.visible()) {\n        return;\n      }\n\n      var rect = child.getClientRect({\n        relativeTo: that,\n        skipShadow: config.skipShadow,\n        skipStroke: config.skipStroke\n      });\n\n      if (rect.width === 0 && rect.height === 0) {\n        return;\n      }\n\n      if (minX === undefined) {\n        minX = rect.x;\n        minY = rect.y;\n        maxX = rect.x + rect.width;\n        maxY = rect.y + rect.height;\n      } else {\n        minX = Math.min(minX, rect.x);\n        minY = Math.min(minY, rect.y);\n        maxX = Math.max(maxX, rect.x + rect.width);\n        maxY = Math.max(maxY, rect.y + rect.height);\n      }\n    });\n    var shapes = this.find('Shape');\n    var hasVisible = false;\n\n    for (var i = 0; i < shapes.length; i++) {\n      var shape = shapes[i];\n\n      if (shape._isVisible(this)) {\n        hasVisible = true;\n        break;\n      }\n    }\n\n    if (hasVisible && minX !== undefined) {\n      selfRect = {\n        x: minX,\n        y: minY,\n        width: maxX - minX,\n        height: maxY - minY\n      };\n    } else {\n      selfRect = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n    }\n\n    if (!skipTransform) {\n      return this._transformedRect(selfRect, relativeTo);\n    }\n\n    return selfRect;\n  }\n\n}\nFactory.addComponentsGetterSetter(Container, 'clip', ['x', 'y', 'width', 'height']);\nFactory.addGetterSetter(Container, 'clipX', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipY', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipWidth', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipHeight', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipFunc');","map":{"version":3,"names":["Factory","Node","getNumberValidator","Container","constructor","arguments","children","getChildren","filterFunc","results","forEach","child","push","hasChildren","length","removeChildren","parent","index","remove","_requestDraw","destroyChildren","destroy","add","i","getParent","moveTo","_validateAdd","_clearCaches","_fire","find","selector","_generalFind","findOne","result","undefined","retArr","_descendants","node","valid","_isMatch","fn","shouldStop","toObject","obj","prototype","call","isAncestorOf","_id","clone","no","getAllIntersections","pos","arr","shape","isVisible","intersects","_clearSelfAndDescendantCache","attr","_a","isCached","_setChildrenIndices","n","drawScene","can","top","layer","getLayer","canvas","getCanvas","context","getContext","cachedCanvas","_getCanvasCache","cachedSceneCanvas","scene","caching","isCache","save","m","getAbsoluteTransform","getMatrix","transform","_drawCachedSceneCanvas","restore","_drawChildren","drawHit","shouldDrawHit","hitCanvas","cachedHitCanvas","hit","_drawCachedHitCanvas","drawMethod","clipWidth","clipHeight","clipFunc","hasClip","selfCache","beginPath","clipX","clipY","rect","clip","copy","invert","hasComposition","globalCompositeOperation","_applyGlobalCompositeOperation","getClientRect","config","skipTransform","relativeTo","minX","minY","maxX","maxY","selfRect","x","Infinity","y","width","height","that","visible","skipShadow","skipStroke","Math","min","max","shapes","hasVisible","_isVisible","_transformedRect","addComponentsGetterSetter","addGetterSetter"],"sources":["C:/traffic_sim/traffic-sim/sim_ui/node_modules/konva/lib/Container.js"],"sourcesContent":["import { Factory } from './Factory.js';\nimport { Node } from './Node.js';\nimport { getNumberValidator } from './Validators.js';\nexport class Container extends Node {\n    constructor() {\n        super(...arguments);\n        this.children = [];\n    }\n    getChildren(filterFunc) {\n        if (!filterFunc) {\n            return this.children || [];\n        }\n        const children = this.children || [];\n        var results = [];\n        children.forEach(function (child) {\n            if (filterFunc(child)) {\n                results.push(child);\n            }\n        });\n        return results;\n    }\n    hasChildren() {\n        return this.getChildren().length > 0;\n    }\n    removeChildren() {\n        this.getChildren().forEach((child) => {\n            child.parent = null;\n            child.index = 0;\n            child.remove();\n        });\n        this.children = [];\n        this._requestDraw();\n        return this;\n    }\n    destroyChildren() {\n        this.getChildren().forEach((child) => {\n            child.parent = null;\n            child.index = 0;\n            child.destroy();\n        });\n        this.children = [];\n        this._requestDraw();\n        return this;\n    }\n    add(...children) {\n        if (arguments.length > 1) {\n            for (var i = 0; i < arguments.length; i++) {\n                this.add(arguments[i]);\n            }\n            return this;\n        }\n        var child = children[0];\n        if (child.getParent()) {\n            child.moveTo(this);\n            return this;\n        }\n        this._validateAdd(child);\n        child.index = this.getChildren().length;\n        child.parent = this;\n        child._clearCaches();\n        this.getChildren().push(child);\n        this._fire('add', {\n            child: child,\n        });\n        this._requestDraw();\n        return this;\n    }\n    destroy() {\n        if (this.hasChildren()) {\n            this.destroyChildren();\n        }\n        super.destroy();\n        return this;\n    }\n    find(selector) {\n        return this._generalFind(selector, false);\n    }\n    findOne(selector) {\n        var result = this._generalFind(selector, true);\n        return result.length > 0 ? result[0] : undefined;\n    }\n    _generalFind(selector, findOne) {\n        var retArr = [];\n        this._descendants((node) => {\n            const valid = node._isMatch(selector);\n            if (valid) {\n                retArr.push(node);\n            }\n            if (valid && findOne) {\n                return true;\n            }\n            return false;\n        });\n        return retArr;\n    }\n    _descendants(fn) {\n        let shouldStop = false;\n        const children = this.getChildren();\n        for (const child of children) {\n            shouldStop = fn(child);\n            if (shouldStop) {\n                return true;\n            }\n            if (!child.hasChildren()) {\n                continue;\n            }\n            shouldStop = child._descendants(fn);\n            if (shouldStop) {\n                return true;\n            }\n        }\n        return false;\n    }\n    toObject() {\n        var obj = Node.prototype.toObject.call(this);\n        obj.children = [];\n        this.getChildren().forEach((child) => {\n            obj.children.push(child.toObject());\n        });\n        return obj;\n    }\n    isAncestorOf(node) {\n        var parent = node.getParent();\n        while (parent) {\n            if (parent._id === this._id) {\n                return true;\n            }\n            parent = parent.getParent();\n        }\n        return false;\n    }\n    clone(obj) {\n        var node = Node.prototype.clone.call(this, obj);\n        this.getChildren().forEach(function (no) {\n            node.add(no.clone());\n        });\n        return node;\n    }\n    getAllIntersections(pos) {\n        var arr = [];\n        this.find('Shape').forEach(function (shape) {\n            if (shape.isVisible() && shape.intersects(pos)) {\n                arr.push(shape);\n            }\n        });\n        return arr;\n    }\n    _clearSelfAndDescendantCache(attr) {\n        var _a;\n        super._clearSelfAndDescendantCache(attr);\n        if (this.isCached()) {\n            return;\n        }\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (node) {\n            node._clearSelfAndDescendantCache(attr);\n        });\n    }\n    _setChildrenIndices() {\n        var _a;\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child, n) {\n            child.index = n;\n        });\n        this._requestDraw();\n    }\n    drawScene(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas()), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\n        var caching = canvas && canvas.isCache;\n        if (!this.isVisible() && !caching) {\n            return this;\n        }\n        if (cachedSceneCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedSceneCanvas(context);\n            context.restore();\n        }\n        else {\n            this._drawChildren('drawScene', canvas, top);\n        }\n        return this;\n    }\n    drawHit(can, top) {\n        if (!this.shouldDrawHit(top)) {\n            return this;\n        }\n        var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n        if (cachedHitCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedHitCanvas(context);\n            context.restore();\n        }\n        else {\n            this._drawChildren('drawHit', canvas, top);\n        }\n        return this;\n    }\n    _drawChildren(drawMethod, canvas, top) {\n        var _a;\n        var context = canvas && canvas.getContext(), clipWidth = this.clipWidth(), clipHeight = this.clipHeight(), clipFunc = this.clipFunc(), hasClip = (clipWidth && clipHeight) || clipFunc;\n        const selfCache = top === this;\n        if (hasClip) {\n            context.save();\n            var transform = this.getAbsoluteTransform(top);\n            var m = transform.getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            context.beginPath();\n            if (clipFunc) {\n                clipFunc.call(this, context, this);\n            }\n            else {\n                var clipX = this.clipX();\n                var clipY = this.clipY();\n                context.rect(clipX, clipY, clipWidth, clipHeight);\n            }\n            context.clip();\n            m = transform.copy().invert().getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        }\n        var hasComposition = !selfCache &&\n            this.globalCompositeOperation() !== 'source-over' &&\n            drawMethod === 'drawScene';\n        if (hasComposition) {\n            context.save();\n            context._applyGlobalCompositeOperation(this);\n        }\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n            child[drawMethod](canvas, top);\n        });\n        if (hasComposition) {\n            context.restore();\n        }\n        if (hasClip) {\n            context.restore();\n        }\n    }\n    getClientRect(config) {\n        var _a;\n        config = config || {};\n        var skipTransform = config.skipTransform;\n        var relativeTo = config.relativeTo;\n        var minX, minY, maxX, maxY;\n        var selfRect = {\n            x: Infinity,\n            y: Infinity,\n            width: 0,\n            height: 0,\n        };\n        var that = this;\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n            if (!child.visible()) {\n                return;\n            }\n            var rect = child.getClientRect({\n                relativeTo: that,\n                skipShadow: config.skipShadow,\n                skipStroke: config.skipStroke,\n            });\n            if (rect.width === 0 && rect.height === 0) {\n                return;\n            }\n            if (minX === undefined) {\n                minX = rect.x;\n                minY = rect.y;\n                maxX = rect.x + rect.width;\n                maxY = rect.y + rect.height;\n            }\n            else {\n                minX = Math.min(minX, rect.x);\n                minY = Math.min(minY, rect.y);\n                maxX = Math.max(maxX, rect.x + rect.width);\n                maxY = Math.max(maxY, rect.y + rect.height);\n            }\n        });\n        var shapes = this.find('Shape');\n        var hasVisible = false;\n        for (var i = 0; i < shapes.length; i++) {\n            var shape = shapes[i];\n            if (shape._isVisible(this)) {\n                hasVisible = true;\n                break;\n            }\n        }\n        if (hasVisible && minX !== undefined) {\n            selfRect = {\n                x: minX,\n                y: minY,\n                width: maxX - minX,\n                height: maxY - minY,\n            };\n        }\n        else {\n            selfRect = {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n            };\n        }\n        if (!skipTransform) {\n            return this._transformedRect(selfRect, relativeTo);\n        }\n        return selfRect;\n    }\n}\nFactory.addComponentsGetterSetter(Container, 'clip', [\n    'x',\n    'y',\n    'width',\n    'height',\n]);\nFactory.addGetterSetter(Container, 'clipX', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipY', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipWidth', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipHeight', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipFunc');\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}