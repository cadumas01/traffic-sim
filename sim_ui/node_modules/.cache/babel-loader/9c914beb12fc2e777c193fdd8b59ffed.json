{"ast":null,"code":"import { Konva } from './Global.js';\nimport { Util } from './Util.js';\n\nfunction _formatValue(val) {\n  if (Util._isString(val)) {\n    return '\"' + val + '\"';\n  }\n\n  if (Object.prototype.toString.call(val) === '[object Number]') {\n    return val;\n  }\n\n  if (Util._isBoolean(val)) {\n    return val;\n  }\n\n  return Object.prototype.toString.call(val);\n}\n\nexport function RGBComponent(val) {\n  if (val > 255) {\n    return 255;\n  } else if (val < 0) {\n    return 0;\n  }\n\n  return Math.round(val);\n}\nexport function alphaComponent(val) {\n  if (val > 1) {\n    return 1;\n  } else if (val < 0.0001) {\n    return 0.0001;\n  }\n\n  return val;\n}\nexport function getNumberValidator() {\n  if (Konva.isUnminified) {\n    return function (val, attr) {\n      if (!Util._isNumber(val)) {\n        Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a number.');\n      }\n\n      return val;\n    };\n  }\n}\nexport function getNumberOrArrayOfNumbersValidator(noOfElements) {\n  if (Konva.isUnminified) {\n    return function (val, attr) {\n      let isNumber = Util._isNumber(val);\n\n      let isValidArray = Util._isArray(val) && val.length == noOfElements;\n\n      if (!isNumber && !isValidArray) {\n        Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a number or Array<number>(' + noOfElements + ')');\n      }\n\n      return val;\n    };\n  }\n}\nexport function getNumberOrAutoValidator() {\n  if (Konva.isUnminified) {\n    return function (val, attr) {\n      var isNumber = Util._isNumber(val);\n\n      var isAuto = val === 'auto';\n\n      if (!(isNumber || isAuto)) {\n        Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a number or \"auto\".');\n      }\n\n      return val;\n    };\n  }\n}\nexport function getStringValidator() {\n  if (Konva.isUnminified) {\n    return function (val, attr) {\n      if (!Util._isString(val)) {\n        Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a string.');\n      }\n\n      return val;\n    };\n  }\n}\nexport function getStringOrGradientValidator() {\n  if (Konva.isUnminified) {\n    return function (val, attr) {\n      const isString = Util._isString(val);\n\n      const isGradient = Object.prototype.toString.call(val) === '[object CanvasGradient]' || val && val.addColorStop;\n\n      if (!(isString || isGradient)) {\n        Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a string or a native gradient.');\n      }\n\n      return val;\n    };\n  }\n}\nexport function getFunctionValidator() {\n  if (Konva.isUnminified) {\n    return function (val, attr) {\n      if (!Util._isFunction(val)) {\n        Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a function.');\n      }\n\n      return val;\n    };\n  }\n}\nexport function getNumberArrayValidator() {\n  if (Konva.isUnminified) {\n    return function (val, attr) {\n      const TypedArray = Int8Array ? Object.getPrototypeOf(Int8Array) : null;\n\n      if (TypedArray && val instanceof TypedArray) {\n        return val;\n      }\n\n      if (!Util._isArray(val)) {\n        Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a array of numbers.');\n      } else {\n        val.forEach(function (item) {\n          if (!Util._isNumber(item)) {\n            Util.warn('\"' + attr + '\" attribute has non numeric element ' + item + '. Make sure that all elements are numbers.');\n          }\n        });\n      }\n\n      return val;\n    };\n  }\n}\nexport function getBooleanValidator() {\n  if (Konva.isUnminified) {\n    return function (val, attr) {\n      var isBool = val === true || val === false;\n\n      if (!isBool) {\n        Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a boolean.');\n      }\n\n      return val;\n    };\n  }\n}\nexport function getComponentValidator(components) {\n  if (Konva.isUnminified) {\n    return function (val, attr) {\n      if (val === undefined || val === null) {\n        return val;\n      }\n\n      if (!Util.isObject(val)) {\n        Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be an object with properties ' + components);\n      }\n\n      return val;\n    };\n  }\n}","map":{"version":3,"names":["Konva","Util","_formatValue","val","_isString","Object","prototype","toString","call","_isBoolean","RGBComponent","Math","round","alphaComponent","getNumberValidator","isUnminified","attr","_isNumber","warn","getNumberOrArrayOfNumbersValidator","noOfElements","isNumber","isValidArray","_isArray","length","getNumberOrAutoValidator","isAuto","getStringValidator","getStringOrGradientValidator","isString","isGradient","addColorStop","getFunctionValidator","_isFunction","getNumberArrayValidator","TypedArray","Int8Array","getPrototypeOf","forEach","item","getBooleanValidator","isBool","getComponentValidator","components","undefined","isObject"],"sources":["C:/traffic_sim/traffic-sim/sim_ui/node_modules/konva/lib/Validators.js"],"sourcesContent":["import { Konva } from './Global.js';\nimport { Util } from './Util.js';\nfunction _formatValue(val) {\n    if (Util._isString(val)) {\n        return '\"' + val + '\"';\n    }\n    if (Object.prototype.toString.call(val) === '[object Number]') {\n        return val;\n    }\n    if (Util._isBoolean(val)) {\n        return val;\n    }\n    return Object.prototype.toString.call(val);\n}\nexport function RGBComponent(val) {\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    return Math.round(val);\n}\nexport function alphaComponent(val) {\n    if (val > 1) {\n        return 1;\n    }\n    else if (val < 0.0001) {\n        return 0.0001;\n    }\n    return val;\n}\nexport function getNumberValidator() {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util._isNumber(val)) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a number.');\n            }\n            return val;\n        };\n    }\n}\nexport function getNumberOrArrayOfNumbersValidator(noOfElements) {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            let isNumber = Util._isNumber(val);\n            let isValidArray = Util._isArray(val) && val.length == noOfElements;\n            if (!isNumber && !isValidArray) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a number or Array<number>(' +\n                    noOfElements +\n                    ')');\n            }\n            return val;\n        };\n    }\n}\nexport function getNumberOrAutoValidator() {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            var isNumber = Util._isNumber(val);\n            var isAuto = val === 'auto';\n            if (!(isNumber || isAuto)) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a number or \"auto\".');\n            }\n            return val;\n        };\n    }\n}\nexport function getStringValidator() {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util._isString(val)) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a string.');\n            }\n            return val;\n        };\n    }\n}\nexport function getStringOrGradientValidator() {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            const isString = Util._isString(val);\n            const isGradient = Object.prototype.toString.call(val) === '[object CanvasGradient]' ||\n                (val && val.addColorStop);\n            if (!(isString || isGradient)) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a string or a native gradient.');\n            }\n            return val;\n        };\n    }\n}\nexport function getFunctionValidator() {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util._isFunction(val)) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a function.');\n            }\n            return val;\n        };\n    }\n}\nexport function getNumberArrayValidator() {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            const TypedArray = Int8Array ? Object.getPrototypeOf(Int8Array) : null;\n            if (TypedArray && val instanceof TypedArray) {\n                return val;\n            }\n            if (!Util._isArray(val)) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a array of numbers.');\n            }\n            else {\n                val.forEach(function (item) {\n                    if (!Util._isNumber(item)) {\n                        Util.warn('\"' +\n                            attr +\n                            '\" attribute has non numeric element ' +\n                            item +\n                            '. Make sure that all elements are numbers.');\n                    }\n                });\n            }\n            return val;\n        };\n    }\n}\nexport function getBooleanValidator() {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            var isBool = val === true || val === false;\n            if (!isBool) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a boolean.');\n            }\n            return val;\n        };\n    }\n}\nexport function getComponentValidator(components) {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            if (val === undefined || val === null) {\n                return val;\n            }\n            if (!Util.isObject(val)) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be an object with properties ' +\n                    components);\n            }\n            return val;\n        };\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}