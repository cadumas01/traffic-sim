{"ast":null,"code":"import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator, getNumberArrayValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\n\nfunction getControlPoints(x0, y0, x1, y1, x2, y2, t) {\n  var d01 = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2)),\n      d12 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)),\n      fa = t * d01 / (d01 + d12),\n      fb = t * d12 / (d01 + d12),\n      p1x = x1 - fa * (x2 - x0),\n      p1y = y1 - fa * (y2 - y0),\n      p2x = x1 + fb * (x2 - x0),\n      p2y = y1 + fb * (y2 - y0);\n  return [p1x, p1y, p2x, p2y];\n}\n\nfunction expandPoints(p, tension) {\n  var len = p.length,\n      allPoints = [],\n      n,\n      cp;\n\n  for (n = 2; n < len - 2; n += 2) {\n    cp = getControlPoints(p[n - 2], p[n - 1], p[n], p[n + 1], p[n + 2], p[n + 3], tension);\n\n    if (isNaN(cp[0])) {\n      continue;\n    }\n\n    allPoints.push(cp[0]);\n    allPoints.push(cp[1]);\n    allPoints.push(p[n]);\n    allPoints.push(p[n + 1]);\n    allPoints.push(cp[2]);\n    allPoints.push(cp[3]);\n  }\n\n  return allPoints;\n}\n\nexport class Line extends Shape {\n  constructor(config) {\n    super(config);\n    this.on('pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva', function () {\n      this._clearCache('tensionPoints');\n    });\n  }\n\n  _sceneFunc(context) {\n    var points = this.points(),\n        length = points.length,\n        tension = this.tension(),\n        closed = this.closed(),\n        bezier = this.bezier(),\n        tp,\n        len,\n        n;\n\n    if (!length) {\n      return;\n    }\n\n    context.beginPath();\n    context.moveTo(points[0], points[1]);\n\n    if (tension !== 0 && length > 4) {\n      tp = this.getTensionPoints();\n      len = tp.length;\n      n = closed ? 0 : 4;\n\n      if (!closed) {\n        context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);\n      }\n\n      while (n < len - 2) {\n        context.bezierCurveTo(tp[n++], tp[n++], tp[n++], tp[n++], tp[n++], tp[n++]);\n      }\n\n      if (!closed) {\n        context.quadraticCurveTo(tp[len - 2], tp[len - 1], points[length - 2], points[length - 1]);\n      }\n    } else if (bezier) {\n      n = 2;\n\n      while (n < length) {\n        context.bezierCurveTo(points[n++], points[n++], points[n++], points[n++], points[n++], points[n++]);\n      }\n    } else {\n      for (n = 2; n < length; n += 2) {\n        context.lineTo(points[n], points[n + 1]);\n      }\n    }\n\n    if (closed) {\n      context.closePath();\n      context.fillStrokeShape(this);\n    } else {\n      context.strokeShape(this);\n    }\n  }\n\n  getTensionPoints() {\n    return this._getCache('tensionPoints', this._getTensionPoints);\n  }\n\n  _getTensionPoints() {\n    if (this.closed()) {\n      return this._getTensionPointsClosed();\n    } else {\n      return expandPoints(this.points(), this.tension());\n    }\n  }\n\n  _getTensionPointsClosed() {\n    var p = this.points(),\n        len = p.length,\n        tension = this.tension(),\n        firstControlPoints = getControlPoints(p[len - 2], p[len - 1], p[0], p[1], p[2], p[3], tension),\n        lastControlPoints = getControlPoints(p[len - 4], p[len - 3], p[len - 2], p[len - 1], p[0], p[1], tension),\n        middle = expandPoints(p, tension),\n        tp = [firstControlPoints[2], firstControlPoints[3]].concat(middle).concat([lastControlPoints[0], lastControlPoints[1], p[len - 2], p[len - 1], lastControlPoints[2], lastControlPoints[3], firstControlPoints[0], firstControlPoints[1], p[0], p[1]]);\n    return tp;\n  }\n\n  getWidth() {\n    return this.getSelfRect().width;\n  }\n\n  getHeight() {\n    return this.getSelfRect().height;\n  }\n\n  getSelfRect() {\n    var points = this.points();\n\n    if (points.length < 4) {\n      return {\n        x: points[0] || 0,\n        y: points[1] || 0,\n        width: 0,\n        height: 0\n      };\n    }\n\n    if (this.tension() !== 0) {\n      points = [points[0], points[1], ...this._getTensionPoints(), points[points.length - 2], points[points.length - 1]];\n    } else {\n      points = this.points();\n    }\n\n    var minX = points[0];\n    var maxX = points[0];\n    var minY = points[1];\n    var maxY = points[1];\n    var x, y;\n\n    for (var i = 0; i < points.length / 2; i++) {\n      x = points[i * 2];\n      y = points[i * 2 + 1];\n      minX = Math.min(minX, x);\n      maxX = Math.max(maxX, x);\n      minY = Math.min(minY, y);\n      maxY = Math.max(maxY, y);\n    }\n\n    return {\n      x: minX,\n      y: minY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  }\n\n}\nLine.prototype.className = 'Line';\nLine.prototype._attrsAffectingSize = ['points', 'bezier', 'tension'];\n\n_registerNode(Line);\n\nFactory.addGetterSetter(Line, 'closed', false);\nFactory.addGetterSetter(Line, 'bezier', false);\nFactory.addGetterSetter(Line, 'tension', 0, getNumberValidator());\nFactory.addGetterSetter(Line, 'points', [], getNumberArrayValidator());","map":{"version":3,"names":["Factory","Shape","getNumberValidator","getNumberArrayValidator","_registerNode","getControlPoints","x0","y0","x1","y1","x2","y2","t","d01","Math","sqrt","pow","d12","fa","fb","p1x","p1y","p2x","p2y","expandPoints","p","tension","len","length","allPoints","n","cp","isNaN","push","Line","constructor","config","on","_clearCache","_sceneFunc","context","points","closed","bezier","tp","beginPath","moveTo","getTensionPoints","quadraticCurveTo","bezierCurveTo","lineTo","closePath","fillStrokeShape","strokeShape","_getCache","_getTensionPoints","_getTensionPointsClosed","firstControlPoints","lastControlPoints","middle","concat","getWidth","getSelfRect","width","getHeight","height","x","y","minX","maxX","minY","maxY","i","min","max","prototype","className","_attrsAffectingSize","addGetterSetter"],"sources":["C:/traffic_sim/traffic-sim/sim_ui/node_modules/konva/lib/shapes/Line.js"],"sourcesContent":["import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator, getNumberArrayValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nfunction getControlPoints(x0, y0, x1, y1, x2, y2, t) {\n    var d01 = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2)), d12 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)), fa = (t * d01) / (d01 + d12), fb = (t * d12) / (d01 + d12), p1x = x1 - fa * (x2 - x0), p1y = y1 - fa * (y2 - y0), p2x = x1 + fb * (x2 - x0), p2y = y1 + fb * (y2 - y0);\n    return [p1x, p1y, p2x, p2y];\n}\nfunction expandPoints(p, tension) {\n    var len = p.length, allPoints = [], n, cp;\n    for (n = 2; n < len - 2; n += 2) {\n        cp = getControlPoints(p[n - 2], p[n - 1], p[n], p[n + 1], p[n + 2], p[n + 3], tension);\n        if (isNaN(cp[0])) {\n            continue;\n        }\n        allPoints.push(cp[0]);\n        allPoints.push(cp[1]);\n        allPoints.push(p[n]);\n        allPoints.push(p[n + 1]);\n        allPoints.push(cp[2]);\n        allPoints.push(cp[3]);\n    }\n    return allPoints;\n}\nexport class Line extends Shape {\n    constructor(config) {\n        super(config);\n        this.on('pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva', function () {\n            this._clearCache('tensionPoints');\n        });\n    }\n    _sceneFunc(context) {\n        var points = this.points(), length = points.length, tension = this.tension(), closed = this.closed(), bezier = this.bezier(), tp, len, n;\n        if (!length) {\n            return;\n        }\n        context.beginPath();\n        context.moveTo(points[0], points[1]);\n        if (tension !== 0 && length > 4) {\n            tp = this.getTensionPoints();\n            len = tp.length;\n            n = closed ? 0 : 4;\n            if (!closed) {\n                context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);\n            }\n            while (n < len - 2) {\n                context.bezierCurveTo(tp[n++], tp[n++], tp[n++], tp[n++], tp[n++], tp[n++]);\n            }\n            if (!closed) {\n                context.quadraticCurveTo(tp[len - 2], tp[len - 1], points[length - 2], points[length - 1]);\n            }\n        }\n        else if (bezier) {\n            n = 2;\n            while (n < length) {\n                context.bezierCurveTo(points[n++], points[n++], points[n++], points[n++], points[n++], points[n++]);\n            }\n        }\n        else {\n            for (n = 2; n < length; n += 2) {\n                context.lineTo(points[n], points[n + 1]);\n            }\n        }\n        if (closed) {\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        else {\n            context.strokeShape(this);\n        }\n    }\n    getTensionPoints() {\n        return this._getCache('tensionPoints', this._getTensionPoints);\n    }\n    _getTensionPoints() {\n        if (this.closed()) {\n            return this._getTensionPointsClosed();\n        }\n        else {\n            return expandPoints(this.points(), this.tension());\n        }\n    }\n    _getTensionPointsClosed() {\n        var p = this.points(), len = p.length, tension = this.tension(), firstControlPoints = getControlPoints(p[len - 2], p[len - 1], p[0], p[1], p[2], p[3], tension), lastControlPoints = getControlPoints(p[len - 4], p[len - 3], p[len - 2], p[len - 1], p[0], p[1], tension), middle = expandPoints(p, tension), tp = [firstControlPoints[2], firstControlPoints[3]]\n            .concat(middle)\n            .concat([\n            lastControlPoints[0],\n            lastControlPoints[1],\n            p[len - 2],\n            p[len - 1],\n            lastControlPoints[2],\n            lastControlPoints[3],\n            firstControlPoints[0],\n            firstControlPoints[1],\n            p[0],\n            p[1],\n        ]);\n        return tp;\n    }\n    getWidth() {\n        return this.getSelfRect().width;\n    }\n    getHeight() {\n        return this.getSelfRect().height;\n    }\n    getSelfRect() {\n        var points = this.points();\n        if (points.length < 4) {\n            return {\n                x: points[0] || 0,\n                y: points[1] || 0,\n                width: 0,\n                height: 0,\n            };\n        }\n        if (this.tension() !== 0) {\n            points = [\n                points[0],\n                points[1],\n                ...this._getTensionPoints(),\n                points[points.length - 2],\n                points[points.length - 1],\n            ];\n        }\n        else {\n            points = this.points();\n        }\n        var minX = points[0];\n        var maxX = points[0];\n        var minY = points[1];\n        var maxY = points[1];\n        var x, y;\n        for (var i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            minX = Math.min(minX, x);\n            maxX = Math.max(maxX, x);\n            minY = Math.min(minY, y);\n            maxY = Math.max(maxY, y);\n        }\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n}\nLine.prototype.className = 'Line';\nLine.prototype._attrsAffectingSize = ['points', 'bezier', 'tension'];\n_registerNode(Line);\nFactory.addGetterSetter(Line, 'closed', false);\nFactory.addGetterSetter(Line, 'bezier', false);\nFactory.addGetterSetter(Line, 'tension', 0, getNumberValidator());\nFactory.addGetterSetter(Line, 'points', [], getNumberArrayValidator());\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}