{"ast":null,"code":"import { Util } from './Util.js';\nimport { getComponentValidator } from './Validators.js';\nvar GET = 'get',\n    SET = 'set';\nexport const Factory = {\n  addGetterSetter(constructor, attr, def, validator, after) {\n    Factory.addGetter(constructor, attr, def);\n    Factory.addSetter(constructor, attr, validator, after);\n    Factory.addOverloadedGetterSetter(constructor, attr);\n  },\n\n  addGetter(constructor, attr, def) {\n    var method = GET + Util._capitalize(attr);\n\n    constructor.prototype[method] = constructor.prototype[method] || function () {\n      var val = this.attrs[attr];\n      return val === undefined ? def : val;\n    };\n  },\n\n  addSetter(constructor, attr, validator, after) {\n    var method = SET + Util._capitalize(attr);\n\n    if (!constructor.prototype[method]) {\n      Factory.overWriteSetter(constructor, attr, validator, after);\n    }\n  },\n\n  overWriteSetter(constructor, attr, validator, after) {\n    var method = SET + Util._capitalize(attr);\n\n    constructor.prototype[method] = function (val) {\n      if (validator && val !== undefined && val !== null) {\n        val = validator.call(this, val, attr);\n      }\n\n      this._setAttr(attr, val);\n\n      if (after) {\n        after.call(this);\n      }\n\n      return this;\n    };\n  },\n\n  addComponentsGetterSetter(constructor, attr, components, validator, after) {\n    var len = components.length,\n        capitalize = Util._capitalize,\n        getter = GET + capitalize(attr),\n        setter = SET + capitalize(attr),\n        n,\n        component;\n\n    constructor.prototype[getter] = function () {\n      var ret = {};\n\n      for (n = 0; n < len; n++) {\n        component = components[n];\n        ret[component] = this.getAttr(attr + capitalize(component));\n      }\n\n      return ret;\n    };\n\n    var basicValidator = getComponentValidator(components);\n\n    constructor.prototype[setter] = function (val) {\n      var oldVal = this.attrs[attr],\n          key;\n\n      if (validator) {\n        val = validator.call(this, val);\n      }\n\n      if (basicValidator) {\n        basicValidator.call(this, val, attr);\n      }\n\n      for (key in val) {\n        if (!val.hasOwnProperty(key)) {\n          continue;\n        }\n\n        this._setAttr(attr + capitalize(key), val[key]);\n      }\n\n      if (!val) {\n        components.forEach(component => {\n          this._setAttr(attr + capitalize(component), undefined);\n        });\n      }\n\n      this._fireChangeEvent(attr, oldVal, val);\n\n      if (after) {\n        after.call(this);\n      }\n\n      return this;\n    };\n\n    Factory.addOverloadedGetterSetter(constructor, attr);\n  },\n\n  addOverloadedGetterSetter(constructor, attr) {\n    var capitalizedAttr = Util._capitalize(attr),\n        setter = SET + capitalizedAttr,\n        getter = GET + capitalizedAttr;\n\n    constructor.prototype[attr] = function () {\n      if (arguments.length) {\n        this[setter](arguments[0]);\n        return this;\n      }\n\n      return this[getter]();\n    };\n  },\n\n  addDeprecatedGetterSetter(constructor, attr, def, validator) {\n    Util.error('Adding deprecated ' + attr);\n\n    var method = GET + Util._capitalize(attr);\n\n    var message = attr + ' property is deprecated and will be removed soon. Look at Konva change log for more information.';\n\n    constructor.prototype[method] = function () {\n      Util.error(message);\n      var val = this.attrs[attr];\n      return val === undefined ? def : val;\n    };\n\n    Factory.addSetter(constructor, attr, validator, function () {\n      Util.error(message);\n    });\n    Factory.addOverloadedGetterSetter(constructor, attr);\n  },\n\n  backCompat(constructor, methods) {\n    Util.each(methods, function (oldMethodName, newMethodName) {\n      var method = constructor.prototype[newMethodName];\n\n      var oldGetter = GET + Util._capitalize(oldMethodName);\n\n      var oldSetter = SET + Util._capitalize(oldMethodName);\n\n      function deprecated() {\n        method.apply(this, arguments);\n        Util.error('\"' + oldMethodName + '\" method is deprecated and will be removed soon. Use \"\"' + newMethodName + '\" instead.');\n      }\n\n      constructor.prototype[oldMethodName] = deprecated;\n      constructor.prototype[oldGetter] = deprecated;\n      constructor.prototype[oldSetter] = deprecated;\n    });\n  },\n\n  afterSetFilter() {\n    this._filterUpToDate = false;\n  }\n\n};","map":{"version":3,"names":["Util","getComponentValidator","GET","SET","Factory","addGetterSetter","constructor","attr","def","validator","after","addGetter","addSetter","addOverloadedGetterSetter","method","_capitalize","prototype","val","attrs","undefined","overWriteSetter","call","_setAttr","addComponentsGetterSetter","components","len","length","capitalize","getter","setter","n","component","ret","getAttr","basicValidator","oldVal","key","hasOwnProperty","forEach","_fireChangeEvent","capitalizedAttr","arguments","addDeprecatedGetterSetter","error","message","backCompat","methods","each","oldMethodName","newMethodName","oldGetter","oldSetter","deprecated","apply","afterSetFilter","_filterUpToDate"],"sources":["C:/traffic_sim/traffic-sim/sim_ui/node_modules/konva/lib/Factory.js"],"sourcesContent":["import { Util } from './Util.js';\nimport { getComponentValidator } from './Validators.js';\nvar GET = 'get', SET = 'set';\nexport const Factory = {\n    addGetterSetter(constructor, attr, def, validator, after) {\n        Factory.addGetter(constructor, attr, def);\n        Factory.addSetter(constructor, attr, validator, after);\n        Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    addGetter(constructor, attr, def) {\n        var method = GET + Util._capitalize(attr);\n        constructor.prototype[method] =\n            constructor.prototype[method] ||\n                function () {\n                    var val = this.attrs[attr];\n                    return val === undefined ? def : val;\n                };\n    },\n    addSetter(constructor, attr, validator, after) {\n        var method = SET + Util._capitalize(attr);\n        if (!constructor.prototype[method]) {\n            Factory.overWriteSetter(constructor, attr, validator, after);\n        }\n    },\n    overWriteSetter(constructor, attr, validator, after) {\n        var method = SET + Util._capitalize(attr);\n        constructor.prototype[method] = function (val) {\n            if (validator && val !== undefined && val !== null) {\n                val = validator.call(this, val, attr);\n            }\n            this._setAttr(attr, val);\n            if (after) {\n                after.call(this);\n            }\n            return this;\n        };\n    },\n    addComponentsGetterSetter(constructor, attr, components, validator, after) {\n        var len = components.length, capitalize = Util._capitalize, getter = GET + capitalize(attr), setter = SET + capitalize(attr), n, component;\n        constructor.prototype[getter] = function () {\n            var ret = {};\n            for (n = 0; n < len; n++) {\n                component = components[n];\n                ret[component] = this.getAttr(attr + capitalize(component));\n            }\n            return ret;\n        };\n        var basicValidator = getComponentValidator(components);\n        constructor.prototype[setter] = function (val) {\n            var oldVal = this.attrs[attr], key;\n            if (validator) {\n                val = validator.call(this, val);\n            }\n            if (basicValidator) {\n                basicValidator.call(this, val, attr);\n            }\n            for (key in val) {\n                if (!val.hasOwnProperty(key)) {\n                    continue;\n                }\n                this._setAttr(attr + capitalize(key), val[key]);\n            }\n            if (!val) {\n                components.forEach((component) => {\n                    this._setAttr(attr + capitalize(component), undefined);\n                });\n            }\n            this._fireChangeEvent(attr, oldVal, val);\n            if (after) {\n                after.call(this);\n            }\n            return this;\n        };\n        Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    addOverloadedGetterSetter(constructor, attr) {\n        var capitalizedAttr = Util._capitalize(attr), setter = SET + capitalizedAttr, getter = GET + capitalizedAttr;\n        constructor.prototype[attr] = function () {\n            if (arguments.length) {\n                this[setter](arguments[0]);\n                return this;\n            }\n            return this[getter]();\n        };\n    },\n    addDeprecatedGetterSetter(constructor, attr, def, validator) {\n        Util.error('Adding deprecated ' + attr);\n        var method = GET + Util._capitalize(attr);\n        var message = attr +\n            ' property is deprecated and will be removed soon. Look at Konva change log for more information.';\n        constructor.prototype[method] = function () {\n            Util.error(message);\n            var val = this.attrs[attr];\n            return val === undefined ? def : val;\n        };\n        Factory.addSetter(constructor, attr, validator, function () {\n            Util.error(message);\n        });\n        Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    backCompat(constructor, methods) {\n        Util.each(methods, function (oldMethodName, newMethodName) {\n            var method = constructor.prototype[newMethodName];\n            var oldGetter = GET + Util._capitalize(oldMethodName);\n            var oldSetter = SET + Util._capitalize(oldMethodName);\n            function deprecated() {\n                method.apply(this, arguments);\n                Util.error('\"' +\n                    oldMethodName +\n                    '\" method is deprecated and will be removed soon. Use \"\"' +\n                    newMethodName +\n                    '\" instead.');\n            }\n            constructor.prototype[oldMethodName] = deprecated;\n            constructor.prototype[oldGetter] = deprecated;\n            constructor.prototype[oldSetter] = deprecated;\n        });\n    },\n    afterSetFilter() {\n        this._filterUpToDate = false;\n    },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}